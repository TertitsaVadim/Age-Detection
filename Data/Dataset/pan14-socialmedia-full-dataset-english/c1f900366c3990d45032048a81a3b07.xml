<author type="socialmedia" lang="en" gender="xx" age_group="xx" url="">
	<documents count="12">
		<document id="a855c186b51d1517ec626b984b19a5ac" url=""><![CDATA[Looking to become a CCIE?<br/><br/>A useful analogy is the freeway system, which multiplexes traffic from many smaller roads into one large flow. At any time, traffic on the freeway may exit onto smaller roads (and thus be de- multiplexed) when it approaches its final destination.  <br /><br />As an added benefit, if the multiplexing is statistical in nature, one user may consume the unused resources of someone else. During periods of congestion, however, this statistical sharing of the resource might need to be predictable to ensure that basic requirements are met. In IP networks, bandwidth is the resource, and routers provide the multiplexing.  <br /><br />Traditionally, multiplexing has been a best-effort process. However, increasingly deterministic behavior is required—you can read about such techniques in Chapter 14, &quot;Quality of Service Features.&quot; For now, it suffices to say that multiplexing saves money and can provide performance improvements while guaranteeing a minimum level of service.  <br /><br />Randomization is the process of applying random behavior to an otherwise predictable mechanism. This is an important approach to avoid the synchronization of network data or control traffic that can lead to cyclic congestion or instability. Although critical to the design of routing protocols, congestion control, and multiplexing algorithms, randomization is not currently a major factor in network topology design. However, this may change if load sharing of IP traffic through random path selection is ever shown to be a practical routing algorithm.  <br /><br />Soft state is the control of network functions through the use of control messages that are periodically refreshed. If the soft state is not refreshed, it is removed (or timed out). Soft state is also extremely important to routing functions. When routers crash, it becomes difficult to advise other routers that the associated routing information is invalidated. Nearly all routing information is kept as soft-state—if it is not refreshed, or at the very least reconfirmed in some way, it is eventually removed.  <br /><br />Soft state can be obviated by the use of static or &quot;hard-coded&quot; routes that are never invalidated. Static routes should therefore be used with extreme caution.  <br /><br />Some level of hysterisis or dampening is useful whenever there is the possibility of unbounded oscillation. These techniques are often used for processing routing updates in Interior Gateway Protocols (IGPs). If a route is withdrawn, a router may &quot;hold down&quot; that route for several minutes, even if the route is subsequently re-advertised by the IGP. This prevents an unstable route from rapidly oscillating between the used and unused states because the route can change its state only once per hold-down period.  <br /><br />Similarly, the external routing Border Gateway Protocol (BGP) applies dampening to external routes. This prevents CPU saturation that can occur when repeatedly calculating new routes, if large numbers of routes are involved.  <br /><br />Stabilizing routes in this manner also can improve network throughput because the congestion control mechanisms of TCP do not favor environments with oscillating or rapidly changing values of round-trip time or throughput on the network.  <br /><br />Localization and caching represent a variation on the earlier technique of optimizing the common case. Even in today's peer-to-peer networking model, many extremely popular data repositories (such as major Web farms) still exist. By caching commonly accessed Web data (in other words, making a localized copy of this data) it is possible to save long-distance network traffic and improve performance.  <br /><br /><a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tL2NjaWUtcm91dGluZy1hbmQtc3dpdGNoaW5n" target="_blank">ccie routing and switching workbook</a>, <a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tL2NjaWUtdm9pY2U_" target="_blank">ccie security labs</a>, <a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tL2NjaWUtc2VydmljZS1wcm92aWRlcg__" target="_blank">ccie service provider training</a>
]]>
		</document>
		<document id="bc549fd1e59fe8b5f052ffbddcb26f2b" url=""><![CDATA[EIGRP Authentication Configuration Checklist<br/><br/>The EIGRP authentication configuration process requires several commands, which are<br />summarized as follows:<br />Step 1.    Create an (authentication) key chain:<br />Create the chain and give it a name with the key chain name global command<br />(also puts the user into key chain config mode). The name does not have to<br />match on the neighboring routers.<br />Create one or more key numbers using the key number command in key<br />chain configuration mode. The key numbers do not have to match on the<br />neighboring routers.<br />Define the authentication key’s value using the key-string value command in<br />key configuration mode. The key strings must match on the neighboring routers.<br />(Optional) Define the lifetime (time period) for both sending and accepting<br />each key string.<br />Step 2.     Enable EIGRP MD5 authentication on an interface, for a particular EIGRP<br />ASN, using the ip authentication mode eigrp asn md5 interface subcommand.<br />Step 3.    Refer to the correct key chain to be used on an interface using the ip authentication<br />key-chain eigrp asn name-of-chain interface subcommand.<br />The configuration at Step 1 is fairly detailed, but Steps 2 and 3 are relatively simple. Essentially,<br />IOS configures the key values separately (Step 1) and then requires an interface subcommand<br />to refer to the key values. To support the ability to have multiple keys, and even<br />multiple sets of keys, the configuration includes the concept of a key chain and multiple<br />keys on each key chain.<br /><br /><a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tL2NjaWUtdm9pY2U_" target="_blank">ccie voice home lab</a>, <a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tL2NjaWUtcm91dGluZy1hbmQtc3dpdGNoaW5n" target="_blank">cisco ccie routing and switching</a>, <a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tL2NjaWUtc2VydmljZS1wcm92aWRlcg__" target="_blank">ccie sp blog</a>
]]>
		</document>
		<document id="9fcae3b0a92e2f6ff8194f02c5c85cee" url=""><![CDATA[Introduction to TACACS+<br/><br/>TACACS+ is the name given to the protocol and the software that are used to provide AAA functionality to an access server such as a router. The TACACS+ protocol is responsible for the packet format and communications between the access server and the TACACS+ software or daemon running on a security server. The TACACS+ daemon undertakes the functions required to provide the AAA functionality.<br /><br />Cisco's implementation of TACACS+ is currently commensurate with the description of the protocol in Internet draft version 1.77 and, more recently, version 1.78 of the draft. Search for the string 'draft-grant-tacacs-02.txt' using an Internet search engine to find the draft. This chapter focuses on the TACACS+ implementation based on this Internet draft.<br /><br />TACACS+ Daemon Functionality<br /><br />The TACACS+ daemon provides the complete AAA functionality. It allows communication between the NAS and AAA servers and facilitates the implementation of the AAA functionality on the NAS by supporting authentication, authorization, and accounting. Here's an overview of the support provided by the TACACS+ protocol in each of these three areas:<br /><br />Authentication— Provides complete control over authentication through login and password dialogs, challenges and responses, and messaging support. The authentication facility lets you conduct an arbitrary dialog with the user.. In addition, the TACACS+ authentication service supports sending messages to user screens. For example, a message could notify users that their passwords must be changed because of the company's password aging policy.<br /><br />Authorization— Provides fine-grained control over user capabilities for the duration of the user's session, including but not limited to setting autocommands, access control, session duration, and protocol support. You can also enforce restrictions on what commands a user may execute with the TACACS+ authorization feature.<br /><br />Accounting— Collects and sends information used for billing, auditing, and reporting to the TACACS+ daemon. Network managers can use the accounting facility to track user activity for a security audit or to provide information for user billing. Accounting records include user identities, start and stop times, executed commands, number of packets, and number of bytes.<br /><br />One of the important aspects of TACACS+ is the protocol that is responsible for the communications between the access server and daemon. This protocol not only provides for communications between the access server and the daemon but also encrypts all the exchanges between the server and the daemon, ensuring confidentiality. The next section goes into further details of the functionality of the TACACS+ protocol.<br /><br /><a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tL2NjaWUtc2VydmljZS1wcm92aWRlcg__" target="_blank">ccie service provider blueprint</a>, <a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tL2NjaWUtcm91dGluZy1hbmQtc3dpdGNoaW5n" target="_blank">ccie r&amp;s workbook</a>, <a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tLw__" target="_blank">CCIE Labs</a>
]]>
		</document>
		<document id="33fec56aa24e84f43523a1f8eccb724e" url=""><![CDATA[Routing Policy and the Routing Arbiter Service<br/><br/>Remember that NSFNET has been using a Policy Routing DataBase (PRD<img class="smiley" src="http://www.pan.net/smilies/cool.gif" alt=":)" /> since 1989, both to prevent routing loops when EGP was used between the backbone and the regionals, and to ensure that each regional announced correct routing information. (Incorrect information could be announced simply due to configuration errors in the regional networks.) <br /><br />When it was introduced, BGP made loop detection easy by virtue of its path attribute. If an AS appears in the path twice, the route is a loop and can therefore be ignored. The need to ensure correct route announcements from each of the regionals remained, as did the need for a PRDB. <br /><br />With the establishment of new NAPs and the introduction of new providers in the ISP market, the community grew concerned about the explosion of peering sessions at the NAPs. A full mesh of neighbor peering sessions is required by the BGP protocol, which is configured on a neighbor-by- neighbor basis. Consequent bandwidth consumption also would affect the NAP switches—and, worse, router CPU utilization would become an issue because all routers at the NAP had to independently enforce routing policy.  <br /><br />To alleviate these problems, the NSF solicited for a Routing Arbiter Service. Its role included peering with all routers at the NAP, and applying policy to incoming and outgoing routes in accordance with information in the distributed Internet Routing Registry (IRR).   <br /><br />The IRR represented a collaboration of the information in the NSFNET PRDB and the registries of the RIPE NCC in Europe, MCI, ANS, and CA*net. The format of the database was in accordance with RFC 1786, which was based on RIPE-181, the pioneering work of the European Routing Registry. A significant, tireless, and highly commendable effort on Merit's part converted the entire PRDB to RIPE-181 format. It is important to understand that the Route Server does not pass data traffic. When re- announcing BGP routing updates that comply with the policy, the Route Server leaves the BGP next-hop attribute untouched, allowing data traffic to flow directly between the peering routers. The Route Server itself is, therefore, not really a significant packet-forwarding device. In fact, SPARCstation 20s were used to perform the functionality at each NAP. By applying a centralized intelligence to route-exchange at each of the NAPs, it was also possible to collect statistics related to route-exchange that previously had been maintained by the  NSFNET. Statistics included route-flaps, the number of networks announced, and the number of Routed Ass. Unfortunately, this centralized approach also posed a problem for the Route Server model. Even though two SPARCstations were deployed for redundancy reasons, certain NSPs (particularly the large ones) were reluctant to put their critical peering capability into someone else's hands—no  matter how historically competent that person might be. That remained a factor, even if they could reduce the number of peering sessions from 50 or more to two, one for each Route Server.  Ultimately, the Routing Arbiter service at the NAP was relegated to the roles of database collation and statistics collection.   <br /><br />Not surprisingly, NSF selected a partnership that included Merit Inc. to provide the Routing Arbiter  Service.   <br /><br /><a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tL2NjaWUtc2VydmljZS1wcm92aWRlcg__" target="_blank">ccie sp</a>, <a href="http://en.pan.netcom/go/out/url=-aHR0cDovL2NjaWV0cmFpbmluZy5vdmVyYmxvZy5jb20v" target="_blank">ccie training</a>, <a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tL2NjaWUtdm9pY2U_" target="_blank">ccie voice lab study guide</a>
]]>
		</document>
		<document id="3a3d95dcee9326a3a9e58498afbb9ca6" url=""><![CDATA[Fundamentals of OSPF<br/><br/>OSPF is an Interior Gateway Protocol (IGP), whereby each router belonging to a single area maintains an identical database. The routing table is constructed from the information in this database by running a Shortest Path First algorithm. The route is installed in the table by first resolving the least-cost route to the destination. OSPF routes packets are based solely on the IP destination, so there is no room for source-based routing. OSPF also uses IP multicast for updates, but does not perform fragmentation. Instead, it relies on IP for fragmentation and  reassembly.   <br /><br />OSPF has one very significant feature: It forces hierarchy into the network by introducing areas. Creating areas reduces the size of the database information that a router must maintain. All routers within their area maintain complete information about their area in the database. Areas assist in creating smaller, more manageable subdomains within a network. Every area must be connected to the backbone area. To implement OSPF in a network, the network must include hierarchy.   <br /><br />OSPF supports equal-cost paths to the same destination. Recall that, in Cisco routers, there are four equal-cost paths, by default. The equal-cost path values can be raised to six using the max- path command. OSPF does not have periodic updates like RIP; only changes are propagated.   <br /><br />OSPF update packets are sent to multicast addresses on all broadcast and non-broadcast multiaccess media (NBMA). This reduces traffic when other routers are present on the wire because they will not listen to OSPF updates. For each operational interface in OSPF, a cost is calculated based on a certain formula. OSPF uses this interface cost to select the best path to the destination; the optimal path is determined by the sum of interface costs.   <br /><br />NOTE   <br /><br />Discontiguous networks occur when subnets of the same major network are separated by a different major network in the middle. OSPF offers full-featured support for IP subnetting. OSPF carries the network number and the mask pair in its updates, and it provides support for variable-length subnet masking (VLSM), supernets and subnets, and discontiguous networks. It is important that you become familiar with the concept of discontiguous networks. When subnets of the same major networks are separated by a different major network, the network is considered discontiguous.   <br /><br /><a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tL2NjaWUtdm9pY2U_" target="_blank">ccie voice home lab</a>, <a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tLw__" target="_blank">CCIE Bootcamp</a>, <a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tL2NjaWUtc2VydmljZS1wcm92aWRlcg__" target="_blank">ccie sp blog</a>
]]>
		</document>
		<document id="313d5155d77d7f35de79f07d1c3e65bd" url=""><![CDATA[IPv6 Address Formats<br/><br/>IPv6 addresses have eight quartets of hex digits, separated by colons. Each quartet consists of four hex digits, which together represent 16 bits. The rules for encoding the actual hex values are as follows:<br /><br />? Each quartet is separated by a colon (<img class="smiley" src="http://www.pan.net/smilies/smile.gif" alt=":)" />.<br /><br />? In a quartet, leading hex 0s can optionally be omitted.<br /><br />? If one or more consecutive quartets are hex 0000, then the set of consecutive all-0 quartets can be represented as a null quartet (:<img class="smiley" src="http://www.pan.net/smilies/smile.gif" alt=":)" />, no matter how many consecutive all-0 quartets are in this range. <br /><br />? Only one use of :: is allowed in a single IPv6 address. For example, the following IPv6 address is shown in three different valid formats. The first one uses no shortcuts; the next removes leading 0s in each quartet; and the last abbreviates multiple, consecutive, all-0 quartets with ::. 0123:0078:0000:0000:9ABC:0000:0000<img class="smiley" src="http://www.pan.net/smilies/biggrin.gif" alt=":)" />EF0<br />123:78:0:0:9ABC:0:0<img class="smiley" src="http://www.pan.net/smilies/biggrin.gif" alt=":)" />EF0<br />123:78::9ABC:0:0<img class="smiley" src="http://www.pan.net/smilies/biggrin.gif" alt=":)" />EF0<br /><br />All three versions are legal and common, but router command output generally shows the briefest form so that command output best fits on the visible screen. Also, notice that there were two places in the address with two consecutive all-0 quartets. The :: shortcut implies one or more consecutive all-0 quartets, so using this abbreviation in more than one place would be ambiguous.<br /><br /><a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tL2NjaWUtdm9pY2U_" target="_blank">ccie voice training</a>, <a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tLw__" target="_blank">CCIE Labs</a>, <a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tL2NjaWUtcm91dGluZy1hbmQtc3dpdGNoaW5n" target="_blank">ccie routing and switching</a>
]]>
		</document>
		<document id="db9a020d40d6430070d07e543d012ab2" url=""><![CDATA[Translating Some Addresses Statically and Others Dynamically<br/><br/>In some cases you might need to use a combination of the two approaches. Some internal devices will always translate to specific external addresses, but others will use a dynamic pool. This is often the case when you have a few internal servers that need to be accessed from outside of the network, but other devices that will only make outbound connections:<br /><br />Router#configure terminal<br />Enter configuration commands, one per line.  End with CNTL/Z.<br />Router(config)#access-list 15 deny 192.168.1.15 0.0.0.0<br />Router(config)#access-list 15 deny 192.168.1.16 0.0.0.0<br />Router(config)#access-list 15 permit 192.168.0.0 0.0.255.255<br />Router(config)#ip nat inside source static 192.168.1.15 172.16.1.10<br />Router(config)#ip nat inside source static 192.168.1.16 172.16.1.11<br />Router(config)#ip nat pool NATPOOL 172.16.1.100 172.16.1.150 netmask 255.255.255.0<br />Router(config)#ip nat inside source list 15 pool NATPOOL overload<br />Router(config)#interface FastEthernet0/0<br />Router(config-if)#ip address 192.168.1.1 255.255.255.0<br />Router(config-if)#ip nat inside<br />Router(config-if)#exit<br />Router(config)#interface FastEthernet0/1<br />Router(config-if)#ip address 192.168.2.1 255.255.255.0<br />Router(config-if)#ip nat inside<br />Router(config-if)#exit<br />Router(config)#interface Ethernet0/0<br />Router(config-if)#ip address 172.16.1.2 255.255.255.0<br />Router(config-if)#ip nat outside<br />Router(config-if)#exit<br />Router(config)#end<br />Router#<br /><br />In this recipe, we have the same pool of dynamic addresses. It is often useful to combine NAT techniques like this, particularly when you use the connection between these networks for several different applications. Some applications might need to work with well-known IP addresses, while others could work well from a dynamic pool.<br /><br />The access-list in this example specifically excludes the two addresses that will use static rather than dynamic NAT. This is not strictly necessary because the static NAT commands appear to have precedence over dynamic NAT in the router. However, this is still a good practice because it is absolutely clear to anybody looking at the router configuration what you intended to do.<br /><br />The other important thing to notice in this example is that we have explicitly removed the static NAT addresses from the dynamic NAT pool. The dynamic pool is from 172.16.1.100 to 172.16.1.150, and the static addresses are 172.16.1.10 and 172.16.1.11. This is critically important because the dynamic NAT allocation does not check each address in the pool to make sure that is not configured for static NAT translation. So you could get serious address conflicts if you do not explicitly separate the static from the dynamic NAT addresses.<br /><br /><a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tL2NjaWUtcm91dGluZy1hbmQtc3dpdGNoaW5n" target="_blank">ccie r&amp;s 4.0</a>, <a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tL2NjaWUtc2VydmljZS1wcm92aWRlcg__" target="_blank">ccie sp blueprint</a>, <a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tLw__" target="_blank">ccie certification training</a>
]]>
		</document>
		<document id="7732bac6460036752643ce7e0123296a" url=""><![CDATA[All of This Per VLAN!<br/><br/>As if the Spanning-Tree Protocol isn't exciting enough all by itself, it turns out that everything already discussed in the chapter actually occurs once per VLAN! In other words, Cisco uses one instance of STP per VLAN. This feature is generally referred to as PVST: per VLAN Spanning Tree.<br /><br />In other words, every VLAN can have a different Root Bridge and active topology. For example, VLAN 2 could look like part A of Figure 6-23, whereas VLAN 3 could look like part B.<br /><br />Figure 6-23. PVST Allows You to Create Different Active Topologies for Each VLAN<br /><br />In fact, this is why there is a vlan parameter on the set spantree command that you saw in the previous section. Every VLAN could have a different set of active paths. Every VLAN could have different timer values. You get the idea.<br /><br />The fact that Cisco uses one instance of STP per VLAN has two important implications:<br /><br />1. It can allow you to tap into many wonderful features such as load balancing and per-VLAN flows.<br />2. It can make your life miserable (if you don't know what you are doing).<br /><br />The goal here is to show you how to maximize the first point and avoid the second.<br /><br />On the whole, having multiple instances of Spanning Tree gives you a phenomenal tool for controlling your network. Be aware that many vendors only use one instance of STP for all VLANs. Not only does this reduce your control, but it can lead to broken networks. For example, suppose that the single instance of Spanning Tree in VLAN 1 determines the active topology for all VLANs. However, what if you remove VLAN 5 from a link used by VLAN 1—if that link is selected as part of the active topology for all VLANs, VLAN 5 becomes partitioned. The VLAN 5 users are probably pretty upset about now.<br /><br />Chapter 7 explores how to take advantage of the multiple instances of STP to accomplish advanced tasks such as STP load balancing.<br /><br /><a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tL2NjaWUtdm9pY2U_" target="_blank">ccie voice training</a>, <a href="http://en.pan.netcom/go/out/url=-aHR0cDovL2NhdGhheXNjaG9vbC5ibG9nc3BvdC5rci8_" target="_blank">cathays chool</a>, <a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tL2NjaWUtc2VydmljZS1wcm92aWRlcg__" target="_blank">ccie sp v3</a>
]]>
		</document>
		<document id="4112a23c13a102820c777ef20890fb7b" url=""><![CDATA[Associate Secondary VLANs to a Primary VLAN SVI<br/><br/>On switched virtual interfaces, or VLAN interfaces configured with Layer 3 addresses, you must configure some additional private VLAN mapping. Consider a different example, where the SVI for the primary VLAN, VLAN 200, has an IP address and participates in routing traffic. Secondary VLANs 40 (an isolated VLAN) and 50 (a community VLAN) are associated at Layer 2 with primary VLAN 200 using the configuration in Example 17-3.<br /><br />Primary VLAN 200 can forward traffic at Layer 3, but the secondary VLAN associations with it are good at only Layer 2. To allow Layer 3 traffic switching coming from the secondary VLANs as well, you must add a private VLAN mapping to the primary VLAN (SVI) interface, using the following interface configuration command:<br /><br />Switch(config-if)# private-vlan mapping  add secondaryvlan-<br />list <br /><br />The primary VLAN SVI function is extended to the secondary VLANs instead of requiring SVIs for each of them. If some mapping already has been configured for the primary VLAN SVI, you can add (add) or remove (remove) secondary VLAN mappings individually. For Example 17-3, you would map the private VLAN by adding the following commands:<br /><br />Switch(config)# interface vlan 200<br />Switch(config-if)# private-vlan mapping 40,50<br /><br /><a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tL2NjaWUtc2VydmljZS1wcm92aWRlcg__" target="_blank">ccie service provider lab</a>, <a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tL2NjaWUtdm9pY2U_" target="_blank">ccie voice</a>, <a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tL2NjaWUtcm91dGluZy1hbmQtc3dpdGNoaW5n" target="_blank">ccie r&amp;s books</a>
]]>
		</document>
		<document id="b13c2c7ed24ce46aceabba313b0e5553" url=""><![CDATA[Finding Exclusive Summary Routes—Binary<br/><br/>Finding the best inclusive summary lends itself to a formal binary process, as well as to a formal decimal process. The binary process runs as follows:<br /><br />Step 1 Write down the binary version of each component subnet, one on top of the other. <br /><br />Step 2 Inspect the binary values to find how many consecutive bits have the exact same value in all component subnets. That number of bits is the prefix length. <br /><br />Step 3 Write a new 32-bit number at the bottom of the list by copying y bits from the prior number, y being the prefix length. Write binary 0s for the remaining bits. This is the inclusive summary. <br /><br />Step 4 Convert the new number to decimal, 8 bits at a time.<br /><br />Table 4-10 shows an example of this process, using four routes, 172.31.20.0, .21.0, .22.0, and .23.0, all with prefix /24. The second example adds 172.31.24.0 to that same list.<br /><br />NOTE <br /><br />The terms inclusive summary, exclusive summary, and candidate summary are simply terms I invented for this book.<br /><br />fable 4-10 Example of Finding the Best Inclusive Summary—Binary<br />958. Finding Exclusive Summary Routes—Binary<br />A similar process, listed next, can be used to find the exclusive summary. Keep in mind that the best exclusive summary can be comprised of multiple summary routes. Once again, to keep it simple, the process assumes SLSM.<br /><br />Step 1 Find the best inclusive summary route; call it a candidate exclusive summary route. <br /><br />Step 2 Determine if the candidate summary includes any address ranges it should not. To do so, compare the summary’s implied address range with the implied address ranges of the component subnets. <br /><br />Step 3 If the candidate summary only includes addresses in the ranges implied by the component subnets, the candidate summary is part of the best exclusive summarization of the original component subnets. <br /><br />Step 4 If instead the candidate summary includes some addresses that match the candidate summary routes and some addresses that do not, split the current candidate summary in half, into two new candidate summary routes, each with a prefix 1 longer than before. <br /><br />Step 5 If the candidate summary only includes addresses outside the ranges implied by the component subnets, the candidate summary is not part of the best exclusive summarization, and it should not be split further. <br /><br />Step 6 Repeat Steps 2 through 4 for each of the two possible candidate summary routes created at Step 4.<br /><br />For example, take the same five subnets used with the inclusive example—172.31.20.0/24, .21.0, .22.0, .23.0, and .24.0. The best inclusive summary is 172.31.16.0/20, which implies an address range of 172.31.16.0 to 172.31.31.255—clearly, it includes more addresses than the original five subnets. So, repeat the process of splitting the summary in half, and repeating, until summaries are found that do not include any unnecessary address ranges. In fact, in this case, after a few more splits (not shown), the process ends up splitting to 172.31.24.0/24, which is one of the original routes—meaning that 172.31.24.0/24 cannot be summarized any further in this example.<br /><br /><a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tL2NjaWUtc2VydmljZS1wcm92aWRlcg__" target="_blank">ccie service provider v3</a>, <a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tLw__" target="_blank">ccie online training</a>, <a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tL2NjaWUtdm9pY2U_" target="_blank">ccie security practice labs</a>
]]>
		</document>
		<document id="f6a6426e3ab08bf55df705f7c02c3ea2" url=""><![CDATA[Generic Terms and Characteristics of BGP Pas<br/><br/>Each BGP PA can be described as either a well-known or optional PA. These terms refer to whether a particular implementation of BGP software must support the PA (well known) or support for the PA is not required (optional).<br /><br />Well-known PAs are either one of the following:<br /><br />? Mandatory—The PA must be in every BGP Update<br /><br />? Discretionary—The PA is not required in every BGP Update<br /><br />These classifications relate not to the capabilities of a BGP implementation, but rather to whether a particular feature has been configured or used by default. For example, the ATOMIC_AGGREGATE PA is a well-known discretionary PA. That means that all implementations of BGP must understand this PA, but a particular router adds this PA only at its discretion, in this case by a router that creates a summary route. Conversely, the AS_PATH PA is a well-known mandatory PA, and as such must be included in every BGP Update.<br /><br />BGP classifies optional PAs into one of two other categories, which relate to a router’s behavior when the router’s BGP implementation does not understand the PA:<br /><br />? Transitive—The router should silently forward the PA to other routers without needing to consider the meaning of the PA. <br /><br />? Nontransitive—The router should remove the PA so that it is not propagated to any peers.<br /><br />Table 13-6 summarizes these classification terms and definitions.<br /><br />Table 13-6 Definitions of Path Attribute Classification Terms<br /><br />The BGP PAs that have been mentioned so far in this book provide several good examples of the meanings behind the terms given in Table 13-6. Those PAs are summarized in Table 13-7, along with their characteristics.<br /><br />Table 13-7 BGP Path Attributes Covered So Far, and Their Characteristics<br /><br />Additions to BGP can be defined through the creation of new optional PAs, without requiring a new baseline RFC and a bump to a new version for BGP. The last two PAs in Table 13-7 list two such examples, both of which were added by RFC 1966 for the route reflectors feature.<br /><br /><a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tL2NjaWUtdm9pY2U_" target="_blank">ccie voice simulation</a>, <a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tLw__" target="_blank">ccie certification training</a>, <a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tL2NjaWUtc2VydmljZS1wcm92aWRlcg__" target="_blank">ccie service provider training</a>
]]>
		</document>
		<document id="8fa082d3d1114e2f42b1da779f2b3511" url=""><![CDATA[Looking to become a CCIE?<br/><br/>As an added benefit, if the multiplexing is statistical in nature, one user may consume the unused resources of someone else. During periods of congestion, however, this statistical sharing of the resource might need to be predictable to ensure that basic requirements are met. In IP networks, bandwidth is the resource, and routers provide the multiplexing.  <br /><br />Traditionally, multiplexing has been a best-effort process. However, increasingly deterministic behavior is required—you can read about such techniques in Chapter 14, &quot;Quality of Service Features.&quot; For now, it suffices to say that multiplexing saves money and can provide performance improvements while guaranteeing a minimum level of service.  <br /><br />Randomization is the process of applying random behavior to an otherwise predictable mechanism. This is an important approach to avoid the synchronization of network data or control traffic that can lead to cyclic congestion or instability. Although critical to the design of routing protocols, congestion control, and multiplexing algorithms, randomization is not currently a major factor in network topology design. However, this may change if load sharing of IP traffic through random path selection is ever shown to be a practical routing algorithm.  <br /><br />Soft state is the control of network functions through the use of control messages that are periodically refreshed. If the soft state is not refreshed, it is removed (or timed out). Soft state is also extremely important to routing functions. When routers crash, it becomes difficult to advise other routers that the associated routing information is invalidated. Nearly all routing information is kept as soft-state—if it is not refreshed, or at the very least reconfirmed in some way, it is eventually removed.  <br /><br />Soft state can be obviated by the use of static or &quot;hard-coded&quot; routes that are never invalidated. Static routes should therefore be used with extreme caution.  <br /><br />Some level of hysterisis or dampening is useful whenever there is the possibility of unbounded oscillation. These techniques are often used for processing routing updates in Interior Gateway Protocols (IGPs). If a route is withdrawn, a router may &quot;hold down&quot; that route for several minutes, even if the route is subsequently re-advertised by the IGP. This prevents an unstable route from rapidly oscillating between the used and unused states because the route can change its state only once per hold-down period.  <br /><br />Similarly, the external routing Border Gateway Protocol (BGP) applies dampening to external routes. This prevents CPU saturation that can occur when repeatedly calculating new routes, if large numbers of routes are involved.  <br /><br />Stabilizing routes in this manner also can improve network throughput because the congestion control mechanisms of TCP do not favor environments with oscillating or rapidly changing values of round-trip time or throughput on the network.  <br /><br />Localization and caching represent a variation on the earlier technique of optimizing the common case. Even in today's peer-to-peer networking model, many extremely popular data repositories (such as major Web farms) still exist. By caching commonly accessed Web data (in other words, making a localized copy of this data) it is possible to save long-distance network traffic and improve performance. Such caches can form a natural part of the network hierarchy.  <br /><br />Finally, any network topology should be carefully analyzed during failure of the design's various components. These are usually known as failure modes.  <br /><br /><a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tL2NjaWUtcm91dGluZy1hbmQtc3dpdGNoaW5n" target="_blank">ccie r&amp;s blueprint</a>, <a href="http://en.pan.netcom/go/out/url=-aHR0cDovL3d3dy5jYXRoYXlzY2hvb2wuY29tL2NjaWUtdm9pY2U_" target="_blank">ccie security rack</a>, <a href="http://en.pan.netcom/go/out/url=-aHR0cDovL2NjaWVib29rcy53b3JkcHJlc3MuY29tLw__" target="_blank">ccie books</a>
]]>
		</document>
	</documents>
</author>