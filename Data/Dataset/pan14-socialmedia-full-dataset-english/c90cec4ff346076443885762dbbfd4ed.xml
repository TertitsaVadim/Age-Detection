<author type="socialmedia" lang="en" gender="xx" age_group="xx" url="">
	<documents count="17">
		<document id="5f3e6bbbfc33433cf2589024863c1e8" url=""><![CDATA[Shibboleth SSO with different Flavor<br/><br/>Shibboleth SSO flow
<br /><br />èBoth Shibboleth SP (shibboleth-sp-2.3.1) and Shibboleth IDP (shibboleth-identityprovider-2.2.0-bin)on WIN M/C and local DB.
<br /><br />1) C<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />rogram FilesApache Software FoundationApache2.2confhttpd.conf
<br /><br />Listen 8443 https
<br /><br />UseCanonicalName on
<br /><br />LoadModule proxy_module modules/mod_proxy.so
<br /><br />LoadModule proxy_ajp_module modules/mod_proxy_ajp.so
<br /><br />LoadModule proxy_http_module modules/mod_proxy_http.so
<br /><br />LoadModule ssl_module modules/mod_ssl.so
<br /><br />ServerName servername-- for WIN check the mycomputer name and for Linux check /ect/host
<br /><br />#By siddhu for Shiboleth
<br /><br />Include C:/opt/shibboleth-sp/etc/shibboleth/apache22.config
<br /><br />#By siddhu for shibboleth
<br /><br />ProxyPass /idp/ ajp://localhost:8009/idp/
<br /><br />AuthType Basic
<br /><br />AuthName &quot;My Identity Provider&quot;
<br /><br />AuthUserFile C:/opt/shibboleth-idp/credentials/user.db
<br /><br />require valid-user
<br /><br />2) C:apache-tomcat-5.5.28confserver.xml
<br /><br />enableLookups=&quot;false&quot; redirectPort=&quot;8443&quot; protocol=&quot;AJP/1.3&quot; request.tomcatAuthentication=&quot;false&quot; address=&quot;127.0.0.1&quot;/&gt;
<br /><br />3) C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idpconfrelying-party.xml
<br /><br />defaultSigningCredentialRef=&quot;IdPCredential&quot;&gt;
<br /><br />metadataURL=&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2FipaddressofSP%3A8080%2Fmetadata%2Ftestshib-providers.xml%26quot"target="_blank" rel="nofollow">http://ipaddressofSP:8080/metadata/testshib-providers.xml&quot</a>;
<br /><br />backingFile=&quot;C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idp/metadata/local_testshib.xml&quot;&gt;
<br /><br />4) C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-spetcshibbolethshibboleth2.xml
<br /><br />5) C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idpconfhandler.xml
<br /><br />/Metadata/SAML
<br /><br />-- Uncommented this line
<br /><br />jaasConfigurationLocation=&quot;file://C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idp/conf/login.config&quot;&gt;
<br /><br />urn<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />asis:names:tc:SAML:2.0:ac:classes<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />asswordProtectedTransport
<br /><br />7) C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-spvarrunshibbolethlocal_testshib-two-idp-metadata.xml
<br /><br />8) New :Copy the certificate value from C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-spvarrunshibbolethlocal_testshib-two-idp-metadata.xml to
<br /><br />C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idpcredentialsidp.crt
<br /><br />8) Old : Copied the idp.cert value
<br /><br />C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idpcredentialsidp.crt
<br /><br />check the changes has came to C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idpmetadatalocal_testshib.xml
<br /><br />9) Create a secure folder inside Apache Server and put your first page.
<br /><br />C<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />rogram FilesApache Software FoundationApache2.2htdocssecure
<br /><br />i.e. C<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />rogram FilesApache Software FoundationApache2.2htdocssecureindex.html
<br /><br />==For Log -- Check this
<br /><br />C<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />rogram FilesApache Software FoundationApache2.2logserror.log
<br /><br />C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-spvarlogshibbolethnative.log
<br /><br />C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idplogsidp-process.log
<br /><br />è Both Shibboleth SP (shibboleth-sp-2.3.1) and Shibboleth IDP (shibboleth-identityprovider-2.2.0-bin)on WIN M/C and LDAP DB.
<br /><br />1) C<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />rogram FilesApache Software FoundationApache2.2confhttpd.conf
<br /><br />Listen 8443 https
<br /><br />UseCanonicalName on
<br /><br />LoadModule proxy_module modules/mod_proxy.so
<br /><br />LoadModule proxy_ajp_module modules/mod_proxy_ajp.so
<br /><br />LoadModule proxy_http_module modules/mod_proxy_http.so
<br /><br />LoadModule ssl_module modules/mod_ssl.so
<br /><br />ServerName servername-- for WIN check the mycomputer name and for Linux check /ect/host
<br /><br />#By siddhu for Shiboleth
<br /><br />Include C:/opt/shibboleth-sp/etc/shibboleth/apache22.config
<br /><br />#By siddhu for shibboleth
<br /><br />ProxyPass /idp/ ajp://localhost:8009/idp/
<br /><br />AuthType Basic
<br /><br />AuthName &quot;My Identity Provider&quot;
<br /><br />AuthUserFile C:/opt/shibboleth-idp/credentials/user.db
<br /><br />require valid-user
<br /><br />2) C:apache-tomcat-5.5.28confserver.xml
<br /><br />enableLookups=&quot;false&quot; redirectPort=&quot;8443&quot; protocol=&quot;AJP/1.3&quot; request.tomcatAuthentication=&quot;false&quot; address=&quot;127.0.0.1&quot;/&gt;
<br /><br />3) C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idpconfrelying-party.xml
<br /><br />defaultSigningCredentialRef=&quot;IdPCredential&quot;&gt;
<br /><br />metadataURL=&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2FipaddressofSP%3A8080%2Fmetadata%2Ftestshib-providers.xml%26quot"target="_blank" rel="nofollow">http://ipaddressofSP:8080/metadata/testshib-providers.xml&quot</a>;
<br /><br />backingFile=&quot;C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idp/metadata/local_testshib.xml&quot;&gt;
<br /><br />4) C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-spetcshibbolethshibboleth2.xml
<br /><br />5) C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idpconfhandler.xml
<br /><br />/Metadata/SAML
<br /><br />-- Uncommented this line
<br /><br />jaasConfigurationLocation=&quot;file://C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idp/conf/login.config&quot;&gt;
<br /><br />urn<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />asis:names:tc:SAML:2.0:ac:classes<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />asswordProtectedTransport
<br /><br />6) C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-spvarrunshibbolethlocal_testshib-two-idp-metadata.xml
<br /><br />8) New :Copy the certificate value from C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-spvarrunshibbolethlocal_testshib-two-idp-metadata.xml to
<br /><br />C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idpcredentialsidp.crt
<br /><br />8) Old : Copied the idp.cert value
<br /><br />C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idpcredentialsidp.crt
<br /><br />check the changes has came to C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idpmetadatalocal_testshib.xml
<br /><br />9) Create a secure folder inside Apache Server and put your first page.
<br /><br />C<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />rogram FilesApache Software FoundationApache2.2htdocssecure
<br /><br />i.e. C<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />rogram FilesApache Software FoundationApache2.2htdocssecureindex.html
<br /><br />==For Log -- Check this
<br /><br />C<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />rogram FilesApache Software FoundationApache2.2logserror.log
<br /><br />C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-spvarlogshibbolethnative.log
<br /><br />C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idplogsidp-process.log
<br /><br />=========For LDAP ==============
<br /><br />1) C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idpconflogin.config
<br /><br />edu.vt.middleware.ldap.jaas.LdapLoginModule required
<br /><br />host=&quot;localhost&quot;
<br /><br />port=&quot;10389&quot;
<br /><br />base=&quot;ou=users&quot;
<br /><br />userField=&quot;uid&quot;;
<br /><br />2) C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idpconfhandler.xml - no chagne
<br /><br />3) C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idpconflogging.xml
<br /><br />4) C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idpconfrelying-party.xml - no change
<br /><br />5) C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idpconfattribute-resolver.xml
<br /><br />ldapURL=&quot;ldap://localhost&quot; baseDN=&quot;ou=system&quot; principal=&quot;admin&quot;
<br /><br />principalCredential=&quot;secret&quot;&gt;
<br /><br />(uid=$requestContext.principalName)
<br /><br />]]&gt;
<br /><br />6) C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-spetcshibbolethshibboleth2.xml- no change
<br /><br />7) C:apache-tomcat-5.5.28webappsidplogin.jsp - no need to change
<br /><br />8) C:apache-tomcat-5.5.28webappsidpWEB-INFweb.xml - no change
<br /><br />9) C<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />rogram FilesApache Software FoundationApache2.2confhttpd.conf
<br /><br />ProxyPass /idp/ ajp://localhost:8009/idp/
<br /><br />AuthType Basic
<br /><br />AuthName &quot;My Identity Provider&quot;
<br /><br />require valid-user
<br /><br />èShibboleth SP (shibboleth-sp-2.3.1) on Linux M/C and Shibboleth IDP (shibboleth-identityprovider-2.2.0-bin)on WIN M/C and LDAP DB.
<br /><br />==========Starting of Shibboleth Services
<br /><br />/sbin/service shibd start
<br /><br />=========Starting Apache Server
<br /><br />httpd -D SSL -k start
<br /><br />==File change made for Linux SP are
<br /><br />1) /etc/shibboleth/shibboleth2.xml
<br /><br />(a)
<br /><br />(<img class="smiley" src="http://www.pan.net/smilies/cool.gif" alt=":)" />
<br /><br />(c)
<br /><br />entityID=&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Flocalhost%2Fidp%2Fshibboleth%26quot"target="_blank" rel="nofollow">http://localhost/idp/shibboleth&quot</a>;
<br /><br />REMOTE_USER=&quot;eppn persistent-id targeted-id&quot;
<br /><br />signing=&quot;false&quot; encryption=&quot;false&quot;&gt;
<br /><br />(d)
<br /><br />handlerURL=&quot;/Shibboleth.sso&quot; handlerSSL=&quot;false&quot;
<br /><br />exportLocation=&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Flocalhost%2FShibboleth.sso%2FGetAssertion%26quot"target="_blank" rel="nofollow">http://localhost/Shibboleth.sso/GetAssertion&quot</a>; exportACL=&quot;127.0.0.1&quot;
<br /><br />idpHistory=&quot;false&quot; idpHistoryDays=&quot;7&quot;&gt;
<br /><br />(e)
<br /><br />relayState=&quot;cookie&quot; entityID=&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Flocalhost%2Fidp%2Fshibboleth%26quot"target="_blank" rel="nofollow">http://localhost/idp/shibboleth&quot</a>; acsIndex=&quot;1&quot; template=&quot;/etc/shibboleth/bindingTemplate.html&quot;&gt;
<br /><br />(f)
<br /><br />backingFilePath=&quot;local_testshib-two-idp-metadata.xml&quot; reloadInterval=&quot;7200&quot;&gt;
<br /><br />2) etc/httpd/conf/httpd.conf
<br /><br />#by siddhu for shibboleth
<br /><br />Listen 8443 https
<br /><br />UseCanonicalName on
<br /><br />ServerName servername-- for WIN check the mycomputer name and for Linux check /ect/host
<br /><br />#by siddhu for Shibboleth
<br /><br />Include /etc/shibboleth/apache22.config
<br /><br />#By siddhu for shibboleth
<br /><br />ProxyPass /idp/ ajp://localhost:8009/idp/
<br /><br />#ProxyPass /tomcat/ ajp://ipaddressofIDP:8080/idp/
<br /><br />AuthType Basic
<br /><br />AuthName &quot;My Identity Provider&quot;
<br /><br />require valid-user
<br /><br />===On IDP Side
<br /><br />1) c<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idpconfrelying-party.xml
<br /><br />Added metadata for SP
<br /><br />metadataURL=&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2FipaddressofSP%2FShibboleth.sso%2FMetadata%26quot"target="_blank" rel="nofollow">http://ipaddressofSP/Shibboleth.sso/Metadata&quot</a>;
<br /><br />backingFile=&quot;C:/opt/shibboleth-idp/metadata/local_testshib1.xml&quot;&gt;
<br /><br />2) Change whole idp-metadata.xml inside c<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idpmetadataidp-metadata.xml
]]>
		</document>
		<document id="8a735cb2fdd8297e90f17c92dc1297b" url=""><![CDATA[Short Description of Shibboleth SSO<br/><br/> Core center of Shibboleth SSO are two components
<br /><br />1) IDP –Identity provider – It is software which is installed on the Server M/C which behaves as IDP for the request coming from SP.
<br /><br />2) SP – Service Provider – It is software which is installed on the Server M/C (where site which is access by the end user is strike) which is used to make a call to IDP to get the authentication for the user call.
<br /><br />Q 1) How Shibboleth SSO Work ?
<br /><br />Flow
<br /><br />User (through Browser) à hit to SP M/C i.e. where site is hosted and SP software is installedàHaving said SP software installed means on that M/C Shibboleth Service is in running mode. àThis SP M/C i.e. SP service divert this call to the IDP M/C. à Inside IDP M/C (Where IDP software is installed) take the call and divert it to implementation of IDP and show the user login page. à Once the user get logged in he/she will be diverted first page.
<br /><br />Description:
<br /><br />1) Identity Provider:
<br /><br />a) Installation
<br /><br />- Download and install Java 1.5+, Tomcat 5.5 (core) and Apache 2.2+. Install Tomcat at /usr/local/tomcat. Avoid other distributions of Tomcat, such as from yum. Make sure the $JAVA_HOME environment variable points at the root of your JDK.
<br /><br />- Download the IdP .bin binary installer from<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fshibboleth.internet2.edu%2Fdownloads%2Fshibboleth%2Fidp%2F2.1.1%2F"target="_blank" rel="nofollow">http://shibboleth.internet2.edu/downloads/shibboleth/idp/2.1.1/</a>, unzip it, and move to that directory.
<br /><br />curl -O <a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fshibboleth.internet2.edu%2Fdownloads%2Fshibboleth%2Fidp%2F2.1.1%2Fshibboleth-identityprovider-2.1.1-bin.zip"target="_blank" rel="nofollow">http://shibboleth.internet2.edu/downloads/shibboleth/idp/2.1.1/shibboleth-identityprovider-2.1.1-bin.zip</a>
<br /><br />unzip shibboleth-identityprovider-2.1.1-bin.zip
<br /><br />cd identityprovider/
<br /><br />- Run sh install.sh. This is a new installation. Please use /usr/local/idp for your IdP directory.
<br /><br />sh install.sh
<br /><br />- Configure Apache by adding the following line to mod_proxy_ajp.conf or httpd.conf to pass requests for the IdP into Tomcat:
<br /><br />ProxyPass /idp/ ajp://localhost:8009/idp/
<br /><br />Enable Tomcat to run the IdP by endorsing additional libraries for XML processing.
<br /><br />cp endorsed/*.jar /usr/local/tomcat/common/endorsed/
<br /><br />- Add request.tomcatAuthentication=&amp;amp;quot;false&amp;amp;quot; and Address=&amp;amp;quot;127.0.0.1&amp;amp;quot; to Tomcat's /usr/local/tomcat/conf/server.xml port 8009 AJP13 connector so Apache can relay usernames to the IdP.
<br /><br />request.tomcatAuthentication=&amp;amp;quot;false&amp;amp;quot; address=&amp;amp;quot;127.0.0.1&amp;amp;quot; /&amp;amp;gt;
<br /><br />Define the following in httpd.conf or ssl.conf to front-end your IdP with basic authentication.
<br /><br />AuthType Basic
<br /><br />AuthName &amp;amp;quot;My Identity Provider&amp;amp;quot;
<br /><br />AuthUserFile /usr/local/idp/credentials/user.db
<br /><br />require valid-user
<br /><br />- Create a test user or two using the htpasswd command.
<br /><br />htpasswd -c /usr/local/idp/credentials/user.db spiderman
<br /><br />- Install the IdP into Tomcat.
<br /><br />cp /usr/local/idp/war/idp.war /usr/local/tomcat/webapps/
<br /><br />Note: Here we had used Apache as the request from SP may come from any server i.e. SP site may be hosted on any technology i.e. Perl, PHP, JAVA and on beck end of Apache server implementation of IDP (idp.war) is done on the Apache Tomcat.
<br /><br />2) Service Provider:
<br /><br /><img class="smiley" src="http://www.pan.net/smilies/cool.gif" alt=":)" /> Installation
<br /><br />Take SP software set up for specified M/C i.e. if my site is hosted on TOMCAT on Window M/C then I Need SP Software for Window Machine. Choose the installation for above requirement from<a href="http://en.pan.netcom/go/out/url=https%3A%2F%2Fspaces.internet2.edu%2Fdisplay%2FSHIB2%2FNativeSPWindowsApacheInstaller"target="_blank" rel="nofollow">https://spaces.internet2.edu/display/SHIB2/NativeSPWindowsApacheInstaller</a>
<br /><br />Configuration:
<br /><br />This is the most important part of Shibboleth
<br /><br />Note: below given changes are done keeping in mind
<br /><br />IDP à Apache + Apache Tomcat
<br /><br />SP à Installed on Window M/C with Setup for Apache.
<br /><br />è Apache is installed on window M/C at path
<br /><br />C<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />rogram FilesApache Software FoundationApache2.2bin
<br /><br />è Tomcat is installed on Window M/C at path
<br /><br />C:apache-tomcat-5.5.28bin
<br /><br />è IDP software is installed at path
<br /><br />C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idp
<br /><br />è SP is installed on Window M/C at Path
<br /><br />C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-sp
<br /><br />Following are the changed made into the respective file of the servers:
<br /><br />1) C<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />rogram FilesApache Software FoundationApache2.2confhttpd.conf
<br /><br />2) C:apache-tomcat-5.5.28confserver.xml
<br /><br />3) C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idpconfrelying-party.xml
<br /><br />4) C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-spetcshibbolethshibboleth2.xml
<br /><br />Changes Description:
<br /><br />1) httpd.Conf
<br /><br />a) Listen 8443 https : to indicate Apache should listen to port 8443 for https protocol.
<br /><br /><img class="smiley" src="http://www.pan.net/smilies/cool.gif" alt=":)" /> UseCanonicalName on : use to tell Apache to use basic name of the server rather than ip address.
<br /><br />c) LoadModule proxy_module modules/mod_proxy.so : use to tell apache to use proxy .so when requested.
<br /><br />d) LoadModule proxy_ajp_module modules/mod_proxy_ajp.so : use to tell apache to use proxy .so when ajp request comes.
<br /><br />e) LoadModule proxy_http_module modules/mod_proxy_http.so : use to tell apache to use proxy .so for http request.
<br /><br />f) ServerName servername:80 – indicating that Apache server is listening at port 80.
<br /><br />g) #By siddhu for Shiboleth
<br /><br />Include C:/opt/shibboleth-sp/etc/shibboleth/apache22.config
<br /><br />h) #By siddhu for shibboleth
<br /><br />ProxyPass /idp/ ajp://localhost:8009/idp/ : this tell the apache server to divert the call from any request which contain /idp/ in url to ajp://localhost:8009/idp/ which is out Apache Tomcat running behind the Apache at IDP end on port 8009 to show the login screen to the user.
<br /><br />i)
<br /><br />AuthType Basic
<br /><br />AuthName &amp;amp;quot;My Identity Provider&amp;amp;quot;
<br /><br />AuthUserFile C:/opt/shibboleth-idp/credentials/user.db : this show the db where user credential is kept for Authetication.
<br /><br />require valid-user
<br /><br />2) server.xml : Telling apache server to redirect the response from Apache Tomcat at port 8009 to Apache on address 127.0.0.1 at 8443 port.
<br /><br />enableLookups=&amp;amp;quot;false&amp;amp;quot; redirectPort=&amp;amp;quot;8443&amp;amp;quot; protocol=&amp;amp;quot;AJP/1.3&amp;amp;quot; request.tomcatAuthentication=&amp;amp;quot;false&amp;amp;quot; address=&amp;amp;quot;127.0.0.1&amp;amp;quot;/&amp;amp;gt;
<br /><br />3) relying-party.xml:
<br /><br />The most important file that need to be configure at the IDP end . IDP of Shibboleth depends on the configuration of this file for all the request from SP.
<br /><br />Main parameter need to be taken into consideration while using relying-party.xml are
<br /><br />a) AnonymousRelyingParty :
<br /><br />This tag provide the relying party entityid address i.e. <a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Flocalhost%2Fidp%2Fshibboleth"target="_blank" rel="nofollow">http://localhost/idp/shibboleth</a> this entity id is the common between both IDP and SP.
<br /><br /><img class="smiley" src="http://www.pan.net/smilies/cool.gif" alt=":)" /> DefaultRelyingParty :
<br /><br />defaultSigningCredentialRef=&amp;amp;quot;IdPCredential&amp;amp;quot;&amp;amp;gt;
<br /><br />This tag provide the relying party entityid address i.e. <a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Flocalhost%2Fidp%2Fshibboleth"target="_blank" rel="nofollow">http://localhost/idp/shibboleth</a> this entity id is the common between both IDP and SP.
<br /><br />c) MetadataProvider:
<br /><br />metadataURL=&amp;amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Flocalhost%2FShibboleth.sso%2FMetadata%26amp%3Bamp%3Bquot"target="_blank" rel="nofollow">http://localhost/Shibboleth.sso/Metadata&amp;amp;quot</a>;
<br /><br />backingFile=&amp;amp;quot;C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idp/metadata/local_testshib.xml&amp;amp;quot;&amp;amp;gt;
<br /><br />this tag gives information that this IDP used FileBackedHTTPMetadataProvider means it take the values /metadata from the url i.e. metadataURL=&amp;amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Flocalhost%2FShibboleth.sso%2FMetadata%26amp%3Bamp%3Bquot%3Band"target="_blank" rel="nofollow">http://localhost/Shibboleth.sso/Metadata&amp;amp;quot;and</a> store it at local on path backingFile=&amp;amp;quot;C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idp/metadata/local_testshib.xml&amp;amp;quot;&amp;amp;gt;
<br /><br />here <a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Flocalhost%2FShibboleth.sso%2FMetadata"target="_blank" rel="nofollow">http://localhost/Shibboleth.sso/Metadata</a> terms need to be common between the IDP and SP configuration. IDP and SP understand only this unique Entity ID.
<br /><br />d) Security: this show which key and certificate is used by the IDP to verify the data which is came from the SP.
<br /><br />C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idp/credentials/idp.key
<br /><br />C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idp/credentials/idp.crt
<br /><br />4) shibboleth2.xml
<br /><br />This is the most common and important file for configuration for the SP side of the shibboleth.
<br /><br />Main parameter need to be taken into consideration while using shibboleth2.xml are
<br /><br />a) ApplicationDefaults: here we will specify the name of Entity Id which should match to the name which we had given for configuration of IDP.
<br /><br /><img class="smiley" src="http://www.pan.net/smilies/cool.gif" alt=":)" /> SessionInitiator : this tag maps the entityid and maintain a session. AssertionConsumerService tells which protocol is supported by this SP for the request coming from IDP i.e. SAML2 or SAML and which method POST or GET. Generally it is POST. Acl parameter indicate the address where the server is installed.
<br /><br />c) MetadataProvider: this MetadataProvider contains the information which should match with the MetadataProvider of the IDP MetadataProvider in C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idpconfrelying-party.xml.
<br /><br />How to run the whole process
<br /><br />1) Make above all configuration changes
<br /><br />2) Start Shibboleth services from services.msc from the SP M/C indicating that all the request from the client or end user to this site hosted on this M/C is intercepted by this process.
<br /><br />3) Start Apache server using
<br /><br />C<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />rogram FilesApache Software FoundationApache2.2bin&amp;amp;gt;httpd -D SSL -k start
<br /><br />4) Start Tomcat
<br /><br />Note Please refer to the following log for each above steps:
<br /><br />C<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />rogram FilesApache Software FoundationApache2.2logserror.log
<br /><br />C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-spvarlogshibbolethnative.log
<br /><br />C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-spvarlogshibbolethshibd.log
<br /><br />C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idplogsidp-process.log
<br /><br />Testing:
<br /><br />After doing the above 4 step check that all IDP and SP are running as per need:
<br /><br />-For Tomcat – this will give the root page of the tomcat indicating tomcat is running properly
<br /><br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Flocalhost%3A8080%2F"target="_blank" rel="nofollow">http://localhost:8080/</a>
<br /><br />-For Apache – this will give the root page for Apache server
<br /><br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Flocalhost%3A8443%2F"target="_blank" rel="nofollow">http://localhost:8443/</a>
<br /><br />- To check IDP – this will give ok as output indicating that IDP is installed and running properly.
<br /><br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Flocalhost%3A8080%2Fidp%2Fprofile%2FStatus"target="_blank" rel="nofollow">http://localhost:8080/idp/profile/Status</a>
<br /><br />- To check SP on Apache -- we will get xml as out put is example we can check for the EntityId
<br /><br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Flocalhost%3A8443%2FShibboleth.sso%2FStatus"target="_blank" rel="nofollow">http://localhost:8443/Shibboleth.sso/Status</a> <a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Flocalhost%3A8443%2FShibboleth.sso%2FSession"target="_blank" rel="nofollow">http://localhost:8443/Shibboleth.sso/Session</a>
<br /><br />-Finally Hit following url
<br /><br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Flocalhost%3A8443%2Fsecure"target="_blank" rel="nofollow">http://localhost:8443/secure</a>
<br /><br />or
<br /><br />http:localhost/secure
<br /><br />this will divert you to login screen which you had developed … enter the user id and password which you had created
<br /><br />====Files changes to configure Shibboleth IDP 2.1.0 with Shibboleth 2.3.1 for Local DB
<br /><br />1) C<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />rogram FilesApache Software FoundationApache2.2confhttpd.confListen 8443 httpsUseCanonicalName on
<br />LoadModule proxy_module modules/mod_proxy.soLoadModule proxy_ajp_module modules/mod_proxy_ajp.soLoadModule proxy_http_module modules/mod_proxy_http.soLoadModule ssl_module modules/mod_ssl.soServerName servername:80
<br />#By siddhu for ShibolethInclude C:/opt/shibboleth-sp/etc/shibboleth/apache22.config
<br />#By siddhu for shibbolethProxyPass /idp/ ajp://localhost:8009/idp/ AuthType Basic AuthName &amp;amp;quot;My Identity Provider&amp;amp;quot; AuthUserFile C:/opt/shibboleth-idp/credentials/user.db require valid-user
<br />2) C:apache-tomcat-5.5.28confserver.xml
<br />3) C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idpconfrelying-party.xml
<br /><br />4) C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-spetcshibbolethshibboleth2.xml
<br />5) C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idpconfhandler.xml
<br />/Metadata/SAML -- Uncommented this line urn<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />asis:names:tc:SAML:2.0:ac:classes<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />asswordProtectedTransport 
<br />6) C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-spvarrunshibbolethlocal_testshib-two-idp-metadata.xml
<br />8) finally if you get message as service registered but not singed then Modify File local_testshib-two-idp-metadata.xml at C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-spvarrunshibbolethlocal_testshib-two-idp-metadata.xml from C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-spetcshibbolethshibboleth2.xmland copied the value of idp.crt into the local_testshib-two-idp-metadata.xml and problem solved.
<br /><br />8) Create a secure folder inside Apache Server and put your first page.C<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />rogram FilesApache Software FoundationApache2.2htdocssecure
<br />i.e. C<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />rogram FilesApache Software FoundationApache2.2htdocssecureindex.html
<br /><br />==For Log -- Check this
<br /><br />C<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />rogram FilesApache Software FoundationApache2.2logserror.log
<br /><br />C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-spvarlogshibbolethnative.log
<br /><br />C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idplogsidp-process.log
<br /><br />======Files changes to configure LDAP for Shibboleth IDP 2.2.0 and Shibboleth SP 2.3.1
<br /><br />1) C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idpconflogin.config
<br /><br />edu.vt.middleware.ldap.jaas.LdapLoginModule required
<br /><br />host=&amp;amp;quot;localhost&amp;amp;quot;
<br /><br />port=&amp;amp;quot;10389&amp;amp;quot;
<br /><br />base=&amp;amp;quot;ou=users&amp;amp;quot;
<br /><br />userField=&amp;amp;quot;uid&amp;amp;quot;;
<br /><br />2) C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idpconfhandler.xml
<br /><br />jaasConfigurationLocation=&amp;amp;quot;file://C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idp/conf/login.config&amp;amp;quot; authenticationDuration=&amp;amp;quot;720&amp;amp;quot;&amp;amp;gt;
<br /><br />urn<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />asis:names:tc:SAML:2.0:ac:classes<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />asswordProtectedTransport
<br /><br />3) C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idpconflogging.xml
<br /><br />4) C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idpconfrelying-party.xml
<br /><br />defaultSigningCredentialRef=&amp;amp;quot;IdPCredential&amp;amp;quot; /&amp;amp;gt;
<br /><br />defaultSigningCredentialRef=&amp;amp;quot;IdPCredential&amp;amp;quot;
<br /><br />defaultAuthenticationMethod=&amp;amp;quot;urn<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />asis:names:tc:SAML:2.0:ac:classes<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />asswordProtectedTransport&amp;amp;quot;&amp;amp;gt;
<br /><br />includeAttributeStatement=&amp;amp;quot;true&amp;amp;quot;
<br /><br />assertionLifetime=&amp;amp;quot;PT5M&amp;amp;quot;
<br /><br />assertionProxyCount=&amp;amp;quot;0&amp;amp;quot;
<br /><br />signResponses=&amp;amp;quot;conditional&amp;amp;quot;
<br /><br />signAssertions=&amp;amp;quot;never&amp;amp;quot;
<br /><br />encryptAssertions=&amp;amp;quot;conditional&amp;amp;quot;
<br /><br />encryptNameIds=&amp;amp;quot;conditional&amp;amp;quot; /&amp;amp;gt;
<br /><br />assertionLifetime=&amp;amp;quot;PT5M&amp;amp;quot;
<br /><br />assertionProxyCount=&amp;amp;quot;0&amp;amp;quot;
<br /><br />signResponses=&amp;amp;quot;conditional&amp;amp;quot;
<br /><br />signAssertions=&amp;amp;quot;never&amp;amp;quot;
<br /><br />encryptAssertions=&amp;amp;quot;conditional&amp;amp;quot;
<br /><br />encryptNameIds=&amp;amp;quot;conditional&amp;amp;quot; /&amp;amp;gt;
<br /><br />signResponses=&amp;amp;quot;conditional&amp;amp;quot;
<br /><br />signAssertions=&amp;amp;quot;never&amp;amp;quot;
<br /><br />encryptAssertions=&amp;amp;quot;conditional&amp;amp;quot;
<br /><br />encryptNameIds=&amp;amp;quot;conditional&amp;amp;quot; /&amp;amp;gt;
<br /><br />metadataURL=&amp;amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Flocalhost%2FShibboleth.sso%2FMetadata%26amp%3Bamp%3Bquot"target="_blank" rel="nofollow">http://localhost/Shibboleth.sso/Metadata&amp;amp;quot</a>;
<br /><br />backingFile=&amp;amp;quot;C:/opt/shibboleth-idp/metadata/local_testshib.xml&amp;amp;quot;&amp;amp;gt;
<br /><br />5) C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idpconfattribute-resolver.xml
<br /><br />ldapURL=&amp;amp;quot;ldap://localhost:10389&amp;amp;quot;
<br /><br />baseDN=&amp;amp;quot;ou=system&amp;amp;quot;
<br /><br />principal=&amp;amp;quot;uid=admin,ou=system&amp;amp;quot;
<br /><br />principalCredential=&amp;amp;quot;secret&amp;amp;quot;
<br /><br />lowercaseAttributeNames=&amp;amp;quot;true&amp;amp;quot;&amp;amp;gt;
<br /><br />(uid=$requestContext.principalName)
<br /><br />]]&amp;amp;gt;
<br /><br />6) C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-spetcshibbolethshibboleth2.xml
<br /><br />7) C:apache-tomcat-5.5.28webappsidplogin.jsp -- No Change
<br /><br />8) C:apache-tomcat-5.5.28webappsidpWEB-INFweb.xml -- No Change
<br /><br />9) C<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />rogram FilesApache Software FoundationApache2.2confhttpd.conf
<br /><br />Listen 80
<br /><br />Listen 8443 https
<br /><br />UseCanonicalName on
<br /><br />LoadModule proxy_module modules/mod_proxy.so
<br /><br />LoadModule proxy_ajp_module modules/mod_proxy_ajp.so
<br /><br />LoadModule proxy_http_module modules/mod_proxy_http.so
<br /><br />LoadModule ssl_module modules/mod_ssl.so
<br /><br />ServerName servername:80
<br /><br />#By siddhu for Shiboleth
<br /><br />Include C:/opt/shibboleth-sp/etc/shibboleth/apache22.config
<br /><br />ProxyPass /idp/ ajp://localhost:8009/idp/
<br /><br />AuthType Basic
<br /><br />AuthName &amp;amp;quot;My Identity Provider&amp;amp;quot;
<br /><br />require valid-user
<br /><br />10) Created a File local_testshib.xml by hitting <a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Flocalhost%2FShibboleth.sso%2FMetadata"target="_blank" rel="nofollow">http://localhost/Shibboleth.sso/Metadata</a> of metadataURL=&amp;amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Flocalhost%2FShibboleth.sso%2FMetadata%26amp%3Bamp%3Bquot"target="_blank" rel="nofollow">http://localhost/Shibboleth.sso/Metadata&amp;amp;quot</a>;
<br /><br />inside relying-party.xml and copy/download the output File into the location with name local_testshib.xml
<br /><br />C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-idpmetadatalocal_testshib.xml
<br /><br />(11) finally if you get message as service registered but not singed then Modify File local_testshib-two-idp-metadata.xml at C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-spvarrunshibbolethlocal_testshib-two-idp-metadata.xml from C<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ptshibboleth-spetcshibbolethshibboleth2.xml
<br /><br />and copied the value of idp.crt into the local_testshib-two-idp-metadata.xml and problem solved.
]]>
		</document>
		<document id="9ef202a9a1df1ea1643b7a8fd1a16666" url=""><![CDATA[How to receive what was sent by convertAndSend using JsonMes<br/><br/>Genereally this comes into the picture when we use JsonMessageConverter for sending and receiving message in RabbitMQ.
<br />We generally get Message object (org.springframework.amqp.core.Message) in onMessage(Message message) of receiver which is of form JSON. To get the desired value from this JSON object use this code in listener  i.e. onMessage(Message message) of receiver
<br /><br />JsonMessageConverter jmc = new JsonMessageConverter();
<br />                   TestUser u = (TestUser)jmc.fromMessage(message);
<br />               System.out.println(&quot;received: &quot; + u.getName());
]]>
		</document>
		<document id="1c4af69ef257d6b4f08a199b3c03a777" url=""><![CDATA[Converting Message of RabbitMQ to JSON using JsonMessageConv<br/><br/>When we talk about RabbitMQ in Async Mode using spring and has the requirement where message is send by application working in different language, in that case it becomes mandatory for us use the default JsonMessageConverter provided by Spring for AMQP. This class helps us to marshal and demarshal the message before sending to the Exchange/Queue and receiving it to client.
<br />Please find the below code TestSendAsycRMQ class send the message into the Exchange testAsyncExchange with routing key testAsyncRK, when the message enter the queue testAsyncQueue as per the configuration in rabbitConfiguration.xml it will invoke messageListener which is our receiver class rabbitMQ.TestReceiverAsycRMQ.
<br />How the Spring flow work here:
<br />We are providing SimpleMessageListenerContainer class with connectionFactory and queuename along with listener. connectionFactory helps SimpleMessageListenerContainer to get the connection. Further in our TestSendAsycRMQ we create the instance of RabbitTemplate which will refer to bean id=”rabbitTemplate” of rabbitConfiguration.xml by initializing it with default messageConverter as JsonMessageConverter.
<br />Note: To work with JsonMessageConverter for AMQP we need to have jackson-mapper-asl-1.5.8.jar and jackson-core-asl-1.5.3.jar in your class path.
<br /><br />TestSendAsycRMQ:
<br />package rabbitMQ;
<br />import org.springframework.amqp.rabbit.core.RabbitTemplate;
<br />import org.springframework.amqp.support.converter.JsonMessageConverter;
<br />import org.springframework.amqp.support.converter.MessageConverter;
<br />import org.springframework.context.ConfigurableApplicationContext;
<br />import org.springframework.context.annotation.Bean;
<br />import org.springframework.context.support.ClassPathXmlApplicationContext;
<br />import com.rabbitmq.client.Channel;
<br />import com.rabbitmq.client.Connection;
<br />import com.rabbitmq.client.ConnectionFactory;
<br />public class TestSendAsycRMQ {
<br />Connection conn = null;
<br />ConnectionFactory factory;
<br />Channel chan;
<br />public void sendAsyncRabbitMQMessage(String strQueueName)
<br />{
<br />try{
<br />ConfigurableApplicationContext context = new ClassPathXmlApplicationContext(“/rabbitConfiguration.xml”);
<br />RabbitTemplate rabbitTemplate = (RabbitTemplate)context.getBean(“rabbitTemplate”);
<br />String exchangeName = “testAsyncExchange”;
<br />rabbitTemplate.setExchange(exchangeName);
<br />String routingKey = “”;
<br />if(strQueueName.trim().equals(“testAsyncQueue”))
<br />{
<br />for(int i=0;i&amp;lt;5;i++)
<br />{
<br />routingKey = “testAsyncRK”;
<br />rabbitTemplate.setRoutingKey(routingKey);
<br />rabbitTemplate.setQueue(“testAsyncQueue”);
<br />rabbitTemplate.convertAndSend(“hi”);
<br />}
<br />}System.out.println(“Completed the flow:”);
<br />}
<br />catch(Exception e)
<br />{
<br />e.printStackTrace();
<br />}
<br />}
<br />public static void main(String agrs[])
<br />{
<br />TestSendAsycRMQ objTestSendAsycRabbitMQ = new TestSendAsycRMQ();
<br />objTestSendAsycRabbitMQ.sendAsyncRabbitMQMessage(“testAsyncQueue”);
<br />}
<br />}
<br />TestReceiverAsycRMQ:
<br />package rabbitMQ;
<br />import org.springframework.amqp.core.Message;
<br />import org.springframework.amqp.core.MessageListener;
<br />import org.springframework.amqp.support.converter.JsonMessageConverter;
<br />import com.rabbitmq.client.Channel;
<br />import com.rabbitmq.client.Connection;
<br />import com.rabbitmq.client.ConnectionFactory;
<br />public class TestReceiverAsycRMQ implements MessageListener{
<br />Connection conn = null;
<br />ConnectionFactory factory;
<br />Channel chan;
<br />@Override
<br />public void onMessage(Message message) {
<br />try{
<br />JsonMessageConverter jmc = new JsonMessageConverter();
<br />String u = (String)jmc.fromMessage(message);
<br />System.out.println(“received: ” + u);
<br />System.out.println(“received: ” + message);
<br />}catch(Exception ex)
<br />{
<br />ex.printStackTrace();
<br />}
<br />}
<br />}
<br />rabbitConfiguration.xml:
<br /><br />id=&amp;quot;connectionFactory&amp;quot; class=&amp;quot;org.springframework.amqp.rabbit.connection.SingleConnectionFactory&amp;quot;&amp;gt;
<br /><br />id=&amp;quot;rabbitTemplate&amp;quot; class=&amp;quot;org.springframework.amqp.rabbit.core.RabbitTemplate&amp;quot;
<br />p:connectionFactory-ref=&amp;quot;connectionFactory&amp;quot;
<br />p:messageConverter-ref=&amp;quot;messageConverter&amp;quot;
<br /><br />id=&amp;quot;messageConverter&amp;quot; class=&amp;quot;org.springframework.amqp.support.converter.JsonMessageConverter&amp;quot;&amp;gt;
<br /><br />id=&amp;quot;messageListener&amp;quot; class=&amp;quot;rabbitMQ.TestReceiverAsycRMQ&amp;quot;&amp;gt;
<br /><br />class=&amp;quot;org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer&amp;quot;
<br />p:connectionFactory-ref=&amp;quot;connectionFactory&amp;quot;
<br />p:queueName=&amp;quot;testAsyncQueue&amp;quot;
<br />p:messageListener-ref=&amp;quot;messageListener&amp;quot; 
<br />p:concurrentConsumers=&amp;quot;10&amp;quot;
<br />p:channelTransacted=&amp;quot;true&amp;quot;
<br />p<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />refetchCount=&amp;quot;1&amp;quot;
<br /><br />class=&amp;quot;org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer&amp;quot;
<br />p:connectionFactory-ref=&amp;quot;connectionFactory&amp;quot;
<br />p:queueName=&amp;quot;testQueue&amp;quot;
<br />p:messageListener-ref=&amp;quot;messageListener&amp;quot;
<br /><br />rabbitConfiguration.xml with Spring Frame for Exchange/Queue:
<br /><br />id=&amp;quot;connectionFactory&amp;quot; class=&amp;quot;org.springframework.amqp.rabbit.connection.SingleConnectionFactory&amp;quot;&amp;gt;
<br /><br />id=&amp;quot;rabbitTemplate&amp;quot; class=&amp;quot;org.springframework.amqp.rabbit.core.RabbitTemplate&amp;quot;
<br />p:connectionFactory-ref=&amp;quot;connectionFactory&amp;quot;
<br />p:messageConverter-ref=&amp;quot;messageConverter&amp;quot;
<br />p:queue=&amp;quot;testAsyncQueue, testQueue&amp;quot;
<br />p:routingKey=&amp;quot;testAsyncRK&amp;quot;
<br />p:exchange=&amp;quot;testAsyncExchange&amp;quot;
<br /><br />id=&amp;quot;messageConverter&amp;quot; class=&amp;quot;org.springframework.amqp.support.converter.JsonMessageConverter&amp;quot;&amp;gt;
<br /><br />id=&amp;quot;messageListener&amp;quot; class=&amp;quot;rabbitMQ.TestReceiverAsycRMQ&amp;quot;&amp;gt;
<br /><br />class=&amp;quot;org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer&amp;quot;
<br />p:connectionFactory-ref=&amp;quot;connectionFactory&amp;quot;
<br />p:queueName=&amp;quot;testAsyncQueue&amp;quot;
<br />p:messageListener-ref=&amp;quot;messageListener&amp;quot; 
<br />p:concurrentConsumers=&amp;quot;10&amp;quot;
<br />p:channelTransacted=&amp;quot;true&amp;quot;
<br />p<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />refetchCount=&amp;quot;1&amp;quot;
<br /><br />class=&amp;quot;org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer&amp;quot;
<br />p:connectionFactory-ref=&amp;quot;connectionFactory&amp;quot;
<br />p:queueName=&amp;quot;testQueue&amp;quot;
<br />p:messageListener-ref=&amp;quot;messageListener&amp;quot;
]]>
		</document>
		<document id="80a09b0cdf15a223900a4bd584c8b156" url=""><![CDATA[Calling JAVA Class from Oracle Db using loadjava.<br/><br/>Hi
<br />Please follow below given steps for using concept of calling java class from Oracle 11.1 Db.
<br />Step 1: Before using concept of calling java from Oracle Function/Store Procedure or Trigger check properly that oracle contains inbuilt JVM for the same.
<br />We can use following given query to check the same.
<br />select status, count(status) from all_objects where object_type='JAVA CLASS' group by status;
<br />if the output of above query is greater than 0 (zero) i.e. in most case count(status) will be greater than 10,000 and status should be Valid
<br />If the above query doesn’t work indicate that JAVA is not present in Oracle
<br />Please run following command $ORACLE_HOME/javavm/install/initjvm (this will install java in Oracle). Do validate again from above query for proper installation.
<br />Step 2: Inbuild java of Oracle provide loadjava command to perform operation of using JAVA Class from Oracle Function/Store Procedure or Trigger.
<br />There are two ways to use this command.
<br />Ø By using Oracle SQL Developer loadjava GUI functionality
<br />Ø By using loadjava command from Command Prompt.
<br />· By using Oracle SQL Developer loadjava GUI functionality:
<br />Once the java in installed in Oracle we can find Java option in hierarchy tree of Oracle SQL Developer.
<br />Right click on the java and select Load Java as shown below and fill the Java Source Name with the name of the Java Class and paste the java code inside text area. Submit the form using Apply button.
<br /><br />After successful addition of the java class we will be able to see TestReturnString class inside the Tree Structrure under JAVA folder of Oracle SQL Developer. Confirm the Status of that loaded class into oracle using following sql script.
<br />select owner, object_name, status from all_objects where object_name like '% TestReturnString %' and object_type like 'JAVA%';
<br />This will give Status as Valid. In case of InValid status we can see the error by using following sql script
<br />SELECT name, type, sequence, substr(text,0,100) FROM user_errors where name like '% TestReturnString %';
<br />Remove all the error as stated by the above sql and run the following script to chagne the status of the class from InValid to Valid.
<br />ALTER JAVA class &quot;TestString&quot; resolve;
<br />Finally create a Oracle Function or Procedure to check the loaded java classe execution
<br />I.e.
<br />create or replace
<br />FUNCTION pMeProcFunction (
<br />message VARCHAR2
<br />)
<br />RETURN STRING AS LANGUAGE JAVA
<br />NAME 'TestReturnString.getMessage(java.lang.String) return java.lang.String';
<br />==Java Class
<br />public class TestReturnString {
<br />public static String getMessage(String strHello)
<br />{
<br />return strHello;
<br />}
<br />}
<br />=========Execution
<br />select pmeprocfunction('test') from dual;
<br />· By using loadjava command from Command Prompt:
<br />This is the proper way of using loadjava functionality or oracle. As it allows end user to understand the complete flow of the loadjava
<br />Before using loadjava command on prompt concept we need to take care of following below given notes: (In our case as we had our Oracle on Linux M/C)
<br />1) Set PATH,CLASSPATH,ORACLE_HOME variable. Better to us bash_profile of linux
<br />i.e. vi ~/.bash_profile
<br />export PATH=$PATH:$HOME/bin:/app/jdk1.6.0_06/bin
<br />export CLASSPATH=.:/app/jdk1.6.0_06
<br />export ORACLE_HOME=/app/oracle/base/
<br />#export PATH
<br />unset USERNAME
<br />2) Most important point to follow is to set all the class path needed for loadjava command using inbuild helloworld java example by Oracle J.
<br />In our case move to
<br />[root@linux-ent1 /]# cd app/oracle/base/javavm/demo/examples/jsproc/basic/helloWorld/
<br />and run make command to set all the call path
<br />3) Use the same prompt to upload the class in oracle using following given command better to put only class file on linux m/C
<br />/app/oracle/base/bin/loadjava -f -verbose -oracleresolver -resolve -oci8 -u userid/pwd@SIDNAME /Siddhu/RabbitMQTrigger/bin/com/dbMQTrigger/TestReturnString.class
<br />And test the above deployed java class using procedure/function of Oracle.
<br />Now let discuss on real Business ……………… HOW TO PERFORM OPERATION ON RABBITMQ WHEN A TABLE GET UPDATED.
<br />For above concept we had used following business model
<br />Db Table à On update/delete/Insert will fire à Trigger à Trigger will call Stored Procedure à Stored Procedure will call Java Class à Finally JAVA Class will insert message into Rabbit MQ.
<br />Now as stated above we are using Rabbit MQ as messaging bus the class which is used to insert data into Rabbit MQ contain imports some of the java class which need RabbitMQ inbuilt jar to be loaded first into the JVM of the Oracle. Here comes the real picture of using concept step2 where we need to use loadjava on command prompt, as Oracle SQL Developer and TOAD does not support loading of JAVA jar file like class file.
<br />Approach taken was as follows:
<br />1) First load all the jar files which is need by our class that is used to insert message in Rabbit Mq i.e. commons-io-1.2.jar, rabbitmq-client.jar, rabbitmq-client-tests.jar and commons-cli-1.1.jar
<br />Using following command
<br />/app/oracle/base/ bin/loadjava -f -verbose -oracleresolver -resolve -oci8 -u userid/pwd@SIDNAME /Siddhu/RabbitMQTrigger/lib/commons-cli-1.1.jar
<br />/app/oracle/base/ bin/loadjava -f -verbose -oracleresolver -resolve -oci8 -u userid/pwd@SIDNAME /Siddhu/RabbitMQTrigger/lib/commons-io-1.2.jar
<br />/app/oracle/base/bin/loadjava -f -verbose -oracleresolver -resolve -oci8 -u userid/pwd@SIDNAME /Siddhu/RabbitMQTrigger/lib/rabbitmq-client.jar
<br />/app/oracle/base/ bin/ loadjava -f -verbose -oracleresolver -resolve -oci8 -u userid/pwd@SIDNAME /Siddhu/RabbitMQTrigger/lib/rabbitmq-client-tests.jar
<br />2) Finally load our java class which actually insert data into RabbitMQ.
<br />/app/oracle/base/ bin/loadjava -f -verbose -oracleresolver -resolve -oci8 -u userid/pwd@SIDNAME /Siddhu/RabbitMQTrigger/bin/com/dbMQTrigger/RMQNOPARAM.class
<br />Or use Oracle GUI loadjava tool for the same.
<br />Finally write the following Trigger/Procedure and execute the see all working properly:
<br />===Trigger
<br />create or replace
<br />TRIGGER TESTTR
<br />AFTER INSERT OR DELETE OR UPDATE ON TEST_RABBITMQ
<br />--REFERENCING OLD AS OLD NEW AS NEW
<br />FOR EACH ROW
<br />BEGIN
<br />dbms_output.put_line('Trigger Start');
<br />-- insert into TESTTRIGGER values ('first');
<br />--pMeProc('hi');
<br />pMeProc();
<br />-- insert into TESTTRIGGER values ('second');
<br />dbms_output.put_line('Trigger End');
<br />--commit;
<br />END;
<br />===Procedure
<br />create or replace
<br />PROCEDURE pMeProc
<br />AS LANGUAGE JAVA
<br />NAME 'RMQNOPARAM.publishMessage()';
<br />==JAVA Class
<br />import com.rabbitmq.client.Channel;
<br />import com.rabbitmq.client.Connection;
<br />import com.rabbitmq.client.ConnectionFactory;
<br />public class RMQNOPARAM {
<br />public static void publishMessage()
<br />{
<br />try
<br />{
<br />Connection conn = null;
<br />ConnectionFactory factory = new ConnectionFactory();
<br />factory.setHost(&quot;localhost&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />conn = factory.newConnection();
<br />Channel chan = conn.createChannel();
<br />String exchangeName = &quot;TestDbTriggerRabbitMQExchange&quot;;
<br />String routingKey = &quot;TestDbTriggerRabbitMQRoutingKey&quot;;
<br />//System.out.println(&quot; Value of strHello is:&quot;+strHello);
<br />chan.basicPublish(exchangeName, routingKey, null, &quot;fromjava&quot;.getBytes());
<br />//System.out.println(&quot; Published Message 'Hello World!'&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />chan.close();
<br />conn.close();
<br />}catch(Exception e)
<br />{
<br />e.printStackTrace();
<br />}
<br />}
<br />}
<br />==sql command
<br />insert into test_rabbitMQ values ('helloTrigger')
]]>
		</document>
		<document id="6814dc9961915c7677f0e809f56c33a7" url=""><![CDATA[Short Description of RabbitMQ Messaging BUS.<br/><br/>Those who are knowing JMS and MDB will easily know Messaging terminology. For new beginner before knowing RabbitMQ it will be gr8 to know some of the other topics like
<br /><br />1) What is messaging?
<br /><br />Messaging describes the sending and receiving of data. Having said that sending responsibility will be of Publisher/Sender and receiving responsibility will be of receiver. Both Sender and Receiver are mutually exclusive Entity i.e. unknown of one another. Common point of their meeting a called queue where message send by Sender in format like text, email, image etc will be stored and will be delivered to the receiver who had subscribed for it.
<br /><br />2) Why use AMQP?
<br /><br />AMQP is an Open Standard for Messaging Middleware standard for wire-level protocol and semantic framework for high performance enterprise messaging.
<br /><br />3) What is the Open Telecom Platform (OTP)?
<br /><br />The Open Telecom Platform (OTP) is a library of management, monitoring, and support code for constructing extremely high-performance, reliable, scalable, available distributed network applications written in Erlang.
<br /><br />4) How RabbitMQ use AMQP and OTP?
<br /><br />RabbitMQ enables developers of messaging solutions to take advantage of AMQP and Open Telecom Platform (OTP) i.e. Rabbit MQ is build using AMQP on top of OTP.
<br /><br />5) How RabbitMQ Work?
<br /><br />In Rabbit MQ Framework Sender send the message to the Exchange. Further this Exchange applies logic to differentiate this message and divert it to proper queue. Finally Receiver get the message from Queue as per their subscription.
<br /><br />Different plugin are avaiable best one is to use rabbitmq-management it provide GUI to the end user to create Exchange/Queue throught URL i.e.<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Flocalhost%3A55672%2Fmgmt%2F"target="_blank" rel="nofollow">http://localhost:55672/mgmt/</a> having default username:guest and passwd:guest
<br /><br />Following JAVA code can be used to send and receive the message using different format of Exchange like fan-out, Direct etc.
<br /><br />Sender Class:
<br /><br />package rabbitMQ;
<br />import com.rabbitmq.client.ConnectionFactory;
<br />import com.rabbitmq.client.Connection;
<br />import com.rabbitmq.client.Channel;
<br />public class Send {
<br />public static void main(String[] argv)
<br />throws java.io.IOException {
<br />Connection conn = null;
<br />ConnectionFactory factory = new ConnectionFactory();
<br />factory.setHost(&amp;amp;quot;localhost&amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />/*factory.setUsername(&amp;amp;quot;siddhu&amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />factory.setPassword(&amp;amp;quot;siddhu&amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />factory.setVirtualHost(&amp;amp;quot;/&amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />factory.setHost(&amp;amp;quot;localhost&amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />factory.setPort(5672);*/
<br />conn = factory.newConnection();
<br />Channel chan = conn.createChannel();
<br />//chan.queueDeclare(&amp;amp;quot;hello&amp;amp;quot;, false, false, false, null);
<br />//String exchangeName = &amp;amp;quot;myExchange&amp;amp;quot;;
<br />String exchangeName = &amp;amp;quot;myTopicExchange&amp;amp;quot;;
<br />String routingKey = &amp;amp;quot;quick.orange.rabbit&amp;amp;quot;;
<br />//for(int i=0;i&amp;amp;lt;10;i++)
<br />for(;<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />
<br />{
<br />String s = &amp;amp;quot;Hello World for Exchange myTopicExchange with Routing key quick.orange.rabbit!&amp;amp;quot;;
<br />//chan.basicPublish(&amp;amp;quot;&amp;amp;quot;, &amp;amp;quot;hello&amp;amp;quot;, null, s.getBytes());
<br />chan.basicPublish(exchangeName, routingKey, null, s.getBytes());
<br />//chan.basicPublish(&amp;amp;quot;&amp;amp;quot;, routingKey, null, s.getBytes());
<br />System.out.println(&amp;amp;quot; <img class="smiley" src="http://www.pan.net/smilies/kiss.gif" alt=":)" /> Sent 'Hello World!'&amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />}
<br />//chan.close();
<br />//conn.close();
<br />}
<br />}
<br /><br />Receiver Class:
<br /><br />package rabbitMQ;
<br />import com.rabbitmq.client.ConnectionFactory;
<br />import com.rabbitmq.client.Connection;
<br />import com.rabbitmq.client.Channel;
<br />import com.rabbitmq.client.QueueingConsumer;
<br />public class Recv {
<br />public static void main(String[] argv)
<br />throws java.io.IOException,
<br />java.lang.InterruptedException {
<br />Connection conn = null;
<br />ConnectionFactory factory = new ConnectionFactory();
<br />factory.setHost(&amp;amp;quot;localhost&amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />conn = factory.newConnection();
<br />String exchangeName = &amp;amp;quot;myTopicExchange&amp;amp;quot;;
<br />//String exchangeName = &amp;amp;quot;logs&amp;amp;quot;;
<br />String queueName = &amp;amp;quot;topicQueue2&amp;amp;quot;;
<br />//String queueName = &amp;amp;quot;logQueue&amp;amp;quot;;
<br />//String queueName = &amp;amp;quot;siddhuQueue&amp;amp;quot;;
<br />String routingKey = &amp;amp;quot;*.*.rabbit&amp;amp;quot;;
<br />boolean durable = true;
<br />Channel chan = conn.createChannel();
<br />/*chan.exchangeDeclare(exchangeName, &amp;amp;quot;direct&amp;amp;quot;, durable);
<br />chan.queueDeclare(queueName, durable,false,false,null);
<br />chan.queueBind(queueName, exchangeName, routingKey);*/
<br />//chan.queueDeclare(&amp;amp;quot;hello&amp;amp;quot;, false, false, false, null);
<br />System.out.println(&amp;amp;quot; [*] Waiting for Queue2 messages. To exit press CTRL+C&amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />QueueingConsumer consumer = new QueueingConsumer(chan);
<br />//chan.basicConsume(&amp;amp;quot;hello&amp;amp;quot;, true, consumer);
<br />boolean noAck = true;
<br />chan.basicConsume(queueName, noAck, consumer);
<br />//by siddhu Start [
<br />/*String exchangeName1 = &amp;amp;quot;mydirectExchange&amp;amp;quot;;
<br />String queueName1 = &amp;amp;quot;topicQueue1&amp;amp;quot;;
<br />String routingKey1 = &amp;amp;quot;*.orange.*&amp;amp;quot;;
<br />System.out.println(&amp;amp;quot; [*] Waiting for Queue1 messages. To exit press CTRL+C&amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />QueueingConsumer consumer1 = new QueueingConsumer(chan);
<br />chan.basicConsume(queueName1, noAck, consumer1);*/
<br />//by siddhu End ]
<br />while (true) {
<br />QueueingConsumer.Delivery delivery = consumer.nextDelivery();
<br />System.out.println(&amp;amp;quot; <img class="smiley" src="http://www.pan.net/smilies/kiss.gif" alt=":)" /> Received &amp;amp;quot; + new String(delivery.getBody()));
<br />}
<br />}
<br />}
]]>
		</document>
		<document id="2b3935239bd6d1fce5ae49f3c21777b8" url=""><![CDATA[Sending Mail using JAVA Class<br/><br/>PostMail: This class can be used to send mail using JAVA Class.
<br /><br />import java.util.Properties;
<br /><br />import javax.mail.Message;
<br />import javax.mail.MessagingException;
<br />import javax.mail.Session;
<br />import javax.mail.Transport;
<br />import javax.mail.internet.InternetAddress;
<br />import javax.mail.internet.MimeMessage;
<br /><br />public class PostMail {
<br /><br />public void postMail( String recipients[ ], String subject, String message , String from) throws MessagingException
<br />{
<br />boolean debug = false;
<br /><br />Properties props = new Properties();
<br />props.put(&amp;amp;amp;quot;mail.smtp.host&amp;amp;amp;quot;, &amp;amp;amp;quot;smtp.jcom.net&amp;amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />Session session = Session.getDefaultInstance(props, null);
<br />session.setDebug(debug);
<br /><br />Message objMessage = new MimeMessage(session);
<br /><br />InternetAddress addressFrom = new InternetAddress(from);
<br />objMessage.setFrom(addressFrom);
<br /><br />InternetAddress[] objAddressTo = new InternetAddress[recipients.length];
<br />for (int i = 0; i &amp;amp;amp;lt;&amp;amp;amp;gt;
<br />{
<br />objAddressTo[i] = new InternetAddress(recipients[i]);
<br />}
<br />objMessage.setRecipients(Message.RecipientType.TO, objAddressTo);
<br /><br />objMessage.addHeader(&amp;amp;amp;quot;MyHeaderName&amp;amp;amp;quot;, &amp;amp;amp;quot;myHeaderValue&amp;amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />objMessage.setSubject(subject);
<br />objMessage.setContent(message, &amp;amp;amp;quot;text/plain&amp;amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />Transport.send(objMessage);
<br />System.out.println(&amp;amp;amp;quot;Message is send properly:&amp;amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />}
<br /><br />public static void main(String args[])
<br />{
<br />try
<br />{
<br />PostMail objPostMail = new PostMail();
<br />String[] objStringArray = new String[1];
<br />objStringArray[0] = new String(&amp;amp;amp;quot;<a href="/go/messages/send/receiver=siddhartha.dhumale@yahoo.com">siddhartha.dhumale@yahoo.com</a>&amp;amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />objPostMail.postMail(objStringArray, &amp;amp;amp;quot;Hi Subject&amp;amp;amp;quot;, &amp;amp;amp;quot;Hi this is siddharatha&amp;amp;amp;quot;, &amp;amp;amp;quot;<a href="/go/messages/send/receiver=siddharathadhumale@gmail.com">siddharathadhumale@gmail.com</a>&amp;amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />}catch (Exception e)
<br />{
<br />e.printStackTrace(); 
<br />}
<br />}
<br />}
]]>
		</document>
		<document id="90f572394a65ae035a6c08df50107351" url=""><![CDATA[Integration of GWT with Spring Security<br/><br/> GWTSpringSecurity : This example is used to integrate Spring Security with GWT.
<br /><br />AuthenticationService:
<br /><br />package com.seewah.sample.gwtspring.client;
<br /><br />import com.google.gwt.core.client.GWT;
<br /><br />import com.google.gwt.user.client.rpc.RemoteService;
<br /><br />import com.google.gwt.user.client.rpc.ServiceDefTarget;
<br /><br />public interface AuthenticationService extends RemoteService {
<br /><br />public static final String SERVICE_URI = &amp;quot;authenticationService&amp;quot;;
<br /><br />public static class Util {
<br /><br />public static AuthenticationServiceAsync getInstance() {
<br /><br />AuthenticationServiceAsync instance = (AuthenticationServiceAsync) GWT.create(AuthenticationService.class);
<br /><br />ServiceDefTarget target = (ServiceDefTarget) instance;
<br /><br />target.setServiceEntryPoint(GWT.getModuleBaseURL() + SERVICE_URI);
<br /><br />return instance;
<br /><br />}
<br /><br />}
<br /><br />/**
<br /><br />* Authenticates user.
<br /><br />*
<br /><br />* @param username
<br /><br />* @param password
<br /><br />* @return whether authentication is successful
<br /><br />*/
<br /><br />boolean authenticate(String username, String password);
<br /><br />/**
<br /><br />* Terminates a user's security session.
<br /><br />*/
<br /><br />void logout();
<br /><br />}
<br /><br />AuthenticationServiceAsync:
<br /><br />package com.seewah.sample.gwtspring.client;
<br /><br />import com.google.gwt.user.client.rpc.AsyncCallback;
<br /><br />public interface AuthenticationServiceAsync {
<br /><br />public void authenticate(String username, String password, AsyncCallback callback);
<br /><br />public void logout(AsyncCallback callback);
<br /><br />}
<br /><br />AutoErrorHandlingAsyncCallback:
<br /><br />package com.seewah.sample.gwtspring.client;
<br /><br />import com.google.gwt.user.client.Window;
<br /><br />import com.google.gwt.user.client.rpc.AsyncCallback;
<br /><br />/**
<br /><br />* {@link AsyncCallback} switch recognises {@link ServiceSecurityException} and
<br /><br />* handles it gracefully.
<br /><br />*
<br /><br />*
<br /><br />*
<br /><br />*/
<br /><br />public abstract class AutoErrorHandlingAsyncCallback implements AsyncCallback {
<br /><br />final public void onFailure(Throwable throwable) {
<br /><br />if (throwable instanceof ServiceSecurityException) {
<br /><br />Window.alert(&amp;quot;You do not have enough privilege to carry out the operation!&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />} else {
<br /><br />Window.alert(throwable.getMessage());
<br /><br />}
<br /><br />}
<br /><br />}
<br /><br />Demo:
<br /><br />package com.seewah.sample.gwtspring.client;
<br /><br />import com.google.gwt.core.client.EntryPoint;
<br /><br />import com.google.gwt.event.dom.client.ClickEvent;
<br /><br />import com.google.gwt.event.dom.client.ClickHandler;
<br /><br />import com.google.gwt.user.client.Window;
<br /><br />import com.google.gwt.user.client.ui.Button;
<br /><br />import com.google.gwt.user.client.ui.HTML;
<br /><br />import com.google.gwt.user.client.ui.HorizontalPanel;
<br /><br />import com.google.gwt.user.client.ui.Hyperlink;
<br /><br />import com.google.gwt.user.client.ui.Label;
<br /><br />import com.google.gwt.user.client.ui.RootPanel;
<br /><br />import com.google.gwt.user.client.ui.VerticalPanel;
<br /><br />/**
<br /><br />* GWT Spring Security demo entry point.
<br /><br />*
<br /><br />*
<br /><br />*
<br /><br />*/
<br /><br />public class Demo implements EntryPoint, ClickHandler {
<br /><br />private Button loginBtn;
<br /><br />private Button logoutBtn;
<br /><br />private Label loginStatus;
<br /><br />private Hyperlink publicOp;
<br /><br />private Hyperlink protectedOp;
<br /><br />private AuthenticationServiceAsync authenticationServiceAsync;
<br /><br />private DocumentServiceAsync documentServiceAsync;
<br /><br />@SuppressWarnings(&amp;quot;deprecation&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />
<br /><br />public void onModuleLoad() {
<br /><br />authenticationServiceAsync = AuthenticationService.Util.getInstance();
<br /><br />documentServiceAsync = DocumentService.Util.getInstance();
<br /><br />VerticalPanel outerPanel = new VerticalPanel();
<br /><br />HorizontalPanel loginPanel = new HorizontalPanel();
<br /><br />outerPanel.add(loginPanel);
<br /><br />loginBtn = new Button(&amp;quot;LOG IN&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />loginBtn.addClickHandler(this);
<br /><br />logoutBtn = new Button(&amp;quot;LOG OUT&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />logoutBtn.addClickHandler(this);
<br /><br />loginStatus = new Label(&amp;quot;your are currently NOT LOGGED IN&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />loginPanel.add(loginBtn);
<br /><br />loginPanel.add(logoutBtn);
<br /><br />loginPanel.add(loginStatus);
<br /><br />outerPanel.add(new HTML(&amp;quot; 
<br />&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />);
<br /><br />publicOp = new Hyperlink(&amp;quot;Get number of public publications&amp;quot;, &amp;quot;&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />publicOp.addClickHandler(this);
<br /><br />outerPanel.add(publicOp);
<br /><br />protectedOp = new Hyperlink(&amp;quot;Get number of private publications&amp;quot;, &amp;quot;&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />protectedOp.addClickHandler(this);
<br /><br />outerPanel.add(protectedOp);
<br /><br />RootPanel.get(&amp;quot;container&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.add(outerPanel);
<br /><br />}
<br /><br />public void onClick(ClickEvent event) {
<br /><br />Object sender = event.getSource();
<br /><br />if (sender == loginBtn) {
<br /><br />// service does not require username and password for this demo
<br /><br />authenticationServiceAsync.authenticate(&amp;quot;&amp;quot;, &amp;quot;&amp;quot;, new AutoErrorHandlingAsyncCallback() {
<br /><br />public void onSuccess(Boolean result) {
<br /><br />if (result) {
<br /><br />loginStatus.setText(&amp;quot;your are currently LOGGED IN&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />} else {
<br /><br />loginStatus.setText(&amp;quot;your are currently NOT LOGGED IN&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />}
<br /><br />}
<br /><br />});
<br /><br />} else if (sender == logoutBtn) {
<br /><br />authenticationServiceAsync.logout(new AutoErrorHandlingAsyncCallback() {
<br /><br />public void onSuccess(Object result) {
<br /><br />loginStatus.setText(&amp;quot;your are currently NOT LOGGED IN&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />}
<br /><br />});
<br /><br />} else if (sender == publicOp) {
<br /><br />documentServiceAsync.getNumberOfPublicPublications(new AutoErrorHandlingAsyncCallback() {
<br /><br />public void onSuccess(Integer result) {
<br /><br />Window.alert(result.toString());
<br /><br />}
<br /><br />});
<br /><br />} else if (sender == protectedOp) {
<br /><br />documentServiceAsync.getNumberOfPrivatePublications(new AutoErrorHandlingAsyncCallback() {
<br /><br />public void onSuccess(Integer result) {
<br /><br />Window.alert(result.toString());
<br /><br />}
<br /><br />});
<br /><br />}
<br /><br />}
<br /><br />}
<br /><br />DocumentService:
<br /><br />package com.seewah.sample.gwtspring.client;
<br /><br />import com.google.gwt.core.client.GWT;
<br /><br />import com.google.gwt.user.client.rpc.RemoteService;
<br /><br />import com.google.gwt.user.client.rpc.ServiceDefTarget;
<br /><br />/**
<br /><br />* Document service.
<br /><br />*
<br /><br />*
<br /><br />*
<br /><br />*/
<br /><br />public interface DocumentService extends RemoteService {
<br /><br />public static final String SERVICE_URI = &amp;quot;documentService&amp;quot;;
<br /><br />public static class Util {
<br /><br />public static DocumentServiceAsync getInstance() {
<br /><br />DocumentServiceAsync instance = (DocumentServiceAsync) GWT.create(DocumentService.class);
<br /><br />ServiceDefTarget target = (ServiceDefTarget) instance;
<br /><br />target.setServiceEntryPoint(GWT.getModuleBaseURL() + SERVICE_URI);
<br /><br />return instance;
<br /><br />}
<br /><br />}
<br /><br />/**
<br /><br />* Returns the number of public publications.
<br /><br />*
<br /><br />* @return
<br /><br />*/
<br /><br />int getNumberOfPublicPublications();
<br /><br />/**
<br /><br />* Returns the number of private publications.
<br /><br />*
<br /><br />* @return
<br /><br />* @exception ServiceSecurityException
<br /><br />*/
<br /><br />int getNumberOfPrivatePublications() throws ServiceSecurityException;
<br /><br />}
<br /><br />DocumentServiceAsync:
<br /><br />package com.seewah.sample.gwtspring.client;
<br /><br />import com.google.gwt.user.client.rpc.AsyncCallback;
<br /><br />public interface DocumentServiceAsync {
<br /><br />public void getNumberOfPublicPublications(AsyncCallback callback);
<br /><br />public void getNumberOfPrivatePublications(AsyncCallback callback);
<br /><br />}
<br /><br />ServiceSecurityException:
<br /><br />package com.seewah.sample.gwtspring.client;
<br /><br />@SuppressWarnings(&amp;quot;serial&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />
<br /><br />public class ServiceSecurityException extends Exception {
<br /><br />}
<br /><br />DummyAuthenticationProvider:
<br /><br />package com.seewah.sample.gwtspring.server.security;
<br /><br />import org.springframework.security.core.Authentication;
<br /><br />import org.springframework.security.core.AuthenticationException;
<br /><br />import org.springframework.security.authentication.AuthenticationProvider;
<br /><br />/**
<br /><br />* A dummy {@link AuthenticationProvider} implementation.
<br /><br />*
<br /><br />*
<br /><br />* @created 6 Jan 2009
<br /><br />*/
<br /><br />public class DummyAuthenticationProvider implements AuthenticationProvider {
<br /><br />public Authentication authenticate(Authentication authentication) throws AuthenticationException {
<br /><br />throw new IllegalStateException(&amp;quot;This implementation is a dummy class, created purely so that &amp;quot;
<br /><br />+ &amp;quot;spring security namespace tags can be used in application context, and this method should &amp;quot;
<br /><br />+ &amp;quot;never be called&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />}
<br /><br />@SuppressWarnings(&amp;quot;rawtypes&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />
<br /><br />public boolean supports(Class clazz) {
<br /><br />throw new IllegalStateException(&amp;quot;This implementation is a dummy class, created purely so that &amp;quot;
<br /><br />+ &amp;quot;spring security namespace tags can be used in application context, and this method should &amp;quot;
<br /><br />+ &amp;quot;never be called&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />}
<br /><br />}
<br /><br />DummyEntryPoint:
<br /><br />package com.seewah.sample.gwtspring.server.security;
<br /><br />import java.io.IOException;
<br /><br />import javax.servlet.ServletException;
<br /><br />import javax.servlet.http.HttpServletRequest;
<br /><br />import javax.servlet.http.HttpServletResponse;
<br /><br />import org.springframework.security.core.AuthenticationException;
<br /><br />import org.springframework.security.web.AuthenticationEntryPoint;
<br /><br />/**
<br /><br />* A dummy {@link AuthenticationEntryPoint} implementation.
<br /><br />*
<br /><br />*
<br /><br />* @created 6 Jan 2009
<br /><br />*/
<br /><br />public class DummyEntryPoint implements AuthenticationEntryPoint {
<br /><br />@Override
<br /><br />public void commence(HttpServletRequest arg0, HttpServletResponse arg1,
<br /><br />AuthenticationException arg2) throws IOException, ServletException {
<br /><br />throw new IllegalStateException(&amp;quot;This implementation is a dummy class, created purely so that &amp;quot;
<br /><br />+ &amp;quot;spring security namespace tags can be used in application context, and this method should &amp;quot;
<br /><br />+ &amp;quot;never be called&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />}
<br /><br />}
<br /><br />AuthenticationService:
<br /><br />package com.seewah.sample.gwtspring.server.service;
<br /><br />/**
<br /><br />* &amp;quot;Spring managed&amp;quot; service layer interface for authentication service.
<br /><br />*
<br /><br />*
<br /><br />*
<br /><br />*/
<br /><br />public interface AuthenticationService {
<br /><br />/**
<br /><br />* Authenticates user.
<br /><br />*
<br /><br />* @param username
<br /><br />* @param password
<br /><br />* @return whether authentication is successful
<br /><br />*/
<br /><br />boolean authenticate(String username, String password);
<br /><br />/**
<br /><br />* Terminates a user's security session.
<br /><br />*/
<br /><br />void logout();
<br /><br />}
<br /><br />AuthenticationServiceImpl:
<br /><br />package com.seewah.sample.gwtspring.server.service;
<br /><br />import java.util.Arrays;
<br /><br />import org.springframework.security.core.Authentication;
<br /><br />import org.springframework.security.core.GrantedAuthority;
<br /><br />import org.springframework.security.core.authority.GrantedAuthorityImpl;
<br /><br />import org.springframework.security.core.context.SecurityContext;
<br /><br />import org.springframework.security.core.context.SecurityContextHolder;
<br /><br />import org.springframework.security.core.context.SecurityContextImpl;
<br /><br />import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
<br /><br />import org.springframework.security.core.userdetails.User;
<br /><br />/**
<br /><br />* {@link AuthenticationService} implementation.
<br /><br />*
<br /><br />*
<br /><br />*
<br /><br />*/
<br /><br />public class AuthenticationServiceImpl implements AuthenticationService {
<br /><br />public boolean authenticate(String username, String password) {
<br /><br />// creating an authenticated user token for demo
<br /><br />// regardless of username and password values
<br /><br />GrantedAuthority[] authorities = new GrantedAuthority[] { new GrantedAuthorityImpl(&amp;quot;ROLE_ADMIN&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" /> };
<br /><br />User user = new User(&amp;quot;xxx&amp;quot;, &amp;quot;yyy&amp;quot;, true, true, true, true, Arrays.asList(authorities));
<br /><br />Authentication auth = new UsernamePasswordAuthenticationToken(user, password, Arrays.asList(authorities));
<br /><br />SecurityContext sc = new SecurityContextImpl();
<br /><br />sc.setAuthentication(auth);
<br /><br />SecurityContextHolder.setContext(sc);
<br /><br />return true;
<br /><br />}
<br /><br />public void logout() {
<br /><br />SecurityContextHolder.clearContext();
<br /><br />}
<br /><br />}
<br /><br />DocumentService:
<br /><br />package com.seewah.sample.gwtspring.server.service;
<br /><br />/**
<br /><br />* &amp;quot;Spring managed&amp;quot; service layer interface for document service.
<br /><br />*
<br /><br />*
<br /><br />*
<br /><br />*/
<br /><br />public interface DocumentService {
<br /><br />/**
<br /><br />* Returns the number of public publications.
<br /><br />*
<br /><br />* @return
<br /><br />*/
<br /><br />int getNumberOfPublicPublications();
<br /><br />/**
<br /><br />* Returns the number of private publications.
<br /><br />*
<br /><br />* @return
<br /><br />*/
<br /><br />int getNumberOfPrivatePublications();
<br /><br />}
<br /><br />DocumentServiceImpl:
<br /><br />package com.seewah.sample.gwtspring.server.service;
<br /><br />import org.springframework.beans.factory.annotation.Required;
<br /><br />import org.springframework.security.access.annotation.Secured;
<br /><br />/**
<br /><br />* {@link DocumentService} implementation.
<br /><br />*
<br /><br />*
<br /><br />*
<br /><br />*/
<br /><br />public class DocumentServiceImpl implements DocumentService {
<br /><br />private int privatePublicationCount;
<br /><br />private int publicPublicationCount;
<br /><br />@Required
<br /><br />public void setPrivatePublicationCount(int privatePublicationCount) {
<br /><br />this.privatePublicationCount = privatePublicationCount;
<br /><br />}
<br /><br />@Required
<br /><br />public void setPublicPublicationCount(int publicPublicationCount) {
<br /><br />this.publicPublicationCount = publicPublicationCount;
<br /><br />}
<br /><br />@Secured(&amp;quot;ROLE_ADMIN&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />
<br /><br />public int getNumberOfPrivatePublications() {
<br /><br />return privatePublicationCount;
<br /><br />}
<br /><br />public int getNumberOfPublicPublications() {
<br /><br />return publicPublicationCount;
<br /><br />}
<br /><br />}
<br /><br />AuthenticationServiceServlet:
<br /><br />package com.seewah.sample.gwtspring.server;
<br /><br />import org.springframework.beans.factory.annotation.Autowired;
<br /><br />import com.seewah.sample.gwtspring.client.AuthenticationService;
<br /><br />/**
<br /><br />* {@link AuthenticationService} implementation.
<br /><br />*
<br /><br />*
<br /><br />*
<br /><br />*/
<br /><br />@SuppressWarnings(&amp;quot;serial&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />
<br /><br />public class AuthenticationServiceServlet extends DependencyInjectionRemoteServiceServlet implements
<br /><br />AuthenticationService {
<br /><br />@Autowired
<br /><br />com.seewah.sample.gwtspring.server.service.AuthenticationServiceImpl authenticationService;
<br /><br />public boolean authenticate(String username, String password) {
<br /><br />return authenticationService.authenticate(username, password);
<br /><br />}
<br /><br />public void logout() {
<br /><br />authenticationService.logout();
<br /><br />}
<br /><br />}
<br /><br />DependencyInjectionRemoteServiceServlet:
<br /><br />package com.seewah.sample.gwtspring.server;
<br /><br />import java.lang.reflect.Field;
<br /><br />import java.util.HashSet;
<br /><br />import java.util.Set;
<br /><br />import javax.servlet.ServletException;
<br /><br />import org.springframework.beans.factory.NoSuchBeanDefinitionException;
<br /><br />import org.springframework.beans.factory.annotation.Autowired;
<br /><br />import org.springframework.web.context.support.WebApplicationContextUtils;
<br /><br />import com.google.gwt.user.server.rpc.RemoteServiceServlet;
<br /><br />/**
<br /><br />* {@link RemoteServiceServlet} that automatically injects IoC dependency.
<br /><br />* &amp;quot;org.springframework.beans.factory.annotation.Autowired&amp;quot; annotation is used
<br /><br />* for marking which fields to inject into.
<br /><br />Note that the current
<br />* implementation will only inject &amp;quot;declared&amp;quot; fields, and not inherited fields.
<br /><br />* Fields can be private, protected, package or public.
<br /><br />*
<br /><br />*
<br /><br />* @created 27 Jun 2008
<br /><br />*/
<br /><br />@SuppressWarnings(&amp;quot;serial&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />
<br /><br />public class DependencyInjectionRemoteServiceServlet extends RemoteServiceServlet {
<br /><br />@Override
<br /><br />public void init() throws ServletException {
<br /><br />super.init();
<br /><br />doDependencyInjection();
<br /><br />}
<br /><br />/**
<br /><br />* Carries out dependency injection. This implementation uses Spring IoC
<br /><br />* container.
<br /><br />*
<br /><br />* @exception NoSuchBeanDefinitionException
<br /><br />* if a suitable bean cannot be found in the Spring
<br /><br />* application context. The current implementation looks up
<br /><br />* beans by name
<br /><br />*/
<br /><br />protected void doDependencyInjection() {
<br /><br />for (Field field : getFieldsToDependencyInject()) {
<br /><br />try {
<br /><br />boolean isFieldAccessible = field.isAccessible();
<br /><br />if (!isFieldAccessible) {
<br /><br />field.setAccessible(true);
<br /><br />}
<br /><br />field.set(this, WebApplicationContextUtils.getWebApplicationContext(getServletContext()).getBean(field.getName()));
<br /><br />if (!isFieldAccessible) {
<br /><br />field.setAccessible(false);
<br /><br />}
<br /><br />} catch (IllegalArgumentException e) {
<br /><br />throw new RuntimeException(e);
<br /><br />} catch (IllegalAccessException e) {
<br /><br />throw new RuntimeException(e);
<br /><br />}
<br /><br />}
<br /><br />}
<br /><br />/**
<br /><br />* Find annotated fields to inject.
<br /><br />*
<br /><br />* @return a list of all the annotated fields
<br /><br />*/
<br /><br />private Set getFieldsToDependencyInject() {
<br /><br />Set fieldsToInject = new HashSet();
<br /><br />Field[] fields = this.getClass().getDeclaredFields();
<br /><br />for (Field field : fields) {
<br /><br />if (field.getAnnotation(Autowired.class) != null) {
<br /><br />fieldsToInject.add(field);
<br /><br />}
<br /><br />}
<br /><br />return fieldsToInject;
<br /><br />}
<br /><br />}
<br /><br />DocumentServiceServlet:
<br /><br />package com.seewah.sample.gwtspring.server;
<br /><br />import org.springframework.beans.factory.annotation.Autowired;
<br /><br />import org.springframework.security.access.AccessDeniedException;
<br /><br />import com.seewah.sample.gwtspring.client.DocumentService;
<br /><br />import com.seewah.sample.gwtspring.client.ServiceSecurityException;
<br /><br />@SuppressWarnings(&amp;quot;serial&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />
<br /><br />public class DocumentServiceServlet extends DependencyInjectionRemoteServiceServlet implements DocumentService {
<br /><br />@Autowired
<br /><br />com.seewah.sample.gwtspring.server.service.DocumentService documentService;
<br /><br />public int getNumberOfPrivatePublications() throws ServiceSecurityException {
<br /><br />try {
<br /><br />return documentService.getNumberOfPrivatePublications();
<br /><br />} catch (AccessDeniedException e) {
<br /><br />throw new ServiceSecurityException();
<br /><br />}
<br /><br />}
<br /><br />public int getNumberOfPublicPublications() {
<br /><br />return documentService.getNumberOfPublicPublications();
<br /><br />}
<br /><br />}
<br /><br />gwtspring.gwt.xml:
<br /><br />applicationContext-security.xml:
<br /><br />xmlns:security=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fsecurity%26amp%3Bquot"target="_blank" rel="nofollow">http://www.springframework.org/schema/security&amp;quot</a>;
<br /><br />xmlns:xsi=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema-instance%26amp%3Bquot"target="_blank" rel="nofollow">http://www.w3.org/2001/XMLSchema-instance&amp;quot</a>;
<br /><br />xsi:schemaLocation=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fbeans"target="_blank" rel="nofollow">http://www.springframework.org/schema/beans</a>
<br /><br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fbeans%2Fspring-beans-3.0.xsd"target="_blank" rel="nofollow">http://www.springframework.org/schema/beans/spring-beans-3.0.xsd</a>
<br /><br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fsecurity"target="_blank" rel="nofollow">http://www.springframework.org/schema/security</a>
<br /><br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fsecurity%2Fspring-security-3.0.xsd%26amp%3Bquot%3B%26amp%3Bgt"target="_blank" rel="nofollow">http://www.springframework.org/schema/security/spring-security-3.0.xsd&amp;quot;&amp;gt</a>;
<br /><br />create-session=&amp;quot;always&amp;quot; /&amp;gt;
<br /><br />class=&amp;quot;com.seewah.sample.gwtspring.server.security.DummyEntryPoint&amp;quot; /&amp;gt;
<br /><br />class=&amp;quot;com.seewah.sample.gwtspring.server.security.DummyAuthenticationProvider&amp;quot;&amp;gt;
<br /><br />class=&amp;quot;org.springframework.security.authentication.ProviderManager&amp;quot;&amp;gt;
<br /><br />secured-annotations=&amp;quot;enabled&amp;quot; jsr250-annotations=&amp;quot;disabled&amp;quot; /&amp;gt;
<br /><br />applicationContext.xml:
<br /><br />xmlns:xsi=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema-instance%26amp%3Bquot"target="_blank" rel="nofollow">http://www.w3.org/2001/XMLSchema-instance&amp;quot</a>;
<br /><br />xsi:schemaLocation=&amp;quot;
<br /><br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fbeans"target="_blank" rel="nofollow">http://www.springframework.org/schema/beans</a> <a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fbeans%2Fspring-beans-2.5.xsd%26amp%3Bquot%3B%26amp%3Bgt"target="_blank" rel="nofollow">http://www.springframework.org/schema/beans/spring-beans-2.5.xsd&amp;quot;&amp;gt</a>;
<br /><br />class=&amp;quot;com.seewah.sample.gwtspring.server.service.AuthenticationServiceImpl&amp;quot; /&amp;gt;
<br /><br />class=&amp;quot;com.seewah.sample.gwtspring.server.service.DocumentServiceImpl&amp;quot;&amp;gt;
<br /><br />1
<br /><br />100
<br /><br />web.xml
<br /><br />xmlns:xsi=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema-instance%26amp%3Bquot"target="_blank" rel="nofollow">http://www.w3.org/2001/XMLSchema-instance&amp;quot</a>;
<br /><br />xsi:schemaLocation=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fj2ee"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/j2ee</a> <a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fj2ee%2Fweb-app_2_4.xsd%26amp%3Bquot%3B%26amp%3Bgt"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd&amp;quot;&amp;gt</a>;
<br /><br />gwtspring.html
]]>
		</document>
		<document id="e876ca4541c9dd05dd1a2b830f0bd3bf" url=""><![CDATA[Description of OSGI Layer<br/><br/>OSGI is the frame work which helps developer to maintain more than one version of jar/JAVA class file on same server. It provide API that help the developer for deploying run time java /JAR files as bundle in the frame work without need of restarting the server.
<br /><br />Any framework that implements the OSGi standard provides an environment for the modularization of applications into smaller bundles. Each bundle is a tightly-coupled, dynamically loadable collection of classes, jars, and configuration files that explicitly declare their external dependencies (if any).
<br /><br />The framework is conceptually divided into the following areas:
<br /><br />Bundles
<br /><br />Bundles are normal jar components with extra manifest headers.
<br /><br />Services
<br /><br />The services layer connects bundles in a dynamic way by offering a publish-find-bind model for plain old Java objects (POJO).
<br /><br />Services Registry
<br /><br />The API for management services (ServiceRegistration,ServiceTracker and ServiceReference).
<br /><br />Life-Cycle
<br /><br />The API for life cycle management for (install, start, stop, update, and uninstall) bundles.
<br /><br />Modules
<br /><br />The layer that defines encapsulation and declaration of dependencies (how a bundle can import and export code).
<br /><br />Security
<br /><br />The layer that handles the security aspects by limiting bundle functionality to pre-defined capabilities.
<br /><br />Execution Environment
<br /><br />Defines what methods and classes are available in a specific platform. There is no fixed list of execution environments, since it is subject to change as the Java Community Process creates new versions and editions of Java. However, the following set is currently supported by most OSGi implementations:
<br /><br />i.e.
<br /><br />Bundles are the collection of java files or JAR files.
<br /><br />Services provide the way to handle this jar/java file dynamically.
<br /><br />Services Registry the API for management services
<br /><br />Life-Cycle provide the API for life cycle management which include the install, uninstalled , start, stop of the bundle.
<br /><br />Modules this layer deals with how a bundle can import and export code.
<br /><br />Security this layer that handles the security aspects
<br /><br />Reference:
<br /><br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fen.wikipedia.org%2Fwiki%2FOSGi"target="_blank" rel="nofollow">http://en.wikipedia.org/wiki/OSGi</a>
<br /><br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.eclipsezone.com%2Feclipse%2Fforums%2Ft93976.html"target="_blank" rel="nofollow">http://www.eclipsezone.com/eclipse/forums/t93976.html</a>
<br /><br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.ibm.com%2Fdeveloperworks%2Flibrary%2Fos-ecl-osgiconsole%2F"target="_blank" rel="nofollow">http://www.ibm.com/developerworks/library/os-ecl-osgiconsole/</a>
<br /><br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.vogella.de%2Farticles%2FOSGi%2Farticle.html"target="_blank" rel="nofollow">http://www.vogella.de/articles/OSGi/article.html</a>
<br /><br />Q) How to run equinox through Java Program so that we can call deployed OSGI jar thorough java class
<br /><br />Ans: Use following code
<br /><br />import java.net.URL;
<br /><br />import org.eclipse.core.runtime.adaptor.EclipseStarter;
<br /><br />import org.osgi.framework.Bundle;
<br /><br />import org.osgi.framework.BundleContext;
<br /><br />public class TestStartEquinox {
<br /><br />public static void main(String args[]) throws Exception {
<br /><br />//String[] equinoxArgs = {&amp;amp;amp;quot;-console&amp;amp;amp;quot;,&amp;amp;amp;quot;1234&amp;amp;amp;quot;,&amp;amp;amp;quot;-noExit&amp;amp;amp;quot;};
<br /><br />String[] equinoxArgs = {&amp;amp;amp;quot;-console&amp;amp;amp;quot;,&amp;amp;amp;quot;&amp;amp;amp;quot;,&amp;amp;amp;quot;-noExit&amp;amp;amp;quot;};
<br /><br />//String[] equinoxArgs = {&amp;amp;amp;quot;-os ${target.os} -ws ${target.ws} -arch ${target.arch} -nl ${target.nl} -console&amp;amp;amp;quot;,&amp;amp;amp;quot;1234&amp;amp;amp;quot;,&amp;amp;amp;quot;-noExit&amp;amp;amp;quot;};
<br /><br />//String[] equinoxArgs = {&amp;amp;amp;quot;&amp;amp;amp;quot;,&amp;amp;amp;quot;&amp;amp;amp;quot;,&amp;amp;amp;quot;&amp;amp;amp;quot;};
<br /><br />BundleContext context = EclipseStarter.startup(equinoxArgs,null);
<br /><br />System.out.println(&amp;amp;amp;quot;context:&amp;amp;amp;quot;+context);
<br /><br />//URL bundleContent = new URL(&amp;amp;amp;quot;reference:file:/C:/Test/toelete/plugins/ToDeleteOSGI_1.0.0.201011121510.jar&amp;amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />//Bundle bundle = context.installBundle(&amp;amp;amp;quot;initial@file:/C:/Test/toelete/plugins/ToDeleteOSGI_1.0.0.201011121510.jar&amp;amp;amp;quot;,bundleContent.openStream());
<br /><br />Bundle bundle = context.installBundle(&amp;amp;amp;quot;file:/C:/Test/toelete/plugins/ToDeleteOSGI_1.0.0.201011121510.jar&amp;amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />bundle.start();
<br /><br />Bundle bundle1[] = context.getBundles();
<br /><br />for(int i =0; i
<br /><br />{
<br /><br />System.out.println(&amp;amp;amp;quot;bundle1.getSymbolicName:&amp;amp;amp;quot;+bundle1[i].getSymbolicName());
<br /><br />}
<br /><br />}
<br /><br />}
<br /><br />- The above code is used to installed new bundle i.e. OSGI jar file named as ToDeleteOSGI_1.0.0.201011121510.jar in equinox container in addition of starting the container using java class.
<br /><br />Q) How to create OSGI executable jar i.e. bundle jar like ToDeleteOSGI_1.0.0.201011121510.jar from the existing OSGI project.
<br /><br />Ans: First create an OSGI project. I had used Eclipse plug in for the same. let give it name as ToDeleteOSGI. Once the project is created click on the project folder i.e. in Package Explorer
<br /><br />File &amp;amp;amp;gt;&amp;amp;amp;gt; Export &amp;amp;amp;gt;&amp;amp;amp;gt; Plug-in Developemnt &amp;amp;amp;gt;&amp;amp;amp;gt; Deployable plug-ins and fregments &amp;amp;amp;gt;&amp;amp;amp;gt; next &amp;amp;amp;gt;&amp;amp;amp;gt; check/verify the project that we want to make the executable jar , Give the Directory name &amp;amp;amp;gt; Finish.
]]>
		</document>
		<document id="3d68f851d57e0b3bec095d7bb0b49256" url=""><![CDATA[Thrift_Example<br/><br/>Just want to share the new Technology info…… known as Thrift.
<br /><br />Thrift is a software framework for scalable cross-language services development. It combines a software stack with a code generation engine to build services that work efficiently and seamlessly between 
<br /><br />C++, Java, Python, PHP, Ruby, Erlang, Perl, Haskell, C#, Cocoa, Smalltalk, and OCaml.
<br /><br />Inshort !! now we can expose any method written in any above specified language and can consume it by creating client (again with any specified language)
<br /><br />One Billion $ Question !! How to use Thrift ?
<br /><br />First download thrift-incubating-0.2.0.tar.gz [PGP] [MD5]
<br /><br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fincubator.apache.org%2Fthrift%2Fdownload%2F"target="_blank" rel="nofollow">http://incubator.apache.org/thrift/download/</a> 
<br /><br />then create jar libthrit.jar need to use Both client and Server.
<br /><br />Use attached Thrift.zip to have Thrift exe for win M/C.
<br /><br />step 1) Extract thrift-0.2.0 folder or .gz file in linux.
<br /><br />step 2) Go to folder /thrift-0.2.0/lib/java
<br /><br />cd /thrift-0.2.0/lib/java
<br /><br />step 3) Change the JAVA_HOME (link it to latest JAVA Version installed in linux) and use jdk1.6.0_20
<br /><br />export $JAVA_HOME=/jdk1.6.0_20
<br /><br />step 4) use Apache ant to create jar (as ant use directly ivy.xml to create libthrit.jar) – run below given command 
<br />/apache-ant-1.8.1/bin/ant
<br /><br />=====Steps to create client and server in JAVA using Thrift technology.
<br /><br />1) Create .thrift file.
<br /><br />2) Create glue code using this command C:Thriftthrift --gen java &amp;amp;amp;amp;quot;name of the thrift file created above i.e. xyz.thrift&amp;amp;amp;amp;quot;.
<br /><br />i.e. C:Thriftthrift --gen java time.thrift
<br /><br />3) Create an *Impl file that implement the interface created on step 2.
<br /><br />4) Create Server file.
<br /><br />5) Create Client file.
<br /><br />6) Run Server file first.
<br /><br />7) Run Client file to get the output.
<br /><br />Note : 1) For reference please refer to the attached Thrift_example containing both example 
<br />(a) JAVA Client and JAVA Server.
<br />(<img class="smiley" src="http://www.pan.net/smilies/cool.gif" alt=":)" /> JAVA Client and Perl Server.
<br /><br />===Step to use Thrift for creating Perl as server and JAVA as client
<br /><br />Step 1) Write .thrift file 
<br /><br />Step 2) Create JAVA Interface using this command C:Thriftthrift --gen java &amp;amp;amp;amp;quot;name of the thrift file created above i.e. xyz.thrift&amp;amp;amp;amp;quot;.
<br />i.e. C:Thriftthrift --gen java testPerl.thrift
<br /><br />Step 3) Create Server code using Thrift Perl Command
<br /><br />C:TestThrift_Example&amp;amp;amp;amp;gt;C:Thriftthrift --gen perl testPerl.thrift
<br /><br />Step 4) Run Perl Server file 
<br /><br />C:SpringSource_WorkspaceThrift_Examplesrc&amp;amp;amp;amp;gt;perl PerlServer.pl
<br /><br />Step 5) Run java Client
]]>
		</document>
		<document id="f77ce88edb6985e704c64a09f308863f" url=""><![CDATA[Integration of Portal with SQL<br/><br/> TestPortalWithSQL : This example show CRUD Operation using Portal on My-SQL Database. Here in example we had used is JBOSS Portal along with JBOSS Application Server. Portal frame work is more verbose and has very good look and feel aspect for the project. It addition to Look and feel it also helps the user to maintain his/her portal via screen i.e. through GUI rather then hard coding.
<br /><br />TestPortalWithSQL:
<br /><br />package testPortalWithSQL;
<br /><br />import java.io.IOException;
<br /><br />import java.io.PrintWriter;
<br /><br />import java.sql.Connection;
<br /><br />import java.sql.DriverManager;
<br /><br />import java.sql.Statement;
<br /><br />import javax.portlet.ActionRequest;
<br /><br />import javax.portlet.ActionResponse;
<br /><br />import javax.portlet.GenericPortlet;
<br /><br />import javax.portlet.PortletException;
<br /><br />import javax.portlet.PortletMode;
<br /><br />import javax.portlet.PortletPreferences;
<br /><br />import javax.portlet.PortletSecurityException;
<br /><br />import javax.portlet.PortletURL;
<br /><br />import javax.portlet.RenderRequest;
<br /><br />import javax.portlet.RenderResponse;
<br /><br />import javax.portlet.UnavailableException;
<br /><br />import javax.portlet.WindowState;
<br /><br />public class TestPortalWithSQL extends GenericPortlet {
<br /><br />String dbUrl = &amp;quot;jdbc:mysql://localhost/siddhutest_db&amp;quot;;
<br /><br />String dbClass = &amp;quot;com.mysql.jdbc.Driver&amp;quot;;
<br /><br />/* (non-Javadoc)
<br /><br />* @see javax.portlet.GenericPortlet#doView(javax.portlet.RenderRequest, javax.portlet.RenderResponse)
<br /><br />*/
<br /><br />@Override
<br /><br />protected void doView(RenderRequest request, RenderResponse response)
<br /><br />throws PortletException, IOException, UnavailableException {
<br /><br />/*response.setContentType(&amp;quot;text/html&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />PrintWriter writer = response.getWriter();
<br /><br />writer.write(&amp;quot;Hello World!&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />writer.close();*/
<br /><br />PortletPreferences pref = request.getPreferences();
<br /><br />String id = pref.getValue(&amp;quot;id&amp;quot;,&amp;quot;&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />String name = pref.getValue(&amp;quot;name&amp;quot;,&amp;quot;&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />response.setContentType(request.getResponseContentType());
<br /><br />PrintWriter writer = response.getWriter();
<br /><br />writer.write(&amp;quot; value id :&amp;quot; + id +&amp;quot; and name:&amp;quot; + name);
<br /><br />}
<br /><br />/* (non-Javadoc)
<br /><br />* @see javax.portlet.GenericPortlet#doEdit(javax.portlet.RenderRequest, javax.portlet.RenderResponse)
<br /><br />*/
<br /><br />@Override
<br /><br />protected void doEdit(RenderRequest request, RenderResponse response)
<br /><br />throws PortletException, PortletSecurityException, IOException {
<br /><br />// TODO Auto-generated method stub
<br /><br />//super.doEdit(request, response);
<br /><br />PortletURL actionURL = response.createActionURL();
<br /><br />response.setContentType(request.getResponseContentType());
<br /><br />PrintWriter writer = response.getWriter();
<br /><br />//Code to show text field for ID and NAME and three button Insert, Update and Delete.
<br /><br />}
<br /><br />/* (non-Javadoc)
<br /><br />* @see javax.portlet.GenericPortlet#doHelp(javax.portlet.RenderRequest, javax.portlet.RenderResponse)
<br /><br />*/
<br /><br />@Override
<br /><br />protected void doHelp(RenderRequest request, RenderResponse response)
<br /><br />throws PortletException, PortletSecurityException, IOException {
<br /><br />// TODO Auto-generated method stub
<br /><br />//super.doHelp(request, response);
<br /><br />response.setContentType(request.getResponseContentType());
<br /><br />try {
<br /><br />response.setContentType(request.getResponseContentType());
<br /><br />PrintWriter writer = response.getWriter();
<br /><br />writer.write(&amp;quot;Pref Portlet Help
<br /><br />&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />} catch (IOException e) {
<br /><br />throw new PortletException(&amp;quot;PrefPortlet.doHelp exception&amp;quot;, e);
<br /><br />}
<br /><br />}
<br /><br />/* (non-Javadoc)
<br /><br />* @see javax.portlet.Portlet#processAction(javax.portlet.ActionRequest, javax.portlet.ActionResponse)
<br /><br />*/
<br /><br />@Override
<br /><br />public void processAction(ActionRequest request, ActionResponse response)
<br /><br />throws PortletException, PortletSecurityException, IOException {
<br /><br />// TODO Auto-generated method stub
<br /><br />//super.processAction(request, response);
<br /><br />String id = request.getParameter(&amp;quot;ID&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />String name = request.getParameter(&amp;quot;NAME&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />//String buttonPressed;
<br /><br />if(request.getParameter(&amp;quot;Insert&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" /> !=null &amp;amp;&amp;amp; request.getParameter(&amp;quot;Insert&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.equals(&amp;quot;Insert1&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" /> &amp;amp;&amp;amp; !request.getParameter(&amp;quot;Insert&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.equals(&amp;quot;&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />)
<br /><br />{
<br /><br />InsertbuttonPress(request,response);
<br /><br />}
<br /><br />if(request.getParameter(&amp;quot;Update&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" /> !=null &amp;amp;&amp;amp; request.getParameter(&amp;quot;Update&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.equals(&amp;quot;Update1&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />&amp;amp;&amp;amp; !request.getParameter(&amp;quot;Update&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.equals(&amp;quot;&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />)
<br /><br />{
<br /><br />UpdatebuttonPress(request,response);
<br /><br />}
<br /><br />if(request.getParameter(&amp;quot;Delete&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" /> !=null &amp;amp;&amp;amp; request.getParameter(&amp;quot;Delete&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.equals(&amp;quot;Delete1&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />&amp;amp;&amp;amp; !request.getParameter(&amp;quot;Delete&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.equals(&amp;quot;&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />)
<br /><br />{
<br /><br />DeletebuttonPress(request,response);
<br /><br />}
<br /><br />//String InsertbuttonPress = request.getParameter(&amp;quot;Insert&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />//String DeletebuttonPress = request.getParameter(&amp;quot;Delete&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />try {
<br /><br />PortletPreferences pref = request.getPreferences();
<br /><br />pref.setValue(&amp;quot;id&amp;quot;, id);
<br /><br />pref.setValue(&amp;quot;name&amp;quot;, name);
<br /><br />pref.store();
<br /><br />} catch (Exception e) {
<br /><br />throw new PortletException(e.getMessage());
<br /><br />}
<br /><br />response.setPortletMode(PortletMode.VIEW);
<br /><br />response.setWindowState(WindowState.NORMAL);
<br /><br />}
<br /><br />public void InsertbuttonPress(ActionRequest request, ActionResponse response)
<br /><br />{
<br /><br />String id = request.getParameter(&amp;quot;ID&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />String name = request.getParameter(&amp;quot;NAME&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />try {
<br /><br />Class.forName(dbClass).newInstance();
<br /><br />Connection con = DriverManager.getConnection(dbUrl,&amp;quot;root&amp;quot;,&amp;quot;&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />Statement stmt = con.createStatement();
<br /><br />String query = &amp;quot;insert into test_table (id, name) values (&amp;quot;+id+&amp;quot;,'&amp;quot;+name+&amp;quot;')&amp;quot;;
<br /><br />int i = stmt.executeUpdate(query);
<br /><br />con.close();
<br /><br />//return &amp;quot;success&amp;quot;;
<br /><br />} //end try
<br /><br />catch(Exception e) {
<br /><br />e.printStackTrace();
<br /><br />}
<br /><br />}
<br /><br />public void UpdatebuttonPress(ActionRequest request, ActionResponse response)
<br /><br />{
<br /><br />String id = request.getParameter(&amp;quot;ID&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />String name = request.getParameter(&amp;quot;NAME&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />try {
<br /><br />Class.forName(dbClass).newInstance();
<br /><br />Connection con = DriverManager.getConnection(dbUrl,&amp;quot;root&amp;quot;,&amp;quot;&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />Statement stmt = con.createStatement();
<br /><br />String query = &amp;quot;update test_table set name = '&amp;quot;+name+&amp;quot;' where id =&amp;quot;+id;
<br /><br />int i = stmt.executeUpdate(query);
<br /><br />con.close();
<br /><br />//return &amp;quot;success&amp;quot;;
<br /><br />} //end try
<br /><br />catch(Exception e) {
<br /><br />e.printStackTrace();
<br /><br />}
<br /><br />}
<br /><br />public void DeletebuttonPress(ActionRequest request, ActionResponse response)
<br /><br />{
<br /><br />String id = request.getParameter(&amp;quot;ID&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />String name = request.getParameter(&amp;quot;NAME&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />try {
<br /><br />Class.forName(dbClass).newInstance();
<br /><br />Connection con = DriverManager.getConnection(dbUrl,&amp;quot;root&amp;quot;,&amp;quot;&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />Statement stmt = con.createStatement();
<br /><br />String query = &amp;quot;delete from test_table where id =&amp;quot;+id;
<br /><br />int i = stmt.executeUpdate(query);
<br /><br />con.close();
<br /><br />//return &amp;quot;success&amp;quot;;
<br /><br />} //end try
<br /><br />catch(Exception e) {
<br /><br />e.printStackTrace();
<br /><br />}
<br /><br />}
<br /><br />}
<br /><br />default-object.xml:
<br /><br />xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
<br />DOCTYPE deployments PUBLIC
<br />&amp;quot;-//JBoss Portal//DTD Portal Object 2.6//EN&amp;quot;
<br />&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.jboss.org%2Fportal%2Fdtd%2Fportal-object_2_6.dtd%26amp%3Bquot%3B%26amp%3Bgt"target="_blank" rel="nofollow">http://www.jboss.org/portal/dtd/portal-object_2_6.dtd&amp;quot;&amp;gt</a>;
<br />&amp;lt;deployments&amp;gt;
<br />&amp;lt;deployment&amp;gt;
<br />&amp;lt;parent-ref&amp;gt;default.defaultparent-ref&amp;gt;
<br />&amp;lt;if-exists&amp;gt;overwriteif-exists&amp;gt;
<br />&amp;lt;window&amp;gt;
<br />&amp;lt;window-name&amp;gt;TestPortalWithSQLWindowwindow-name&amp;gt;
<br />&amp;lt;instance-ref&amp;gt;TestPortalWithSQLInstanceinstance-ref&amp;gt;
<br />&amp;lt;region&amp;gt;centerregion&amp;gt;
<br />&amp;lt;height&amp;gt;1height&amp;gt;
<br />&amp;lt;initial-window-state&amp;gt;maximizedinitial-window-state&amp;gt;
<br />window&amp;gt;
<br />deployment&amp;gt;
<br />deployments&amp;gt;
<br /><br />portlet.xml:
<br /><br />xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
<br />&amp;lt;portlet-app
<br />xmlns=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fportlet%2Fportlet-app_2_0.xsd%26amp%3Bquot"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/portlet/portlet-app_2_0.xsd&amp;quot</a>;
<br />xmlns:xsi=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema-instance%26amp%3Bquot"target="_blank" rel="nofollow">http://www.w3.org/2001/XMLSchema-instance&amp;quot</a>;
<br />xsi:schemaLocation=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fportlet%2Fportlet-app_2_0.xsd"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/portlet/portlet-app_2_0.xsd</a> <a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fportlet%2Fportlet-app_2_0.xsd%26amp%3Bquot"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/portlet/portlet-app_2_0.xsd&amp;quot</a>;
<br />version=&amp;quot;2.0&amp;quot;&amp;gt;
<br />&amp;lt;portlet&amp;gt;
<br />&amp;lt;portlet-name&amp;gt;TestPortalWithSQLportlet-name&amp;gt;
<br />&amp;lt;display-name&amp;gt;TestPortalWithSQLdisplay-name&amp;gt;
<br />&amp;lt;portlet-class&amp;gt;
<br />testPortalWithSQL.TestPortalWithSQL
<br />portlet-class&amp;gt;
<br />&amp;lt;supports&amp;gt;
<br />&amp;lt;mime-type&amp;gt;text/htmlmime-type&amp;gt;
<br />&amp;lt;portlet-mode&amp;gt;VIEWportlet-mode&amp;gt;
<br />&amp;lt;portlet-mode&amp;gt;EDITportlet-mode&amp;gt;
<br />&amp;lt;portlet-mode&amp;gt;HELPportlet-mode&amp;gt;
<br />supports&amp;gt;
<br />&amp;lt;portlet-info&amp;gt;
<br />&amp;lt;title&amp;gt;TestPortalWithSQLtitle&amp;gt;
<br />portlet-info&amp;gt;
<br />portlet&amp;gt;
<br />portlet-app&amp;gt;
<br /><br />portlet-instances.xml:
<br /><br />xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
<br />DOCTYPE deployments PUBLIC
<br />&amp;quot;-//JBoss Portal//DTD Portlet Instances 2.6//EN&amp;quot;
<br />&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.jboss.org%2Fportal%2Fdtd%2Fportlet-instances_2_6.dtd%26amp%3Bquot%3B%26amp%3Bgt"target="_blank" rel="nofollow">http://www.jboss.org/portal/dtd/portlet-instances_2_6.dtd&amp;quot;&amp;gt</a>;
<br />&amp;lt;deployments&amp;gt;
<br />&amp;lt;deployment&amp;gt;
<br />&amp;lt;instance&amp;gt;
<br />&amp;lt;instance-id&amp;gt;TestPortalWithSQLInstanceinstance-id&amp;gt;
<br />&amp;lt;portlet-ref&amp;gt;TestPortalWithSQLportlet-ref&amp;gt;
<br />instance&amp;gt;
<br />deployment&amp;gt;
<br />deployments&amp;gt;
<br /><br />web.xml:
<br /><br />xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
<br />&amp;lt;web-app xmlns:xsi=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema-instance%26amp%3Bquot"target="_blank" rel="nofollow">http://www.w3.org/2001/XMLSchema-instance&amp;quot</a>; xmlns=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fjavaee%26amp%3Bquot"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/javaee&amp;quot</a>; xmlns:web=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fjavaee%2Fweb-app_2_5.xsd%26amp%3Bquot"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&amp;quot</a>; xsi:schemaLocation=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fjavaee"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/javaee</a> <a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fjavaee%2Fweb-app_2_5.xsd%26amp%3Bquot"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&amp;quot</a>; id=&amp;quot;WebApp_ID&amp;quot; version=&amp;quot;2.5&amp;quot;&amp;gt;
<br />&amp;lt;display-name&amp;gt;TestPortalWithSQLdisplay-name&amp;gt;
<br />&amp;lt;welcome-file-list&amp;gt;
<br />&amp;lt;welcome-file&amp;gt;index.htmlwelcome-file&amp;gt;
<br />&amp;lt;welcome-file&amp;gt;index.htmwelcome-file&amp;gt;
<br />&amp;lt;welcome-file&amp;gt;index.jspwelcome-file&amp;gt;
<br />&amp;lt;welcome-file&amp;gt;default.htmlwelcome-file&amp;gt;
<br />&amp;lt;welcome-file&amp;gt;default.htmwelcome-file&amp;gt;
<br />&amp;lt;welcome-file&amp;gt;default.jspwelcome-file&amp;gt;
<br />welcome-file-list&amp;gt;
<br />web-app&amp;gt;
]]>
		</document>
		<document id="1a97ce44b6b40e0ab1a207acfdc92a59" url=""><![CDATA[Integration of Portal with SQL using Spring Frame Work<br/><br/> TestPortalSpringMySQL : Shows integration of Portal with Spring Frame Work in addition of performing CRUD operation on My-SQL Db.
<br /><br />LoginFormController:
<br /><br />package Controller;
<br /><br />import javax.portlet.ActionRequest;
<br /><br />import javax.portlet.ActionResponse;
<br /><br />import org.springframework.jdbc.core.JdbcTemplate;
<br /><br />import org.springframework.jdbc.datasource.DriverManagerDataSource;
<br /><br />import org.springframework.validation.BindException;
<br /><br />import org.springframework.web.portlet.mvc.SimpleFormController;
<br /><br />public class LoginFormController extends SimpleFormController {
<br /><br />@Override
<br /><br />public void onSubmitAction(ActionRequest request, ActionResponse response, Object command, BindException errors) throws Exception {
<br /><br />LoginFormData formData = (LoginFormData)command;
<br /><br />//request.getSession().setAttribute(&amp;quot;FORM_DATA&amp;quot;, formData);
<br /><br />//ModelAndView modelAndView = new ModelAndView(new RedirectView(getSuccessView()));
<br /><br />if (request.getParameter(&amp;quot;Insert&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" /> != null) {
<br /><br />// delete object
<br /><br />Insert(command, errors);
<br /><br />} else if (request.getParameter(&amp;quot;Update&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" /> != null) {
<br /><br />// Update object
<br /><br />Update(command, errors);
<br /><br />} else if (request.getParameter(&amp;quot;Delete&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" /> != null) {
<br /><br />// Delete object
<br /><br />Delete(command, errors);
<br /><br />}
<br /><br />/*
<br /><br />else {
<br /><br />// save object
<br /><br />return new ModelAndView(&amp;quot;EnterData&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />}*/
<br /><br />}
<br /><br />/*
<br /><br />@Override
<br /><br />public ModelAndView onSubmit(HttpServletRequest request, HttpServletResponse response, Object command, BindException errors) throws Exception {
<br /><br />LoginFormData formData = (LoginFormData)command;
<br /><br />request.getSession().setAttribute(&amp;quot;FORM_DATA&amp;quot;, formData);
<br /><br />ModelAndView modelAndView = new ModelAndView(new RedirectView(getSuccessView()));
<br /><br />if (request.getParameter(&amp;quot;Insert&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" /> != null) {
<br /><br />// delete object
<br /><br />return Insert(request, response, command, errors);
<br /><br />} else if (request.getParameter(&amp;quot;Update&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" /> != null) {
<br /><br />// Update object
<br /><br />return Update(request, response, command, errors);
<br /><br />} else if (request.getParameter(&amp;quot;Delete&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" /> != null) {
<br /><br />// Delete object
<br /><br />return Delete(request, response, command, errors);
<br /><br />}
<br /><br />else {
<br /><br />// save object
<br /><br />return new ModelAndView(&amp;quot;EnterData&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />}
<br /><br />}
<br /><br />*/
<br /><br />public void Insert(Object command, BindException errors) throws Exception {
<br /><br />LoginFormData formData = (LoginFormData)command;
<br /><br />//request.getSession().setAttribute(&amp;quot;FORM_DATA&amp;quot;, formData);
<br /><br />DriverManagerDataSource dataSource = new DriverManagerDataSource();
<br /><br />dataSource.setDriverClassName(&amp;quot;com.mysql.jdbc.Driver&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />dataSource.setUrl(&amp;quot;jdbc:mysql://localhost/siddhutest_db&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />dataSource.setUsername(&amp;quot;root&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />dataSource.setPassword(&amp;quot;&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />JdbcTemplate template = new JdbcTemplate(dataSource);
<br /><br />template.update(&amp;quot;insert into test_table (id, name) values (?, <img class="smiley" src="http://www.pan.net/smilies/unsure.gif" alt=":)" />&amp;quot;, new Object[] {formData.getId(), formData.getName()});
<br /><br />//ModelAndView modelAndView = new ModelAndView(new RedirectView(getSuccessView()));
<br /><br />//return modelAndView;
<br /><br />}
<br /><br />public void Update(Object command, BindException errors) throws Exception {
<br /><br />LoginFormData formData = (LoginFormData)command;
<br /><br />//request.getSession().setAttribute(&amp;quot;FORM_DATA&amp;quot;, formData);
<br /><br />DriverManagerDataSource dataSource = new DriverManagerDataSource();
<br /><br />dataSource.setDriverClassName(&amp;quot;com.mysql.jdbc.Driver&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />dataSource.setUrl(&amp;quot;jdbc:mysql://localhost/siddhutest_db&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />dataSource.setUsername(&amp;quot;root&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />dataSource.setPassword(&amp;quot;&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />JdbcTemplate template = new JdbcTemplate(dataSource);
<br /><br />template.update(&amp;quot;update test_table set name = ? where id = ?&amp;quot;, new Object[] {formData.getName(),formData.getId()});
<br /><br />//ModelAndView modelAndView = new ModelAndView(new RedirectView(getSuccessView()));
<br /><br />//return modelAndView;
<br /><br />}
<br /><br />public void Delete(Object command, BindException errors) throws Exception {
<br /><br />LoginFormData formData = (LoginFormData)command;
<br /><br />//request.getSession().setAttribute(&amp;quot;FORM_DATA&amp;quot;, formData);
<br /><br />DriverManagerDataSource dataSource = new DriverManagerDataSource();
<br /><br />dataSource.setDriverClassName(&amp;quot;com.mysql.jdbc.Driver&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />dataSource.setUrl(&amp;quot;jdbc:mysql://localhost/siddhutest_db&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />dataSource.setUsername(&amp;quot;root&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />dataSource.setPassword(&amp;quot;&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />JdbcTemplate template = new JdbcTemplate(dataSource);
<br /><br />template.update(&amp;quot;delete from test_table where id = ?&amp;quot;, new Object[] {formData.getId()});
<br /><br />//ModelAndView modelAndView = new ModelAndView(new RedirectView(getSuccessView()));
<br /><br />//return modelAndView;
<br /><br />}
<br /><br />}
<br /><br />LoginFormData:
<br /><br />package Controller;
<br />import java.io.Serializable;
<br />public class LoginFormData implements Serializable{
<br />private String id;
<br />private String name;
<br />public String getId() {
<br />return id;
<br />}
<br />public void setId(String id) {
<br />this.id = id;
<br />}
<br />public String getName() {
<br />return name;
<br />}
<br />public void setName(String name) {
<br />this.name = name;
<br />}
<br />}
<br />TestPortalSpringMySQL:
<br /><br />package testPortalSpringMySQL;
<br /><br />import java.util.HashMap;
<br /><br />import java.util.Map;
<br /><br />import javax.portlet.ActionRequest;
<br /><br />import javax.portlet.ActionResponse;
<br /><br />import javax.portlet.RenderRequest;
<br /><br />import javax.portlet.RenderResponse;
<br /><br />import org.springframework.web.portlet.ModelAndView;
<br /><br />import org.springframework.web.portlet.mvc.Controller;
<br /><br />public class TestPortalSpringMySQL implements Controller {
<br /><br />/* (non-Javadoc)
<br /><br />* @see javax.portlet.GenericPortlet#doView(javax.portlet.RenderRequest, javax.portlet.RenderResponse)
<br /><br />*/
<br /><br />/*
<br /><br />@Override
<br /><br />protected void doView(RenderRequest request, RenderResponse response)
<br /><br />throws PortletException, IOException, UnavailableException {
<br /><br />response.setContentType(&amp;quot;text/html&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />PrintWriter writer = response.getWriter();
<br /><br />writer.write(&amp;quot;Hello World!&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />writer.close();
<br /><br />}*/
<br /><br />/**
<br /><br />* action method.
<br /><br />*/
<br /><br />public void handleActionRequest(ActionRequest request,
<br /><br />ActionResponse response) throws Exception {
<br /><br />//-- do nothing the Hello World portlet doesn't receive
<br /><br />//-- action requests.
<br /><br />}
<br /><br />/**
<br /><br />* render method.
<br /><br />*/
<br /><br />public ModelAndView handleRenderRequest(RenderRequest request,
<br /><br />RenderResponse response) throws Exception {
<br /><br />Map model = new HashMap();
<br /><br />model.put(&amp;quot;helloWorldMessage&amp;quot;, &amp;quot;Hello World HelloWorldController&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />return new ModelAndView(&amp;quot;helloWorld&amp;quot;, model);
<br /><br />}
<br /><br />}
<br /><br />applicationContext.xml:
<br /><br />xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
<br />&amp;lt;beans xmlns=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fbeans%26amp%3Bquot"target="_blank" rel="nofollow">http://www.springframework.org/schema/beans&amp;quot</a>;
<br />xmlns:xsi=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema-instance%26amp%3Bquot"target="_blank" rel="nofollow">http://www.w3.org/2001/XMLSchema-instance&amp;quot</a>; xmlns<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fp%26amp%3Bquot"target="_blank" rel="nofollow">http://www.springframework.org/schema/p&amp;quot</a>;
<br />xmlns:context=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fcontext%26amp%3Bquot"target="_blank" rel="nofollow">http://www.springframework.org/schema/context&amp;quot</a>;
<br />xsi:schemaLocation=&amp;quot;
<br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fbeans"target="_blank" rel="nofollow">http://www.springframework.org/schema/beans</a>
<br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fbeans%2Fspring-beans-3.0.xsd"target="_blank" rel="nofollow">http://www.springframework.org/schema/beans/spring-beans-3.0.xsd</a>
<br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fcontext"target="_blank" rel="nofollow">http://www.springframework.org/schema/context</a>
<br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fcontext%2Fspring-context-3.0.xsd%26amp%3Bquot%3B%26amp%3Bgt"target="_blank" rel="nofollow">http://www.springframework.org/schema/context/spring-context-3.0.xsd&amp;quot;&amp;gt</a>;
<br />beans&amp;gt;
<br /><br />default-object.xml:
<br /><br />xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
<br />DOCTYPE deployments PUBLIC
<br />&amp;quot;-//JBoss Portal//DTD Portal Object 2.6//EN&amp;quot;
<br />&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.jboss.org%2Fportal%2Fdtd%2Fportal-object_2_6.dtd%26amp%3Bquot%3B%26amp%3Bgt"target="_blank" rel="nofollow">http://www.jboss.org/portal/dtd/portal-object_2_6.dtd&amp;quot;&amp;gt</a>;
<br />&amp;lt;deployments&amp;gt;
<br />&amp;lt;deployment&amp;gt;
<br />&amp;lt;parent-ref&amp;gt;default.defaultparent-ref&amp;gt;
<br />&amp;lt;if-exists&amp;gt;overwriteif-exists&amp;gt;
<br />&amp;lt;window&amp;gt;
<br />&amp;lt;window-name&amp;gt;TestPortalSpringMySQLWindowwindow-name&amp;gt;
<br />&amp;lt;instance-ref&amp;gt;TestPortalSpringMySQLInstanceinstance-ref&amp;gt;
<br />&amp;lt;region&amp;gt;centerregion&amp;gt;
<br />&amp;lt;height&amp;gt;1height&amp;gt;
<br />&amp;lt;initial-window-state&amp;gt;maximizedinitial-window-state&amp;gt;
<br />window&amp;gt;
<br />deployment&amp;gt;
<br />deployments&amp;gt;
<br /><br />EnterData.jsp:
<br /><br />&amp;lt;html&amp;gt;
<br />&amp;lt;head&amp;gt;
<br />&amp;lt;meta http-equiv=&amp;quot;Content-Type&amp;quot; content=&amp;quot;text/html; charset=ISO-8859-1&amp;quot;&amp;gt;
<br />&amp;lt;title&amp;gt;Database Modificationtitle&amp;gt;
<br />head&amp;gt;
<br />&amp;lt;body&amp;gt;
<br />No Action has been done on the Database side please check the DB for more confirmation.
<br />body&amp;gt;
<br />html&amp;gt;
<br /><br />helloWorld.jsp:
<br /><br />&amp;lt;%@ taglib prefix=&amp;quot;c&amp;quot; uri=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fjsp%2Fjstl%2Fcore%26amp%3Bquot"target="_blank" rel="nofollow">http://java.sun.com/jsp/jstl/core&amp;quot</a>; %&amp;gt;
<br />&amp;lt;%@ page contentType=&amp;quot;text/html&amp;quot; isELIgnored=&amp;quot;false&amp;quot; %&amp;gt;
<br />&amp;lt;c<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ut value=&amp;quot;${helloWorldMessage}&amp;quot;/&amp;gt;
<br /><br />LogIn.jsp:
<br /><br />&amp;lt;%@page contentType=&amp;quot;text/html&amp;quot;%&amp;gt;
<br />&amp;lt;%@page pageEncoding=&amp;quot;UTF-8&amp;quot;%&amp;gt;
<br />&amp;lt;%@ taglib prefix=&amp;quot;portlet&amp;quot; uri=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fportlet_2_0%26amp%3Bquot"target="_blank" rel="nofollow">http://java.sun.com/portlet_2_0&amp;quot</a>; %&amp;gt;
<br />&amp;lt;html&amp;gt;
<br />&amp;lt;body&amp;gt;
<br />&amp;lt;form method=&amp;quot;POST&amp;quot; action=&amp;quot;&amp;lt;portlet:actionURL/&amp;gt;&amp;quot;&amp;gt;
<br />ID:&amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;id&amp;quot; /&amp;gt;&amp;lt;br/&amp;gt;
<br />Name:&amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;name&amp;quot; /&amp;gt;&amp;lt;br/&amp;gt;
<br />&amp;lt;input type=&amp;quot;submit&amp;quot; value=&amp;quot;Insert1&amp;quot; name=&amp;quot;Insert&amp;quot;/&amp;gt;
<br />&amp;lt;input type=&amp;quot;submit&amp;quot; value=&amp;quot;Update1&amp;quot; name=&amp;quot;Update&amp;quot;/&amp;gt;
<br />&amp;lt;input type=&amp;quot;submit&amp;quot; value=&amp;quot;Delete1&amp;quot; name=&amp;quot;Delete&amp;quot;/&amp;gt;
<br />form&amp;gt;
<br />body&amp;gt;
<br />html&amp;gt;
<br /><br />ResultPage.jsp:
<br /><br />&amp;lt;%@page contentType=&amp;quot;text/html&amp;quot; pageEncoding=&amp;quot;UTF-8&amp;quot;%&amp;gt;
<br />&amp;lt;html&amp;gt;
<br />&amp;lt;body&amp;gt;
<br />&amp;lt;h1&amp;gt;Data Base is updated Successfully!h1&amp;gt;
<br />body&amp;gt;
<br />html&amp;gt;
<br /><br />portlet.xml:
<br /><br />xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
<br />&amp;lt;portlet-app xmlns=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fportlet%2Fportlet-app_2_0.xsd%26amp%3Bquot"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/portlet/portlet-app_2_0.xsd&amp;quot</a>;
<br />xmlns:xsi=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema-instance%26amp%3Bquot"target="_blank" rel="nofollow">http://www.w3.org/2001/XMLSchema-instance&amp;quot</a>;
<br />xsi:schemaLocation=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fportlet%2Fportlet-app_2_0.xsd"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/portlet/portlet-app_2_0.xsd</a> <a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fportlet%2Fportlet-app_2_0.xsd%26amp%3Bquot"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/portlet/portlet-app_2_0.xsd&amp;quot</a>;
<br />version=&amp;quot;2.0&amp;quot;&amp;gt;
<br />&amp;lt;portlet&amp;gt;
<br />&amp;lt;portlet-name&amp;gt;TestPortalSpringMySQLportlet-name&amp;gt;
<br />&amp;lt;portlet-class&amp;gt;org.springframework.web.portlet.DispatcherPortletportlet-class&amp;gt;
<br />&amp;lt;supports&amp;gt;
<br />&amp;lt;mime-type&amp;gt;text/htmlmime-type&amp;gt;
<br />&amp;lt;portlet-mode&amp;gt;viewportlet-mode&amp;gt;
<br />&amp;lt;portlet-mode&amp;gt;editportlet-mode&amp;gt;
<br />&amp;lt;portlet-mode&amp;gt;helpportlet-mode&amp;gt;
<br />supports&amp;gt;
<br />&amp;lt;portlet-info&amp;gt;
<br />&amp;lt;title&amp;gt;TestPortalSpringMySQLtitle&amp;gt;
<br />portlet-info&amp;gt;
<br />portlet&amp;gt;
<br />portlet-app&amp;gt;
<br /><br />portlet-instances.xml:
<br /><br />xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
<br />DOCTYPE deployments PUBLIC
<br />&amp;quot;-//JBoss Portal//DTD Portlet Instances 2.6//EN&amp;quot;
<br />&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.jboss.org%2Fportal%2Fdtd%2Fportlet-instances_2_6.dtd%26amp%3Bquot%3B%26amp%3Bgt"target="_blank" rel="nofollow">http://www.jboss.org/portal/dtd/portlet-instances_2_6.dtd&amp;quot;&amp;gt</a>;
<br />&amp;lt;deployments&amp;gt;
<br />&amp;lt;deployment&amp;gt;
<br />&amp;lt;instance&amp;gt;
<br />&amp;lt;instance-id&amp;gt;TestPortalSpringMySQLInstanceinstance-id&amp;gt;
<br />&amp;lt;portlet-ref&amp;gt;TestPortalSpringMySQLportlet-ref&amp;gt;
<br />instance&amp;gt;
<br />deployment&amp;gt;
<br />deployments&amp;gt;
<br /><br />TestPortalSpringMySQL-portlet.xml:
<br /><br />xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
<br />&amp;lt;beans xmlns=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fbeans%26amp%3Bquot"target="_blank" rel="nofollow">http://www.springframework.org/schema/beans&amp;quot</a>;
<br />xmlns:xsi=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema-instance%26amp%3Bquot"target="_blank" rel="nofollow">http://www.w3.org/2001/XMLSchema-instance&amp;quot</a>; xmlns<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fp%26amp%3Bquot"target="_blank" rel="nofollow">http://www.springframework.org/schema/p&amp;quot</a>;
<br />xmlns:context=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fcontext%26amp%3Bquot"target="_blank" rel="nofollow">http://www.springframework.org/schema/context&amp;quot</a>;
<br />xsi:schemaLocation=&amp;quot;
<br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fbeans"target="_blank" rel="nofollow">http://www.springframework.org/schema/beans</a>
<br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fbeans%2Fspring-beans-3.0.xsd"target="_blank" rel="nofollow">http://www.springframework.org/schema/beans/spring-beans-3.0.xsd</a>
<br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fcontext"target="_blank" rel="nofollow">http://www.springframework.org/schema/context</a>
<br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fcontext%2Fspring-context-3.0.xsd%26amp%3Bquot%3B%26amp%3Bgt"target="_blank" rel="nofollow">http://www.springframework.org/schema/context/spring-context-3.0.xsd&amp;quot;&amp;gt</a>;
<br />&amp;lt;bean id=&amp;quot;TestPortalSpringMySQL&amp;quot; class=&amp;quot;testPortalSpringMySQL.TestPortalSpringMySQL&amp;quot; /&amp;gt;
<br />&amp;lt;bean id=&amp;quot;loginFormController&amp;quot; class=&amp;quot;Controller.LoginFormController&amp;quot;&amp;gt;
<br />&amp;lt;property name=&amp;quot;formView&amp;quot; value=&amp;quot;LogIn&amp;quot; /&amp;gt;
<br />&amp;lt;property name=&amp;quot;successView&amp;quot; value=&amp;quot;ResultPage&amp;quot; /&amp;gt;
<br />&amp;lt;property name=&amp;quot;commandName&amp;quot; value=&amp;quot;loginData&amp;quot; /&amp;gt;
<br />&amp;lt;property name=&amp;quot;commandClass&amp;quot; value=&amp;quot;Controller.LoginFormData&amp;quot; /&amp;gt;
<br />bean&amp;gt;
<br />&amp;lt;bean id=&amp;quot;portletModeHandlerMapping&amp;quot;
<br />class=&amp;quot;org.springframework.web.portlet.handler.PortletModeHandlerMapping&amp;quot;&amp;gt;
<br />&amp;lt;property name=&amp;quot;portletModeMap&amp;quot;&amp;gt;
<br />&amp;lt;map&amp;gt;
<br />&amp;lt;entry key=&amp;quot;view&amp;quot;&amp;gt;
<br />&amp;lt;ref bean=&amp;quot;TestPortalSpringMySQL&amp;quot; /&amp;gt;
<br />entry&amp;gt;
<br />&amp;lt;entry key=&amp;quot;edit&amp;quot;&amp;gt;
<br />&amp;lt;ref bean=&amp;quot;loginFormController&amp;quot; /&amp;gt;
<br />entry&amp;gt;
<br />map&amp;gt;
<br />property&amp;gt;
<br />bean&amp;gt;
<br />&amp;lt;bean id=&amp;quot;viewResolver&amp;quot;
<br />class=&amp;quot;org.springframework.web.servlet.view.InternalResourceViewResolver&amp;quot;&amp;gt;
<br />&amp;lt;property name=&amp;quot;viewClass&amp;quot;
<br />value=&amp;quot;org.springframework.web.servlet.view.InternalResourceView&amp;quot; /&amp;gt;
<br />&amp;lt;property name=&amp;quot;prefix&amp;quot; value=&amp;quot;/WEB-INF/jsp/&amp;quot; /&amp;gt;
<br />&amp;lt;property name=&amp;quot;suffix&amp;quot; value=&amp;quot;.jsp&amp;quot; /&amp;gt;
<br />bean&amp;gt;
<br />beans&amp;gt;
<br /><br />web.xml:
<br /><br />xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
<br />&amp;lt;web-app xmlns:xsi=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema-instance%26amp%3Bquot"target="_blank" rel="nofollow">http://www.w3.org/2001/XMLSchema-instance&amp;quot</a>;
<br />xmlns=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fjavaee%26amp%3Bquot"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/javaee&amp;quot</a>; xmlns:web=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fjavaee%2Fweb-app_2_5.xsd%26amp%3Bquot"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&amp;quot</a>;
<br />xsi:schemaLocation=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fjavaee"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/javaee</a> <a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fjavaee%2Fweb-app_2_5.xsd%26amp%3Bquot"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&amp;quot</a>;
<br />id=&amp;quot;WebApp_ID&amp;quot; version=&amp;quot;2.5&amp;quot;&amp;gt;
<br />&amp;lt;display-name&amp;gt;TestPortalSpringMySQLdisplay-name&amp;gt;
<br />&amp;lt;listener&amp;gt;
<br />&amp;lt;listener-class&amp;gt;org.springframework.web.context.ContextLoaderListenerlistener-class&amp;gt;
<br />listener&amp;gt;
<br />&amp;lt;servlet&amp;gt;
<br />&amp;lt;servlet-name&amp;gt;view-servletservlet-name&amp;gt;
<br />&amp;lt;servlet-class&amp;gt;org.springframework.web.servlet.ViewRendererServletservlet-class&amp;gt;
<br />&amp;lt;load-on-startup&amp;gt;1load-on-startup&amp;gt;
<br />servlet&amp;gt;
<br />&amp;lt;servlet-mapping&amp;gt;
<br />&amp;lt;servlet-name&amp;gt;view-servletservlet-name&amp;gt;
<br />&amp;lt;url-pattern&amp;gt;/WEB-INF/servlet/viewurl-pattern&amp;gt;
<br />servlet-mapping&amp;gt;
<br />web-app&amp;gt;
]]>
		</document>
		<document id="83be24f29be3293762fdacda709c3e97" url=""><![CDATA[Integration of Portal with SQL using Spring Frame Work and H<br/><br/> TestPortalSpringHibernateMySQL: This project shows you the usage of Portal, Spring and Hibernate on My-SQL DataBase.
<br /><br />LoginFormController:
<br /><br />package Controller;
<br /><br />import javax.portlet.ActionRequest;
<br /><br />import javax.portlet.ActionResponse;
<br /><br />import org.springframework.jdbc.core.JdbcTemplate;
<br /><br />import org.springframework.jdbc.datasource.DriverManagerDataSource;
<br /><br />import org.springframework.validation.BindException;
<br /><br />import org.springframework.web.portlet.mvc.SimpleFormController;
<br /><br />import org.hibernate.Query;
<br /><br />import org.hibernate.Session;
<br /><br />import org.hibernate.SessionFactory;
<br /><br />import org.hibernate.Transaction;
<br /><br />import org.hibernate.cfg.Configuration;
<br /><br />import org.springframework.web.servlet.ModelAndView;
<br /><br />import org.springframework.web.servlet.view.RedirectView;
<br /><br />public class LoginFormController extends SimpleFormController {
<br /><br />@Override
<br /><br />public void onSubmitAction(ActionRequest request, ActionResponse response, Object command, BindException errors) throws Exception {
<br /><br />LoginFormData formData = (LoginFormData)command;
<br /><br />if (request.getParameter(&quot;Insert&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" /> != null) {
<br /><br />// delete object
<br /><br />Insert(command, errors);
<br /><br />} else if (request.getParameter(&quot;Update&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" /> != null) {
<br /><br />// Update object
<br /><br />Update(command, errors);
<br /><br />} else if (request.getParameter(&quot;Delete&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" /> != null) {
<br /><br />// Delete object
<br /><br />Delete(command, errors);
<br /><br />}
<br /><br />}
<br /><br />public void Insert(Object command, BindException errors) throws Exception {
<br /><br />/*
<br /><br />LoginFormData formData = (LoginFormData)command;
<br /><br />DriverManagerDataSource dataSource = new DriverManagerDataSource();
<br /><br />dataSource.setDriverClassName(&quot;com.mysql.jdbc.Driver&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />dataSource.setUrl(&quot;jdbc:mysql://localhost/siddhutest_db&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />dataSource.setUsername(&quot;root&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />dataSource.setPassword(&quot;&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />JdbcTemplate template = new JdbcTemplate(dataSource);
<br /><br />template.update(&quot;insert into test_table (id, name) values (?, <img class="smiley" src="http://www.pan.net/smilies/unsure.gif" alt=":)" />&quot;, new Object[] {formData.getId(), formData.getName()});
<br /><br />*/
<br /><br />LoginFormData formData = (LoginFormData)command;
<br /><br />Session session = null;
<br /><br />try{
<br /><br />// This step will read hibernate.cfg.xml and prepare hibernate for use
<br /><br />SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();
<br /><br />session =sessionFactory.openSession();
<br /><br />//Create new instance of Contact and set values in it by reading them from form object
<br /><br />test_table objtest_table = new test_table();
<br /><br />objtest_table.setId(formData.getId());
<br /><br />objtest_table.setName(formData.getName());
<br /><br />session.save(objtest_table);
<br /><br />}catch(Exception e){
<br /><br />e.printStackTrace();
<br /><br />}finally{
<br /><br />// Actual contact insertion will happen at this step
<br /><br />session.flush();
<br /><br />session.close();
<br /><br />}
<br /><br />}
<br /><br />public void Update(Object command, BindException errors) throws Exception {
<br /><br />/*
<br /><br />LoginFormData formData = (LoginFormData)command;
<br /><br />DriverManagerDataSource dataSource = new DriverManagerDataSource();
<br /><br />dataSource.setDriverClassName(&quot;com.mysql.jdbc.Driver&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />dataSource.setUrl(&quot;jdbc:mysql://localhost/siddhutest_db&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />dataSource.setUsername(&quot;root&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />dataSource.setPassword(&quot;&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />JdbcTemplate template = new JdbcTemplate(dataSource);
<br /><br />template.update(&quot;update test_table set name = ? where id = ?&quot;, new Object[] {formData.getName(),formData.getId()});
<br /><br />*/
<br /><br />LoginFormData formData = (LoginFormData)command;
<br /><br />Session session = null;
<br /><br />try {
<br /><br />SessionFactory fact = new Configuration().configure().buildSessionFactory();
<br /><br />session = fact.openSession();
<br /><br />Transaction tr = session.beginTransaction();
<br /><br />test_table objtest_table = (test_table)session.get
<br /><br />(test_table.class, formData.getId());
<br /><br />objtest_table.setName(formData.getName());
<br /><br />session.update(objtest_table);
<br /><br />tr.commit();
<br /><br />session.close();
<br /><br />}
<br /><br />catch(Exception e){
<br /><br />System.out.println(e.getMessage());
<br /><br />} finally{
<br /><br />// Actual contact insertion will happen at this step
<br /><br />session.flush();
<br /><br />session.close();
<br /><br />}
<br /><br />}
<br /><br />public void Delete(Object command, BindException errors) throws Exception {
<br /><br />/*
<br /><br />LoginFormData formData = (LoginFormData)command;
<br /><br />DriverManagerDataSource dataSource = new DriverManagerDataSource();
<br /><br />dataSource.setDriverClassName(&quot;com.mysql.jdbc.Driver&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />dataSource.setUrl(&quot;jdbc:mysql://localhost/siddhutest_db&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />dataSource.setUsername(&quot;root&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />dataSource.setPassword(&quot;&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />JdbcTemplate template = new JdbcTemplate(dataSource);
<br /><br />template.update(&quot;delete from test_table where id = ?&quot;, new Object[] {formData.getId()});
<br /><br />*/
<br /><br />LoginFormData formData = (LoginFormData)command;
<br /><br />Session sess = null;
<br /><br />try {
<br /><br />SessionFactory fact = new Configuration().configure().buildSessionFactory();
<br /><br />sess = fact.openSession();
<br /><br />test_table objtest_table = (test_table)sess.get(test_table.class, formData.getId());
<br /><br />Transaction tr = sess.beginTransaction();
<br /><br />objtest_table.setName(formData.getName());
<br /><br />sess.delete(objtest_table);
<br /><br />tr.commit();
<br /><br />sess.close();
<br /><br />}
<br /><br />catch(Exception e){
<br /><br />System.out.println(e.getMessage());
<br /><br />} finally{
<br /><br />// Actual contact insertion will happen at this step
<br /><br />sess.flush();
<br /><br />sess.close();
<br /><br />}
<br /><br />}
<br /><br />}
<br /><br />LoginFormData:
<br /><br />package Controller;
<br />import java.io.Serializable;
<br />public class LoginFormData implements Serializable{
<br />private String id;
<br />private String name;
<br />public String getId() {
<br />return id;
<br />}
<br />public void setId(String id) {
<br />this.id = id;
<br />}
<br />public String getName() {
<br />return name;
<br />}
<br />public void setName(String name) {
<br />this.name = name;
<br />}
<br />}
<br /><br />test_table:
<br /><br />package Controller;
<br />/**
<br />* @author Siddharatha Dhumale
<br />*
<br />*
<br />* Java Class to map to the datbase Contact Table
<br />*/
<br />public class test_table {
<br />private String id;
<br />private String name;
<br />/**
<br />* @return
<br />*/
<br />public String getId() {
<br />return id;
<br />}
<br />/**
<br />* @return
<br />*/
<br />public void setId(String id) {
<br />this.id = id;
<br />}
<br />/**
<br />* @return
<br />*/
<br />public String getName() {
<br />return name;
<br />}
<br />/**
<br />* @return
<br />*/
<br />public void setName(String name) {
<br />this.name = name;
<br />}
<br />}
<br /><br />TestPortalSpringHibernateMySQL:
<br /><br />package testPortalSpringHibernateMySQL;
<br /><br />import java.util.HashMap;
<br /><br />import java.util.Map;
<br /><br />import javax.portlet.ActionRequest;
<br /><br />import javax.portlet.ActionResponse;
<br /><br />import javax.portlet.RenderRequest;
<br /><br />import javax.portlet.RenderResponse;
<br /><br />import org.springframework.web.portlet.ModelAndView;
<br /><br />import org.springframework.web.portlet.mvc.Controller;
<br /><br />public class TestPortalSpringHibernateMySQL implements Controller {
<br /><br />/* (non-Javadoc)
<br /><br />* @see javax.portlet.GenericPortlet#doView(javax.portlet.RenderRequest, javax.portlet.RenderResponse)
<br /><br />*/
<br /><br />/*
<br /><br />@Override
<br /><br />protected void doView(RenderRequest request, RenderResponse response)
<br /><br />throws PortletException, IOException, UnavailableException {
<br /><br />response.setContentType(&quot;text/html&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />PrintWriter writer = response.getWriter();
<br /><br />writer.write(&quot;Hello World!&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />writer.close();
<br /><br />}*/
<br /><br />/**
<br /><br />* action method.
<br /><br />*/
<br /><br />public void handleActionRequest(ActionRequest request,
<br /><br />ActionResponse response) throws Exception {
<br /><br />//-- do nothing the Hello World portlet doesn't receive
<br /><br />//-- action requests.
<br /><br />}
<br /><br />/**
<br /><br />* render method.
<br /><br />*/
<br /><br />public ModelAndView handleRenderRequest(RenderRequest request,
<br /><br />RenderResponse response) throws Exception {
<br /><br />Map model = new HashMap();
<br /><br />model.put(&quot;helloWorldMessage&quot;, &quot;Hello World HelloWorldController&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />return new ModelAndView(&quot;helloWorld&quot;, model);
<br /><br />}
<br /><br />}
<br /><br />hibernate.cfg.xml:
<br /><br />xml version='1.0' encoding='utf-8'?&gt;
<br />DOCTYPE hibernate-configuration PUBLIC
<br />&quot;-//Hibernate/Hibernate Configuration DTD//EN&quot;
<br />&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fhibernate.sourceforge.net%2Fhibernate-configuration-3.0.dtd%26quot%3B%26gt"target="_blank" rel="nofollow">http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd&quot;&gt</a>;
<br />&lt;hibernate-configuration&gt;
<br />&lt;session-factory&gt;
<br />&lt;property name=&quot;hibernate.connection.driver_class&quot;&gt;com.mysql.jdbc.Driverproperty&gt;
<br />&lt;property name=&quot;hibernate.connection.url&quot;&gt;jdbc:mysql://localhost/siddhutest_dbproperty&gt;
<br />&lt;property name=&quot;hibernate.connection.username&quot;&gt;rootproperty&gt;
<br />&lt;property name=&quot;hibernate.connection.password&quot;&gt;property&gt;
<br />&lt;property name=&quot;hibernate.connection.pool_size&quot;&gt;10property&gt;
<br />&lt;property name=&quot;show_sql&quot;&gt;trueproperty&gt;
<br />&lt;property name=&quot;dialect&quot;&gt;org.hibernate.dialect.MySQLDialectproperty&gt;
<br />&lt;property name=&quot;hibernate.hbm2ddl.auto&quot;&gt;updateproperty&gt;
<br />&lt;mapping resource=&quot;test_table.hbm.xml&quot;/&gt;
<br />session-factory&gt;
<br />hibernate-configuration&gt;
<br /><br />test_table.hbm.xml:
<br /><br />xml version=&quot;1.0&quot;?&gt;
<br />DOCTYPE hibernate-mapping PUBLIC
<br />&quot;-//Hibernate/Hibernate Mapping DTD 3.0//EN&quot;
<br />&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fhibernate.sourceforge.net%2Fhibernate-mapping-3.0.dtd%26quot%3B%26gt"target="_blank" rel="nofollow">http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd&quot;&gt</a>;
<br />&lt;hibernate-mapping&gt;
<br />&lt;class name=&quot;Controller.test_table&quot; table=&quot;test_table&quot;&gt;
<br />&lt;id name=&quot;id&quot; column=&quot;id&quot; &gt;
<br />&lt;generator class=&quot;assigned&quot;/&gt;
<br />id&gt;
<br />&lt;property name=&quot;name&quot;&gt;
<br />&lt;column name=&quot;name&quot;/&gt;
<br />property&gt;
<br />class&gt;
<br />hibernate-mapping&gt;
<br /><br />applicationContext.xml:
<br /><br />xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
<br />&lt;beans xmlns=&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fbeans%26quot"target="_blank" rel="nofollow">http://www.springframework.org/schema/beans&quot</a>;
<br />xmlns:xsi=&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema-instance%26quot"target="_blank" rel="nofollow">http://www.w3.org/2001/XMLSchema-instance&quot</a>; xmlns<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />=&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fp%26quot"target="_blank" rel="nofollow">http://www.springframework.org/schema/p&quot</a>;
<br />xmlns:context=&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fcontext%26quot"target="_blank" rel="nofollow">http://www.springframework.org/schema/context&quot</a>;
<br />xsi:schemaLocation=&quot;
<br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fbeans"target="_blank" rel="nofollow">http://www.springframework.org/schema/beans</a>
<br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fbeans%2Fspring-beans-3.0.xsd"target="_blank" rel="nofollow">http://www.springframework.org/schema/beans/spring-beans-3.0.xsd</a>
<br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fcontext"target="_blank" rel="nofollow">http://www.springframework.org/schema/context</a>
<br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fcontext%2Fspring-context-3.0.xsd%26quot%3B%26gt"target="_blank" rel="nofollow">http://www.springframework.org/schema/context/spring-context-3.0.xsd&quot;&gt</a>;
<br />beans&gt;
<br /><br />default-object.xml:
<br /><br />xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
<br />DOCTYPE deployments PUBLIC
<br />&quot;-//JBoss Portal//DTD Portal Object 2.6//EN&quot;
<br />&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.jboss.org%2Fportal%2Fdtd%2Fportal-object_2_6.dtd%26quot%3B%26gt"target="_blank" rel="nofollow">http://www.jboss.org/portal/dtd/portal-object_2_6.dtd&quot;&gt</a>;
<br />&lt;deployments&gt;
<br />&lt;deployment&gt;
<br />&lt;parent-ref&gt;default.defaultparent-ref&gt;
<br />&lt;if-exists&gt;overwriteif-exists&gt;
<br />&lt;window&gt;
<br />&lt;window-name&gt;
<br />TestPortalSpringHibernateMySQLWindow
<br />window-name&gt;
<br />&lt;instance-ref&gt;
<br />TestPortalSpringHibernateMySQLInstance
<br />instance-ref&gt;
<br />&lt;region&gt;centerregion&gt;
<br />&lt;height&gt;1height&gt;
<br />&lt;initial-window-state&gt;maximizedinitial-window-state&gt;
<br />window&gt;
<br />deployment&gt;
<br />deployments&gt;
<br /><br />EnterData.jsp:
<br /><br />&lt;html&gt;
<br />&lt;head&gt;
<br />&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=ISO-8859-1&quot;&gt;
<br />&lt;title&gt;Database Modificationtitle&gt;
<br />head&gt;
<br />&lt;body&gt;
<br />No Action has been done on the Database side please check the DB for more confirmation.
<br />body&gt;
<br />html&gt;
<br />helloWorld.jsp:
<br /><br />&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fjsp%2Fjstl%2Fcore%26quot"target="_blank" rel="nofollow">http://java.sun.com/jsp/jstl/core&quot</a>; %&gt;
<br />&lt;%@ page contentType=&quot;text/html&quot; isELIgnored=&quot;false&quot; %&gt;
<br />&lt;c<img class="smiley" src="http://www.pan.net/smilies/ohmy.gif" alt=":)" />ut value=&quot;${helloWorldMessage}&quot;/&gt;
<br /><br />LogIn.jsp:
<br /><br />&lt;%@page contentType=&quot;text/html&quot;%&gt;
<br />&lt;%@page pageEncoding=&quot;UTF-8&quot;%&gt;
<br />&lt;%@ taglib prefix=&quot;portlet&quot; uri=&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fportlet_2_0%26quot"target="_blank" rel="nofollow">http://java.sun.com/portlet_2_0&quot</a>; %&gt;
<br />&lt;html&gt;
<br />&lt;body&gt;
<br />&lt;form method=&quot;POST&quot; action=&quot;&lt;portlet:actionURL/&gt;&quot;&gt;
<br />ID:&lt;input type=&quot;text&quot; name=&quot;id&quot; /&gt;&lt;br/&gt;
<br />Name:&lt;input type=&quot;text&quot; name=&quot;name&quot; /&gt;&lt;br/&gt;
<br />&lt;input type=&quot;submit&quot; value=&quot;Insert1&quot; name=&quot;Insert&quot;/&gt;
<br />&lt;input type=&quot;submit&quot; value=&quot;Update1&quot; name=&quot;Update&quot;/&gt;
<br />&lt;input type=&quot;submit&quot; value=&quot;Delete1&quot; name=&quot;Delete&quot;/&gt;
<br />form&gt;
<br />body&gt;
<br />html&gt;
<br /><br />ResultPage.jsp:
<br /><br />&lt;%@page contentType=&quot;text/html&quot; pageEncoding=&quot;UTF-8&quot;%&gt;
<br />&lt;html&gt;
<br />&lt;body&gt;
<br />&lt;h1&gt;Data Base is updated Successfully!h1&gt;
<br />body&gt;
<br />html&gt;
<br /><br />portlet.xml:
<br /><br />xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
<br />&lt;portlet-app
<br />xmlns=&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fportlet%2Fportlet-app_2_0.xsd%26quot"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/portlet/portlet-app_2_0.xsd&quot</a>;
<br />xmlns:xsi=&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema-instance%26quot"target="_blank" rel="nofollow">http://www.w3.org/2001/XMLSchema-instance&quot</a>;
<br />xsi:schemaLocation=&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fportlet%2Fportlet-app_2_0.xsd"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/portlet/portlet-app_2_0.xsd</a> <a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fportlet%2Fportlet-app_2_0.xsd%26quot"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/portlet/portlet-app_2_0.xsd&quot</a>;
<br />version=&quot;2.0&quot;&gt;
<br />&lt;portlet&gt;
<br />&lt;portlet-name&gt;TestPortalSpringHibernateMySQLportlet-name&gt;
<br />&lt;display-name&gt;TestPortalSpringHibernateMySQLdisplay-name&gt;
<br />&lt;portlet-class&gt;org.springframework.web.portlet.DispatcherPortletportlet-class&gt;
<br />&lt;supports&gt;
<br />&lt;mime-type&gt;text/htmlmime-type&gt;
<br />&lt;portlet-mode&gt;viewportlet-mode&gt;
<br />&lt;portlet-mode&gt;editportlet-mode&gt;
<br />&lt;portlet-mode&gt;helpportlet-mode&gt;
<br />supports&gt;
<br />&lt;portlet-info&gt;
<br />&lt;title&gt;TestPortalSpringHibernateMySQLtitle&gt;
<br />portlet-info&gt;
<br />portlet&gt;
<br />portlet-app&gt;
<br /><br />portlet-instances.xml:
<br /><br />xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
<br />DOCTYPE deployments PUBLIC
<br />&quot;-//JBoss Portal//DTD Portlet Instances 2.6//EN&quot;
<br />&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.jboss.org%2Fportal%2Fdtd%2Fportlet-instances_2_6.dtd%26quot%3B%26gt"target="_blank" rel="nofollow">http://www.jboss.org/portal/dtd/portlet-instances_2_6.dtd&quot;&gt</a>;
<br />&lt;deployments&gt;
<br />&lt;deployment&gt;
<br />&lt;instance&gt;
<br />&lt;instance-id&gt;
<br />TestPortalSpringHibernateMySQLInstance
<br />instance-id&gt;
<br />&lt;portlet-ref&gt;TestPortalSpringHibernateMySQLportlet-ref&gt;
<br />instance&gt;
<br />deployment&gt;
<br />deployments&gt;
<br /><br />TestPortalSpringHibernateMySQL-portlet.xmlL:
<br /><br />xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
<br />&lt;beans xmlns=&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fbeans%26quot"target="_blank" rel="nofollow">http://www.springframework.org/schema/beans&quot</a>;
<br />xmlns:xsi=&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema-instance%26quot"target="_blank" rel="nofollow">http://www.w3.org/2001/XMLSchema-instance&quot</a>; xmlns<img class="smiley" src="http://www.pan.net/smilies/tongue.gif" alt=":)" />=&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fp%26quot"target="_blank" rel="nofollow">http://www.springframework.org/schema/p&quot</a>;
<br />xmlns:context=&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fcontext%26quot"target="_blank" rel="nofollow">http://www.springframework.org/schema/context&quot</a>;
<br />xsi:schemaLocation=&quot;
<br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fbeans"target="_blank" rel="nofollow">http://www.springframework.org/schema/beans</a>
<br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fbeans%2Fspring-beans-3.0.xsd"target="_blank" rel="nofollow">http://www.springframework.org/schema/beans/spring-beans-3.0.xsd</a>
<br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fcontext"target="_blank" rel="nofollow">http://www.springframework.org/schema/context</a>
<br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.springframework.org%2Fschema%2Fcontext%2Fspring-context-3.0.xsd%26quot%3B%26gt"target="_blank" rel="nofollow">http://www.springframework.org/schema/context/spring-context-3.0.xsd&quot;&gt</a>;
<br />&lt;bean id=&quot;TestPortalSpringHibernateMySQL&quot; class=&quot;testPortalSpringHibernateMySQL.TestPortalSpringHibernateMySQL&quot; /&gt;
<br />&lt;bean id=&quot;loginFormController&quot; class=&quot;Controller.LoginFormController&quot;&gt;
<br />&lt;property name=&quot;formView&quot; value=&quot;LogIn&quot; /&gt;
<br />&lt;property name=&quot;successView&quot; value=&quot;ResultPage&quot; /&gt;
<br />&lt;property name=&quot;commandName&quot; value=&quot;loginData&quot; /&gt;
<br />&lt;property name=&quot;commandClass&quot; value=&quot;Controller.LoginFormData&quot; /&gt;
<br />bean&gt;
<br />&lt;bean id=&quot;portletModeHandlerMapping&quot;
<br />class=&quot;org.springframework.web.portlet.handler.PortletModeHandlerMapping&quot;&gt;
<br />&lt;property name=&quot;portletModeMap&quot;&gt;
<br />&lt;map&gt;
<br />&lt;entry key=&quot;view&quot;&gt;
<br />&lt;ref bean=&quot;loginFormController&quot; /&gt;
<br />entry&gt;
<br />&lt;entry key=&quot;edit&quot;&gt;
<br />&lt;ref bean=&quot;loginFormController&quot; /&gt;
<br />entry&gt;
<br />map&gt;
<br />property&gt;
<br />bean&gt;
<br />&lt;bean id=&quot;viewResolver&quot;
<br />class=&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;&gt;
<br />&lt;property name=&quot;viewClass&quot;
<br />value=&quot;org.springframework.web.servlet.view.InternalResourceView&quot; /&gt;
<br />&lt;property name=&quot;prefix&quot; value=&quot;/WEB-INF/jsp/&quot; /&gt;
<br />&lt;property name=&quot;suffix&quot; value=&quot;.jsp&quot; /&gt;
<br />bean&gt;
<br />beans&gt;
<br /><br />web.xml:
<br /><br />xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
<br />&lt;web-app xmlns:xsi=&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema-instance%26quot"target="_blank" rel="nofollow">http://www.w3.org/2001/XMLSchema-instance&quot</a>;
<br />xmlns=&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fjavaee%26quot"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/javaee&quot</a>; xmlns:web=&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fjavaee%2Fweb-app_2_5.xsd%26quot"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot</a>;
<br />xsi:schemaLocation=&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fjavaee"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/javaee</a> <a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fjavaee%2Fweb-app_2_5.xsd%26quot"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot</a>;
<br />id=&quot;WebApp_ID&quot; version=&quot;2.5&quot;&gt;
<br />&lt;display-name&gt;TestPortalSpringHibernateMySQLdisplay-name&gt;
<br />&lt;listener&gt;
<br />&lt;listener-class&gt;org.springframework.web.context.ContextLoaderListenerlistener-class&gt;
<br />listener&gt;
<br />&lt;servlet&gt;
<br />&lt;servlet-name&gt;view-servletservlet-name&gt;
<br />&lt;servlet-class&gt;org.springframework.web.servlet.ViewRendererServletservlet-class&gt;
<br />&lt;load-on-startup&gt;1load-on-startup&gt;
<br />servlet&gt;
<br />&lt;servlet-mapping&gt;
<br />&lt;servlet-name&gt;view-servletservlet-name&gt;
<br />&lt;url-pattern&gt;/WEB-INF/servlet/viewurl-pattern&gt;
<br />servlet-mapping&gt;
<br />web-app&gt;
]]>
		</document>
		<document id="396466f282a507462d781e5ec79fb839" url=""><![CDATA[Jersey Restful Web Service Example<br/><br/>TestJerseyRestWebService : This example shows to use the run time parameter while executing REST Webservices.
<br /><br />HelloWorldResources:
<br /><br />package testJerseyRestWebService;
<br /><br />import javax.ws.rs.GET;
<br /><br />import javax.ws.rs.Path;
<br /><br />import javax.ws.rs.PathParam;
<br /><br />import javax.ws.rs.Produces;
<br /><br />import javax.ws.rs.core.MediaType;
<br /><br />//Please refer jersey-documentation-1.1.5-ea-SNAPSHOT-user-guide.pdf to attached project
<br /><br />//<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fblog.iparissa.com%2Fgoogle-app-engine-jax-rs-jersey%2F"target="_blank" rel="nofollow">http://blog.iparissa.com/google-app-engine-jax-rs-jersey/</a>
<br /><br />//The Java class will be hosted at the URI path &amp;amp;amp;amp;amp;quot;/helloworld&amp;amp;amp;amp;amp;quot;
<br /><br />@Path(&amp;amp;amp;amp;amp;quot;/helloworld/{firstnumber}/{secondnumber}&amp;amp;amp;amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />
<br /><br />public class HelloWorldResources {
<br /><br />/*
<br /><br />// The Java method will process HTTP GET requests
<br /><br />@GET
<br /><br />// The Java method will produce content identified by the MIME Media
<br /><br />// type &amp;amp;amp;amp;amp;quot;text/plain&amp;amp;amp;amp;amp;quot;
<br /><br />@Produces(&amp;amp;amp;amp;amp;quot;text/plain&amp;amp;amp;amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />
<br /><br />public String getClichedMessage(@PathParam(&amp;amp;amp;amp;amp;quot;username&amp;amp;amp;amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" /> String userName) {
<br /><br />// Return some cliched textual content
<br /><br />return &amp;amp;amp;amp;amp;quot; Hello, &amp;amp;amp;amp;amp;quot;+userName +&amp;amp;amp;amp;amp;quot; +Welcome to the world of JAX-RS! PLAIN&amp;amp;amp;amp;amp;quot;;
<br /><br />}
<br /><br />@GET
<br /><br />@Produces(MediaType.TEXT_XML)
<br /><br />public String getClichedMessageXML(@PathParam(&amp;amp;amp;amp;amp;quot;username&amp;amp;amp;amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" /> String userName) {
<br /><br />// Return some cliched textual content
<br /><br />return &amp;amp;amp;amp;amp;quot; Hello, &amp;amp;amp;amp;amp;quot;+userName +&amp;amp;amp;amp;amp;quot; +Welcome to the world of JAX-RS! XML &amp;amp;amp;amp;amp;quot;;
<br /><br />}
<br /><br />@GET
<br /><br />@Produces(MediaType.TEXT_HTML)
<br /><br />public String getClichedMessageHTML(@PathParam(&amp;amp;amp;amp;amp;quot;username&amp;amp;amp;amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" /> String userName) {
<br /><br />// Return some cliched textual content
<br /><br />return &amp;amp;amp;amp;amp;quot; Hello, &amp;amp;amp;amp;amp;quot;+userName +&amp;amp;amp;amp;amp;quot; +Welcome to the world of JAX-RS! HTML&amp;amp;amp;amp;amp;quot;;
<br /><br />}
<br /><br />*/
<br /><br />@GET
<br /><br />@Produces(MediaType.TEXT_PLAIN)
<br /><br />public String getAddition(@PathParam(&amp;amp;amp;amp;amp;quot;firstnumber&amp;amp;amp;amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" /> String firstNumber,@PathParam(&amp;amp;amp;amp;amp;quot;secondnumber&amp;amp;amp;amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" /> String secondNumber) {
<br /><br />// Return some cliched textual content
<br /><br />System.out.println(&amp;amp;amp;amp;amp;quot;Inside TEXT_PLAIN&amp;amp;amp;amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />Integer ans = Integer.parseInt(firstNumber) + Integer.parseInt(secondNumber);
<br /><br />return &amp;amp;amp;amp;amp;quot; Addition of two values is : &amp;amp;amp;amp;amp;quot;+ans.toString();
<br /><br />}
<br /><br />@GET
<br /><br />@Produces(MediaType.TEXT_XML)
<br /><br />public String getAdditionXML(@PathParam(&amp;amp;amp;amp;amp;quot;firstnumber&amp;amp;amp;amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" /> String firstNumber,@PathParam(&amp;amp;amp;amp;amp;quot;secondnumber&amp;amp;amp;amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" /> String secondNumber) {
<br /><br />// Return some cliched textual content
<br /><br />System.out.println(&amp;amp;amp;amp;amp;quot;Inside TEXT_PLAIN&amp;amp;amp;amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />Integer ans = Integer.parseInt(firstNumber) + Integer.parseInt(secondNumber);
<br /><br />return &amp;amp;amp;amp;amp;quot; Addition of two values is : &amp;amp;amp;amp;amp;quot;+ans.toString();
<br /><br />}
<br /><br />@GET
<br /><br />@Produces(MediaType.TEXT_HTML)
<br /><br />public String getAdditionHTML(@PathParam(&amp;amp;amp;amp;amp;quot;firstnumber&amp;amp;amp;amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" /> String firstNumber,@PathParam(&amp;amp;amp;amp;amp;quot;secondnumber&amp;amp;amp;amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" /> String secondNumber) {
<br /><br />// Return some cliched textual content
<br /><br />System.out.println(&amp;amp;amp;amp;amp;quot;Inside TEXT_PLAIN&amp;amp;amp;amp;amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />Integer ans = Integer.parseInt(firstNumber) + Integer.parseInt(secondNumber);
<br /><br />return &amp;amp;amp;amp;amp;quot; Addition of two values is : &amp;amp;amp;amp;amp;quot;+ans.toString();
<br /><br />}
<br /><br />}
<br /><br />appengine-web.xml:
<br /><br />xml version=&amp;amp;amp;amp;amp;quot;1.0&amp;amp;amp;amp;amp;quot; encoding=&amp;amp;amp;amp;amp;quot;utf-8&amp;amp;amp;amp;amp;quot;?&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;appengine-web-app xmlns=&amp;amp;amp;amp;amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fappengine.google.com%2Fns%2F1.0%26amp%3Bamp%3Bamp%3Bamp%3Bamp%3Bquot%3B%26amp%3Bamp%3Bamp%3Bamp%3Bamp%3Bgt"target="_blank" rel="nofollow">http://appengine.google.com/ns/1.0&amp;amp;amp;amp;amp;quot;&amp;amp;amp;amp;amp;gt</a>;
<br />&amp;amp;amp;amp;amp;lt;application&amp;amp;amp;amp;amp;gt;application&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;version&amp;amp;amp;amp;amp;gt;1version&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;system-properties&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;property name=&amp;amp;amp;amp;amp;quot;java.util.logging.config.file&amp;amp;amp;amp;amp;quot; value=&amp;amp;amp;amp;amp;quot;WEB-INF/logging.properties&amp;amp;amp;amp;amp;quot;/&amp;amp;amp;amp;amp;gt;
<br />system-properties&amp;amp;amp;amp;amp;gt;
<br />appengine-web-app&amp;amp;amp;amp;amp;gt;
<br /><br />Web.xml:
<br /><br />xml version=&amp;amp;amp;amp;amp;quot;1.0&amp;amp;amp;amp;amp;quot; encoding=&amp;amp;amp;amp;amp;quot;utf-8&amp;amp;amp;amp;amp;quot;?&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;web-app xmlns:xsi=&amp;amp;amp;amp;amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema-instance%26amp%3Bamp%3Bamp%3Bamp%3Bamp%3Bquot"target="_blank" rel="nofollow">http://www.w3.org/2001/XMLSchema-instance&amp;amp;amp;amp;amp;quot</a>;
<br />xmlns=&amp;amp;amp;amp;amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fjavaee%26amp%3Bamp%3Bamp%3Bamp%3Bamp%3Bquot"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/javaee&amp;amp;amp;amp;amp;quot</a>; xmlns:web=&amp;amp;amp;amp;amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fjavaee%2Fweb-app_2_5.xsd%26amp%3Bamp%3Bamp%3Bamp%3Bamp%3Bquot"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&amp;amp;amp;amp;amp;quot</a>;
<br />xsi:schemaLocation=&amp;amp;amp;amp;amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fjavaee"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/javaee</a>
<br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fjavaee%2Fweb-app_2_5.xsd%26amp%3Bamp%3Bamp%3Bamp%3Bamp%3Bquot"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&amp;amp;amp;amp;amp;quot</a>;
<br />version=&amp;amp;amp;amp;amp;quot;2.5&amp;amp;amp;amp;amp;quot;&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;servlet&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;servlet-name&amp;amp;amp;amp;amp;gt;Jersey Web Applicationservlet-name&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;servlet-class&amp;amp;amp;amp;amp;gt;com.sun.jersey.spi.container.servlet.ServletContainerservlet-class&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;init-param&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;param-name&amp;amp;amp;amp;amp;gt;com.sun.jersey.api.core.packagesparam-name&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;param-value&amp;amp;amp;amp;amp;gt;com.dclonline.jerseytestparam-value&amp;amp;amp;amp;amp;gt;
<br />init-param&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;load-on-startup&amp;amp;amp;amp;amp;gt;1load-on-startup&amp;amp;amp;amp;amp;gt;
<br />servlet&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;servlet-mapping&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;servlet-name&amp;amp;amp;amp;amp;gt;Jersey Web Applicationservlet-name&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;url-pattern&amp;amp;amp;amp;amp;gt;/resources/*url-pattern&amp;amp;amp;amp;amp;gt;
<br />servlet-mapping&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;welcome-file-list&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;welcome-file&amp;amp;amp;amp;amp;gt;index.htmlwelcome-file&amp;amp;amp;amp;amp;gt;
<br />welcome-file-list&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;session-config&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;session-timeout&amp;amp;amp;amp;amp;gt;30session-timeout&amp;amp;amp;amp;amp;gt;
<br />session-config&amp;amp;amp;amp;amp;gt;
<br />web-app&amp;amp;amp;amp;amp;gt;
<br /><br />Index.html:
<br /><br />DOCTYPE HTML PUBLIC &amp;amp;amp;amp;amp;quot;-//W3C//DTD HTML 4.01 Transitional//EN&amp;amp;amp;amp;amp;quot;&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;html&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;head&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;meta http-equiv=&amp;amp;amp;amp;amp;quot;content-type&amp;amp;amp;amp;amp;quot; content=&amp;amp;amp;amp;amp;quot;text/html; charset=UTF-8&amp;amp;amp;amp;amp;quot;&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;title&amp;amp;amp;amp;amp;gt;Hello App Enginetitle&amp;amp;amp;amp;amp;gt;
<br />head&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;body&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;h1&amp;amp;amp;amp;amp;gt;Hello App Engine!h1&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;table&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;tr&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;td colspan=&amp;amp;amp;amp;amp;quot;2&amp;amp;amp;amp;amp;quot; style=&amp;amp;amp;amp;amp;quot;font-weight:bold;&amp;amp;amp;amp;amp;quot;&amp;amp;amp;amp;amp;gt;Available Servlets:td&amp;amp;amp;amp;amp;gt;
<br />tr&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;tr&amp;amp;amp;amp;amp;gt;
<br />&amp;amp;amp;amp;amp;lt;td&amp;amp;amp;amp;amp;gt;&amp;amp;amp;amp;amp;lt;a href=&amp;amp;amp;amp;amp;quot;resources/helloworld/1/2&amp;amp;amp;amp;amp;quot;&amp;amp;amp;amp;amp;gt;TestJerseyRestWebServicea&amp;amp;amp;amp;amp;gt;td&amp;amp;amp;amp;amp;gt;
<br />tr&amp;amp;amp;amp;amp;gt;
<br />table&amp;amp;amp;amp;amp;gt;
<br />body&amp;amp;amp;amp;amp;gt;
<br />html&amp;amp;amp;amp;amp;gt;
]]>
		</document>
		<document id="4ee62bdeb4eeba45173a239bfd08a66f" url=""><![CDATA[Integration of Ext-GWT with Jersey Web Service<br/><br/> TestExtGWTJerseyWebServiceClient : This example provide the usage of Ext-GWT along with REST WebService to perform Database operation on My-SQL Db.
<br /><br />TestExtGWTJerseyWebServiceClient.gwt.xml:
<br /><br />xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
<br />&lt;module rename-to='testextgwtjerseywebserviceclient'&gt;
<br />&lt;inherits name='com.google.gwt.user.User'/&gt;
<br />&lt;inherits name='com.google.gwt.user.theme.standard.Standard'/&gt;
<br />&lt;inherits name='com.extjs.gxt.ui.GXT' /&gt;
<br />&lt;entry-point class='testExtGWTJerseyWebServiceClient.client.TestExtGWTJerseyWebServiceClient'/&gt;
<br />&lt;source path='client'/&gt;
<br />&lt;source path='shared'/&gt;
<br />module&gt;
<br /><br />GreetingService:
<br /><br />package testExtGWTJerseyWebServiceClient.client;
<br /><br />import com.google.gwt.user.client.rpc.RemoteService;
<br /><br />import com.google.gwt.user.client.rpc.RemoteServiceRelativePath;
<br /><br />/**
<br /><br />* The client side stub for the RPC service.
<br /><br />*/
<br /><br />@RemoteServiceRelativePath(&quot;greet&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />
<br /><br />public interface GreetingService extends RemoteService {
<br /><br />String greetServer(String name) throws IllegalArgumentException;
<br /><br />}
<br /><br />GreetingServiceAsync:
<br /><br />package testExtGWTJerseyWebServiceClient.client;
<br />import com.google.gwt.user.client.rpc.AsyncCallback;
<br />/**
<br />* The async counterpart of GreetingService.
<br />*/
<br />public interface GreetingServiceAsync {
<br />void greetServer(String input, AsyncCallback callback)
<br />throws IllegalArgumentException;
<br />}
<br /><br />TestExtGWTJerseyWebServiceClient:
<br /><br />package testExtGWTJerseyWebServiceClient.client;
<br /><br />import com.extjs.gxt.ui.client.Style.HorizontalAlignment;
<br /><br />import com.extjs.gxt.ui.client.event.ButtonEvent;
<br /><br />import com.extjs.gxt.ui.client.event.SelectionListener;
<br /><br />import com.extjs.gxt.ui.client.widget.Layout;
<br /><br />import com.extjs.gxt.ui.client.widget.LayoutContainer;
<br /><br />import com.extjs.gxt.ui.client.widget.VerticalPanel;
<br /><br />import com.extjs.gxt.ui.client.widget.button.Button;
<br /><br />import com.extjs.gxt.ui.client.widget.form.FormButtonBinding;
<br /><br />import com.extjs.gxt.ui.client.widget.form.FormPanel;
<br /><br />import com.extjs.gxt.ui.client.widget.layout.AnchorLayout;
<br /><br />import com.extjs.gxt.ui.client.widget.layout.FormData;
<br /><br />import com.google.gwt.core.client.EntryPoint;
<br /><br />import com.google.gwt.core.client.GWT;
<br /><br />import com.google.gwt.user.client.Element;
<br /><br />import com.google.gwt.user.client.rpc.AsyncCallback;
<br /><br />import com.google.gwt.user.client.rpc.ServiceDefTarget;
<br /><br />import com.google.gwt.user.client.ui.RootPanel;
<br /><br />/*
<br /><br />* Here first we need to make the REST Webservice started on the local host (Tomcat) and then made the call
<br /><br />* and then we need to run this EXTGWT using GWT Plugin
<br /><br />*/
<br /><br />/**
<br /><br />* Entry point classes define onModuleLoad().
<br /><br />*/
<br /><br />public class TestExtGWTJerseyWebServiceClient implements EntryPoint {
<br /><br />/**
<br /><br />* The message displayed to the user when the server cannot be reached or
<br /><br />* returns an error.
<br /><br />*/
<br /><br />private static final String SERVER_ERROR = &quot;An error occurred while &quot;
<br /><br />+ &quot;attempting to contact the server. Please check your network &quot;
<br /><br />+ &quot;connection and try again.&quot;;
<br /><br />//private final GreetingServiceAsync greetingService = GWT.create(GreetingService.class);
<br /><br />private static testExtGWTJerseyWebServiceClient.client.GreetingServiceAsync ourInstance = getInstance();
<br /><br />public static synchronized testExtGWTJerseyWebServiceClient.client.GreetingServiceAsync getInstance() {
<br /><br />if (ourInstance == null) {
<br /><br />ourInstance = (testExtGWTJerseyWebServiceClient.client.GreetingServiceAsync) GWT.create(GreetingService.class);
<br /><br />((ServiceDefTarget) ourInstance).setServiceEntryPoint(GWT.getModuleBaseURL() + &quot;GreetingService&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />}
<br /><br />return ourInstance;
<br /><br />}
<br /><br />private VerticalPanel vp;
<br /><br />private FormData formData;
<br /><br />public void onModuleLoad() {
<br /><br />//to add something TBD
<br /><br />@SuppressWarnings(&quot;unused&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />
<br /><br />Layout junk = new AnchorLayout();
<br /><br />TemplateJerseyRESTExample objTemplateJerseyRESTExample = new TemplateJerseyRESTExample();
<br /><br />RootPanel.get().add(objTemplateJerseyRESTExample);
<br /><br />}
<br /><br />class TemplateJerseyRESTExample extends LayoutContainer
<br /><br />{
<br /><br />@Override
<br /><br />protected void onRender(Element parent, int index) {
<br /><br />super.onRender(parent, index);
<br /><br />formData = new FormData(&quot;-20&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />vp = new VerticalPanel();
<br /><br />vp.setSpacing(10);
<br /><br />//createForm1();
<br /><br />FormPanel simple = new FormPanel();
<br /><br />simple.setHeading(&quot;Test Ext-GWT Jersey REST Webservice Client Project Form&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />simple.setFrame(true);
<br /><br />simple.setWidth(350);
<br /><br />/*
<br /><br />final TextField id = new TextField();
<br /><br />id.setFieldLabel(&quot;Id&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />//firstName.setAllowBlank(false);
<br /><br />simple.add(id, formData);
<br /><br />final TextField name = new TextField();
<br /><br />name.setFieldLabel(&quot;Name&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />//name.setAllowBlank(false);
<br /><br />simple.add(name, formData);
<br /><br />*/
<br /><br />SelectionListener l = new SelectionListener() {
<br /><br />@Override
<br /><br />public void componentSelected(ButtonEvent ce) {
<br /><br />//Info.display(&quot;Click&quot;, ce.getButton().getText() + &quot; clicked&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />if(ce.getButton().getText()!= null &amp;&amp; (!ce.getButton().getText().equals(&quot;&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />&amp;&amp;ce.getButton().getText().equals(&quot;Insert&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />))
<br /><br />{
<br /><br />//String idText = id.getValue();
<br /><br />//String nameText = name.getValue();
<br /><br />ourInstance.greetServer(&quot;insert&quot;,new AsyncCallback() {
<br /><br />public void onFailure(Throwable caught) {
<br /><br />// Show the RPC error message to the user
<br /><br />//RootPanel.get().add(new HTML(&quot;RPC call failed. <img class="smiley" src="http://www.pan.net/smilies/sad.gif" alt=":)" />&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />);
<br /><br />}
<br /><br />public void onSuccess(String result) {
<br /><br />//RootPanel.get().add(new HTML(&quot;RPC call Success:&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />);
<br /><br />}
<br /><br />});
<br /><br />//System.out.println(service.path(&quot;resources&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.path(&quot;dbOperation/insert/20/Twenty&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.accept(MediaType.TEXT_PLAIN).get(ClientResponse.class).toString());
<br /><br />}
<br /><br />if(ce.getButton().getText()!= null &amp;&amp; (!ce.getButton().getText().equals(&quot;&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />&amp;&amp;ce.getButton().getText().equals(&quot;Update&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />))
<br /><br />{
<br /><br />ourInstance.greetServer(&quot;update&quot;,new AsyncCallback() {
<br /><br />public void onFailure(Throwable caught) {
<br /><br />// Show the RPC error message to the user
<br /><br />//RootPanel.get().add(new HTML(&quot;RPC call failed. <img class="smiley" src="http://www.pan.net/smilies/sad.gif" alt=":)" />&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />);
<br /><br />}
<br /><br />public void onSuccess(String result) {
<br /><br />//RootPanel.get().add(new HTML(&quot;RPC call Success:&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />);
<br /><br />}
<br /><br />});
<br /><br />//System.out.println(service.path(&quot;resources&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.path(&quot;dbOperation/update/20/Twenty Changed&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.accept(MediaType.TEXT_HTML).get(ClientResponse.class).toString());
<br /><br />}
<br /><br />if(ce.getButton().getText()!= null &amp;&amp; (!ce.getButton().getText().equals(&quot;&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />&amp;&amp;ce.getButton().getText().equals(&quot;Delete&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />))
<br /><br />{
<br /><br />ourInstance.greetServer(&quot;delete&quot;,new AsyncCallback() {
<br /><br />public void onFailure(Throwable caught) {
<br /><br />// Show the RPC error message to the user
<br /><br />//RootPanel.get().add(new HTML(&quot;RPC call failed. <img class="smiley" src="http://www.pan.net/smilies/sad.gif" alt=":)" />&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />);
<br /><br />}
<br /><br />public void onSuccess(String result) {
<br /><br />//RootPanel.get().add(new HTML(&quot;RPC call Success:&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />);
<br /><br />}
<br /><br />});
<br /><br />//System.out.println(service.path(&quot;resources&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.path(&quot;dbOperation/delete/20/Twenty&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.accept(MediaType.TEXT_XML).get(ClientResponse.class).toString());
<br /><br />}
<br /><br />}
<br /><br />};
<br /><br />Button insert = new Button(&quot;Insert&quot;,l);
<br /><br />simple.addButton(insert);
<br /><br />Button update = new Button(&quot;Update&quot;,l);
<br /><br />simple.addButton(update);
<br /><br />Button delete = new Button(&quot;Delete&quot;,l);
<br /><br />simple.addButton(delete);
<br /><br />simple.setButtonAlign(HorizontalAlignment.CENTER);
<br /><br />FormButtonBinding binding = new FormButtonBinding(simple);
<br /><br />binding.addButton(insert);
<br /><br />binding.addButton(update);
<br /><br />binding.addButton(delete);
<br /><br />vp.add(simple);
<br /><br />add(vp);
<br /><br />//idText = id.getSelectedText();
<br /><br />//nameText = name.getSelectedText();
<br /><br />}
<br /><br />}
<br /><br />}
<br /><br />GreetingServiceImpl:
<br /><br />package testExtGWTJerseyWebServiceClient.server;
<br /><br />import testExtGWTJerseyWebServiceClient.client.GreetingService;
<br /><br />import testExtGWTJerseyWebServiceClient.shared.FieldVerifier;
<br /><br />import com.google.gwt.user.server.rpc.RemoteServiceServlet;
<br /><br />import java.net.URI;
<br /><br />import javax.ws.rs.core.MediaType;
<br /><br />import javax.ws.rs.core.UriBuilder;
<br /><br />import com.sun.jersey.api.client.Client;
<br /><br />import com.sun.jersey.api.client.ClientResponse;
<br /><br />import com.sun.jersey.api.client.WebResource;
<br /><br />import com.sun.jersey.api.client.config.ClientConfig;
<br /><br />import com.sun.jersey.api.client.config.DefaultClientConfig;
<br /><br />/**
<br /><br />* The server side implementation of the RPC service.
<br /><br />*/
<br /><br />@SuppressWarnings(&quot;serial&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />
<br /><br />public class GreetingServiceImpl extends RemoteServiceServlet implements
<br /><br />GreetingService {
<br /><br />public String greetServer(String input) throws IllegalArgumentException {
<br /><br />ClientConfig config = new DefaultClientConfig();
<br /><br />Client client = Client.create(config);
<br /><br />WebResource service = client.resource(getBaseURI());
<br /><br />if(input.equals(&quot;insert&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />)
<br /><br />{
<br /><br />System.out.println(service.path(&quot;resources&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.path(&quot;dbOperation/insert/20/Twenty&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.accept(MediaType.TEXT_PLAIN).get(ClientResponse.class).toString());
<br /><br />}
<br /><br />if(input.equals(&quot;update&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />)
<br /><br />{
<br /><br />System.out.println(service.path(&quot;resources&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.path(&quot;dbOperation/update/20/Twenty Changed&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.accept(MediaType.TEXT_HTML).get(ClientResponse.class).toString());
<br /><br />}
<br /><br />if(input.equals(&quot;delete&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />)
<br /><br />{
<br /><br />System.out.println(service.path(&quot;resources&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.path(&quot;dbOperation/delete/20/Twenty&quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.accept(MediaType.TEXT_XML).get(ClientResponse.class).toString());
<br /><br />}
<br /><br />return &quot;1&quot;;
<br /><br />}
<br /><br />private static URI getBaseURI() {
<br /><br />return UriBuilder.fromUri(&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Flocalhost%3A8080%2FJerseyDataBaseProject%2F%26quot"target="_blank" rel="nofollow">http://localhost:8080/JerseyDataBaseProject/&quot</a><img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.build();
<br /><br />}
<br /><br />}
<br /><br />Web.xml:
<br /><br />xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
<br />DOCTYPE web-app
<br />PUBLIC &quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;
<br />&quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fdtd%2Fweb-app_2_3.dtd%26quot%3B%26gt"target="_blank" rel="nofollow">http://java.sun.com/dtd/web-app_2_3.dtd&quot;&gt</a>;
<br />&lt;web-app&gt;
<br />&lt;servlet&gt;
<br />&lt;servlet-name&gt;greetServletservlet-name&gt;
<br />&lt;servlet-class&gt;testExtGWTJerseyWebServiceClient.server.GreetingServiceImplservlet-class&gt;
<br />servlet&gt;
<br />&lt;servlet-name&gt;Jersey Web Applicationservlet-name&gt;
<br />&lt;servlet-class&gt;com.sun.jersey.spi.container.servlet.ServletContainerservlet-class&gt;
<br />&lt;init-param&gt;
<br />&lt;param-name&gt;com.sun.jersey.api.core.packagesparam-name&gt;
<br />&lt;param-value&gt;com.dclonline.jerseytestparam-value&gt;
<br />init-param&gt;
<br />&lt;load-on-startup&gt;1load-on-startup&gt;
<br />&lt;servlet-mapping&gt;
<br />&lt;servlet-name&gt;greetServletservlet-name&gt;
<br />&lt;url-pattern&gt;/testextgwtjerseywebserviceclient/greeturl-pattern&gt;
<br />&lt;servlet-name&gt;Jersey Web Applicationservlet-name&gt;
<br />&lt;url-pattern&gt;/resources/*url-pattern&gt;
<br />servlet-mapping&gt;
<br />&lt;welcome-file-list&gt;
<br />&lt;welcome-file&gt;TestExtGWTJerseyWebServiceClient.htmlwelcome-file&gt;
<br />welcome-file-list&gt;
<br />&lt;servlet-mapping&gt;
<br />&lt;servlet-name&gt;greetServletservlet-name&gt;
<br />&lt;url-pattern&gt;/testextgwtjerseywebserviceclient/GreetingServiceurl-pattern&gt;
<br />servlet-mapping&gt;
<br />&lt;session-config&gt;
<br />&lt;session-timeout&gt;30session-timeout&gt;
<br />session-config&gt;
<br />web-app&gt;
<br /><br />TestExtGWTJerseyWebServiceClient.html:
<br /><br />doctype html&gt;
<br />&lt;html&gt;
<br />&lt;head&gt;
<br />&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;
<br />&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;resources/css/gxt-all.css&quot; /&gt;
<br />&lt;title&gt;Web Application Starter Projecttitle&gt;
<br />&lt;script type=&quot;text/javascript&quot; language=&quot;javascript&quot; src=&quot;testextgwtjerseywebserviceclient/testextgwtjerseywebserviceclient.nocache.js&quot;&gt;script&gt;
<br />head&gt;
<br />&lt;body&gt;
<br />&lt;iframe src=&quot;javascript:''&quot; id=&quot;__gwt_historyFrame&quot; tabIndex='-1' style=&quot;position:absolute;width:0;height:0;border:0&quot;&gt;iframe&gt;
<br />&lt;noscript&gt;
<br />&lt;div style=&quot;width: 22em; position: absolute; left: 50%; margin-left: -11em; color: red; background-color: white; border: 1px solid red; padding: 4px; font-family: sans-serif&quot;&gt;
<br />Your web browser must have JavaScript enabled
<br />in order for this application to display correctly.
<br />div&gt;
<br />noscript&gt;
<br />&lt;h1&gt;Test Ext-GWT Jersey REST Webservice Client Projecth1&gt;
<br />body&gt;
<br />html&gt;
]]>
		</document>
		<document id="1c45b09094638c10cd25e54c831725cf" url=""><![CDATA[Integration of GWT with Portal and My SQL as Database- GWT w<br/><br/> MyGWTPortalSQL:
<br /><br />package myGWTPortalSQL;
<br /><br />import java.io.IOException;
<br /><br />import java.io.PrintWriter;
<br /><br />import javax.portlet.ActionRequest;
<br /><br />import javax.portlet.ActionResponse;
<br /><br />import javax.portlet.GenericPortlet;
<br /><br />import javax.portlet.PortletException;
<br /><br />import javax.portlet.PortletMode;
<br /><br />import javax.portlet.PortletPreferences;
<br /><br />import javax.portlet.PortletSecurityException;
<br /><br />import javax.portlet.PortletURL;
<br /><br />import javax.portlet.RenderRequest;
<br /><br />import javax.portlet.RenderResponse;
<br /><br />import javax.portlet.WindowState;
<br /><br />import myGWTPortalSQL.server.GreetingServiceImpl;
<br /><br />/*
<br /><br />*Refer this site for reference <a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fxantorohara.blogspot.com%2F2007%2F07%2Fportlets-and-gwt.html"target="_blank" rel="nofollow">http://xantorohara.blogspot.com/2007/07/portlets-and-gwt.html</a>
<br /><br />*/
<br /><br />public class MyGWTPortalSQL extends GenericPortlet
<br /><br />{
<br /><br />private static final String SERVER_ERROR = &amp;quot;An error occurred while &amp;quot;
<br /><br />+ &amp;quot;attempting to contact the server. Please check your network &amp;quot;
<br /><br />+ &amp;quot;connection and try again.&amp;quot;;
<br /><br />//private final GreetingServiceAsync greetingService = GWT.create(GreetingService.class);
<br /><br />protected void doView(RenderRequest renderRequest, RenderResponse renderResponse) throws PortletException, PortletSecurityException, IOException
<br /><br />{
<br /><br />renderResponse.setContentType(&amp;quot;text/html&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />PrintWriter writer = renderResponse.getWriter();
<br /><br />//System.out.println(&amp;quot;value of renderRequest.getContextPath()&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;quot;+renderRequest.getContextPath());
<br /><br />writer.println(&amp;quot;&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />writer.println(&amp;quot;This is just to show the View:&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />writer.println(&amp;quot;
<br /><br />&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />writer.println(&amp;quot;
<br /><br />&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />writer.println(&amp;quot;
<br /><br />&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />writer.println(&amp;quot;
<br /><br />&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />writer.println(&amp;quot;
<br /><br />&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />writer.println(&amp;quot;
<br /><br />&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />writer.println(&amp;quot;
<br /><br />&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />writer.close();
<br /><br />}
<br /><br />protected void doHelp(RenderRequest renderRequest, RenderResponse renderResponse) throws PortletException, PortletSecurityException, IOException
<br /><br />{
<br /><br />renderResponse.setContentType(&amp;quot;text/html&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />PrintWriter writer = renderResponse.getWriter();
<br /><br />writer.write(&amp;quot;Help&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />writer.close();
<br /><br />}
<br /><br />protected void doEdit(RenderRequest renderRequest, RenderResponse renderResponse) throws PortletException, PortletSecurityException, IOException
<br /><br />{
<br /><br />//renderResponse.setContentType(&amp;quot;text/html&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />PrintWriter writer = renderResponse.getWriter();
<br /><br />writer.println(&amp;quot;&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />/*
<br /><br />PortletURL actionURL = renderResponse.createActionURL();
<br /><br />renderResponse.setContentType(renderRequest.getResponseContentType());
<br /><br />*/
<br /><br />writer.println(&amp;quot;This is in Edit Function of MyGWTPortalSQL:&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />writer.println(&amp;quot;
<br /><br />&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />writer.println(&amp;quot;
<br /><br />&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />writer.println(&amp;quot;
<br /><br />&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />writer.println(&amp;quot;
<br /><br />&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />writer.println(&amp;quot;
<br /><br />&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />writer.println(&amp;quot;
<br /><br />&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />writer.println(&amp;quot;
<br /><br />&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />writer.println(&amp;quot;Edit&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />writer.close();
<br /><br />}
<br /><br />//Added to have the EvenListener in Portal
<br /><br />/*
<br /><br />@Override
<br /><br />public void processAction(ActionRequest request, ActionResponse response)
<br /><br />throws PortletException, PortletSecurityException, IOException {
<br /><br />// TODO Auto-generated method stub
<br /><br />//super.processAction(request, response);
<br /><br />String id = request.getParameter(&amp;quot;ID&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />String name = request.getParameter(&amp;quot;NAME&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />//String buttonPressed;
<br /><br />if(request.getParameter(&amp;quot;Insert&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" /> !=null &amp;amp;&amp;amp; request.getParameter(&amp;quot;Insert&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.equals(&amp;quot;Insert1&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" /> &amp;amp;&amp;amp; !request.getParameter(&amp;quot;Insert&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.equals(&amp;quot;&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />)
<br /><br />{
<br /><br />InsertbuttonPress(request,response);
<br /><br />}
<br /><br />if(request.getParameter(&amp;quot;Update&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" /> !=null &amp;amp;&amp;amp; request.getParameter(&amp;quot;Update&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.equals(&amp;quot;Update1&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />&amp;amp;&amp;amp; !request.getParameter(&amp;quot;Update&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.equals(&amp;quot;&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />)
<br /><br />{
<br /><br />UpdatebuttonPress(request,response);
<br /><br />}
<br /><br />if(request.getParameter(&amp;quot;Delete&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" /> !=null &amp;amp;&amp;amp; request.getParameter(&amp;quot;Delete&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.equals(&amp;quot;Delete1&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />&amp;amp;&amp;amp; !request.getParameter(&amp;quot;Delete&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.equals(&amp;quot;&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />)
<br /><br />{
<br /><br />DeletebuttonPress(request,response);
<br /><br />}
<br /><br />//String InsertbuttonPress = request.getParameter(&amp;quot;Insert&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />//String DeletebuttonPress = request.getParameter(&amp;quot;Delete&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />try {
<br /><br />PortletPreferences pref = request.getPreferences();
<br /><br />pref.setValue(&amp;quot;id&amp;quot;, id);
<br /><br />pref.setValue(&amp;quot;name&amp;quot;, name);
<br /><br />pref.store();
<br /><br />} catch (Exception e) {
<br /><br />throw new PortletException(e.getMessage());
<br /><br />}
<br /><br />response.setPortletMode(PortletMode.VIEW);
<br /><br />response.setWindowState(WindowState.NORMAL);
<br /><br />}
<br /><br />*/
<br /><br />/*
<br /><br />public void InsertbuttonPress(ActionRequest request, ActionResponse response)
<br /><br />{
<br /><br />String idText = request.getParameter(&amp;quot;ID&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />String nameText = request.getParameter(&amp;quot;NAME&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />String methodname = &amp;quot;Insert&amp;quot;;
<br /><br />GreetingServiceImpl objGreetingServiceImpl = new GreetingServiceImpl();
<br /><br />objGreetingServiceImpl.greetServer(idText,nameText,methodname);
<br /><br />}
<br /><br />public void UpdatebuttonPress(ActionRequest request, ActionResponse response)
<br /><br />{
<br /><br />String idText = request.getParameter(&amp;quot;ID&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />String nameText = request.getParameter(&amp;quot;NAME&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />String methodname = &amp;quot;Update&amp;quot;;
<br /><br />GreetingServiceImpl objGreetingServiceImpl = new GreetingServiceImpl();
<br /><br />objGreetingServiceImpl.greetServer(idText,nameText,methodname);
<br /><br />}
<br /><br />public void DeletebuttonPress(ActionRequest request, ActionResponse response)
<br /><br />{
<br /><br />String idText = request.getParameter(&amp;quot;ID&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />String nameText = request.getParameter(&amp;quot;NAME&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />String methodname = &amp;quot;Delete&amp;quot;;
<br /><br />GreetingServiceImpl objGreetingServiceImpl = new GreetingServiceImpl();
<br /><br />objGreetingServiceImpl.greetServer(idText,nameText,methodname);
<br /><br />}
<br /><br />*/
<br /><br />}
<br /><br />MyGWTClientPortalSQL.gwt.xml:
<br /><br />xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
<br />&amp;lt;module rename-to='mygwtportalsql'&amp;gt;
<br />&amp;lt;inherits name='com.google.gwt.user.User'/&amp;gt;
<br />&amp;lt;inherits name='com.google.gwt.user.theme.standard.Standard'/&amp;gt;
<br />&amp;lt;entry-point class='myGWTPortalSQL.client.MyGWTClientPortalSQL'/&amp;gt;
<br />&amp;lt;source path='client'/&amp;gt;
<br />&amp;lt;source path='shared'/&amp;gt;
<br />module&amp;gt;
<br /><br />GreetingService:
<br /><br />package myGWTPortalSQL.client;
<br /><br />import com.google.gwt.core.client.GWT;
<br /><br />import com.google.gwt.user.client.rpc.RemoteService;
<br /><br />import com.google.gwt.user.client.rpc.RemoteServiceRelativePath;
<br /><br />import com.google.gwt.user.client.rpc.ServiceDefTarget;
<br /><br />/**
<br /><br />* The client side stub for the RPC service.
<br /><br />*/
<br /><br />@RemoteServiceRelativePath(&amp;quot;MyGWTPortalSQLService&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />
<br /><br />public interface GreetingService extends RemoteService {
<br /><br />//String greetServer(String name) throws IllegalArgumentException;
<br /><br />String greetServer(String id,String name,String methodName) throws IllegalArgumentException;
<br /><br />/*
<br /><br />Time getTime();
<br /><br />public static class App {
<br /><br />private static myGWTPortalSQL.client.GreetingServiceAsync ourInstance = null;
<br /><br />public static synchronized myGWTPortalSQL.client.GreetingServiceAsync getInstance() {
<br /><br />if (ourInstance == null) {
<br /><br />ourInstance = (myGWTPortalSQL.client.GreetingServiceAsync) GWT.create(GreetingService.class);
<br /><br />((ServiceDefTarget) ourInstance).setServiceEntryPoint(GWT.getModuleBaseURL() + &amp;quot;GreetingService&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />}
<br /><br />return ourInstance;
<br /><br />}
<br /><br />}
<br /><br />*/
<br /><br />}
<br /><br />GreetingServiceAsync:
<br /><br />package myGWTPortalSQL.client;
<br />import com.google.gwt.user.client.rpc.AsyncCallback;
<br />/**
<br />* The async counterpart of GreetingService.
<br />*/
<br />public interface GreetingServiceAsync {
<br />//void greetServer(String input, AsyncCallback callback) throws IllegalArgumentException;
<br />public void greetServer(String input1,String input2,String methodName, AsyncCallback callback)
<br />throws IllegalArgumentException;
<br />//void getTime(AsyncCallback callback);
<br />}
<br /><br />MyGWTClientPortalSQL:
<br /><br />package myGWTPortalSQL.client;
<br /><br />import com.google.gwt.core.client.EntryPoint;
<br /><br />import com.google.gwt.core.client.GWT;
<br /><br />import com.google.gwt.event.dom.client.ClickEvent;
<br /><br />import com.google.gwt.event.dom.client.ClickHandler;
<br /><br />import com.google.gwt.user.client.Timer;
<br /><br />import com.google.gwt.user.client.Window;
<br /><br />import com.google.gwt.user.client.rpc.AsyncCallback;
<br /><br />import com.google.gwt.user.client.ui.Button;
<br /><br />import com.google.gwt.user.client.ui.HTML;
<br /><br />import com.google.gwt.user.client.ui.Label;
<br /><br />import com.google.gwt.user.client.ui.RootPanel;
<br /><br />import com.google.gwt.user.client.ui.TextBox;
<br /><br />/**
<br /><br />* Entry point classes define onModuleLoad().
<br /><br />*/
<br /><br />public class MyGWTClientPortalSQL implements EntryPoint {
<br /><br />private static final String SERVER_ERROR = &amp;quot;An error occurred while &amp;quot;
<br /><br />+ &amp;quot;attempting to contact the server. Please check your network &amp;quot;
<br /><br />+ &amp;quot;connection and try again.&amp;quot;;
<br /><br />private final GreetingServiceAsync greetingService = GWT
<br /><br />.create(GreetingService.class);
<br /><br />/*
<br /><br />public void onModuleLoad() {greetingService.greetServer(&amp;quot;Called&amp;quot;,
<br /><br />new AsyncCallback() {
<br /><br />public void onFailure(Throwable caught) {
<br /><br />// Show the RPC error message to the user
<br /><br />RootPanel.get().add(new HTML(&amp;quot;RPC call failed. <img class="smiley" src="http://www.pan.net/smilies/sad.gif" alt=":)" />&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />);
<br /><br />}
<br /><br />public void onSuccess(String result) {
<br /><br />System.out.println(&amp;quot;Vaule of result is:&amp;quot;+result);
<br /><br />RootPanel.get().add(new HTML(&amp;quot;RPC call Success:&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />);
<br /><br />}
<br /><br />});
<br /><br />}
<br /><br />private Timer timer;
<br /><br />private Label label = new Label(&amp;quot;Wait...&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />private class CallBack implements AsyncCallback
<br /><br />{
<br /><br />public void onFailure(Throwable caught)
<br /><br />{
<br /><br />timer.cancel();
<br /><br />Window.alert(caught.getMessage());
<br /><br />}
<br /><br />public void onSuccess(Object result)
<br /><br />{
<br /><br />label.setText(((Time) result).getTime());
<br /><br />}
<br /><br />}
<br /><br />private CallBack callBack = new CallBack();
<br /><br />*/
<br /><br />public void onModuleLoad()
<br /><br />{
<br /><br />/*
<br /><br />RootPanel.get(&amp;quot;uid&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.add(label);
<br /><br />timer = new Timer()
<br /><br />{
<br /><br />public void run()
<br /><br />{
<br /><br />GreetingService.App.getInstance().getTime(callBack);
<br /><br />}
<br /><br />};
<br /><br />timer.scheduleRepeating(1000);
<br /><br />*/
<br /><br />final Button insertButton = new Button(&amp;quot;Insert&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />final Button updateButton = new Button(&amp;quot;Update&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />final Button deleteButton = new Button(&amp;quot;Delete&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />final Label idLabel = new Label();
<br /><br />idLabel.setText(&amp;quot;ID:&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />RootPanel.get(&amp;quot;idLabelContainer&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.add(idLabel);
<br /><br />final TextBox idField = new TextBox();
<br /><br />RootPanel.get(&amp;quot;idFieldContainer&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.add(idField);
<br /><br />final Label nameLabel = new Label();
<br /><br />nameLabel.setText(&amp;quot;NAME:&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />RootPanel.get(&amp;quot;nameLabelContainer&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.add(nameLabel);
<br /><br />final TextBox nameField = new TextBox();
<br /><br />RootPanel.get(&amp;quot;nameFieldContainer&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.add(nameField);
<br /><br />insertButton.addStyleName(&amp;quot;Insert&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />updateButton.addStyleName(&amp;quot;Update&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />deleteButton.addStyleName(&amp;quot;Delete&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />final Label errorLabel = new Label();
<br /><br />RootPanel.get(&amp;quot;insertButtonContainer&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.add(insertButton);
<br /><br />RootPanel.get(&amp;quot;updateButtonContainer&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.add(updateButton);
<br /><br />RootPanel.get(&amp;quot;deleteButtonContainer&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.add(deleteButton);
<br /><br />//RootPanel.get(&amp;quot;errorLabelContainer&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.add(errorLabel);
<br /><br />// Focus the cursor on the name field when the app loads
<br /><br />idField.setFocus(true);
<br /><br />idField.selectAll();
<br /><br />// Create a handler for the sendButton and nameField
<br /><br />class MyHandler implements ClickHandler {
<br /><br />/**
<br /><br />* Fired when the user clicks on the sendButton.
<br /><br />*/
<br /><br />public void onClick(ClickEvent event) {
<br /><br />if(event.getSource().equals(insertButton))
<br /><br />{
<br /><br />insertToMYSQL();
<br /><br />}
<br /><br />else if(event.getSource().equals(updateButton))
<br /><br />{
<br /><br />updateToMYSQL();
<br /><br />}
<br /><br />else if (event.getSource().equals(deleteButton))
<br /><br />{
<br /><br />deleteToMYSQL();
<br /><br />}
<br /><br />}
<br /><br />/**
<br /><br />* Send the name from the nameField to the server and wait for a response.
<br /><br />*/
<br /><br />private void insertToMYSQL() {
<br /><br />String idText = idField.getText();
<br /><br />String nameText = nameField.getText();
<br /><br />String methodname = &amp;quot;Insert&amp;quot;;
<br /><br />greetingService.greetServer(idText,nameText,methodname,
<br /><br />new AsyncCallback() {
<br /><br />public void onFailure(Throwable caught) {
<br /><br />// Show the RPC error message to the user
<br /><br />RootPanel.get().add(new HTML(&amp;quot;RPC call failed. <img class="smiley" src="http://www.pan.net/smilies/sad.gif" alt=":)" />&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />);
<br /><br />}
<br /><br />public void onSuccess(String result) {
<br /><br />RootPanel.get().add(new HTML(&amp;quot;RPC call Success:&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />);
<br /><br />}
<br /><br />});
<br /><br />}
<br /><br />private void updateToMYSQL() {
<br /><br />String idText = idField.getText();
<br /><br />String nameText = nameField.getText();
<br /><br />String methodname = &amp;quot;Update&amp;quot;;
<br /><br />greetingService.greetServer(idText,nameText,methodname,
<br /><br />new AsyncCallback() {
<br /><br />public void onFailure(Throwable caught) {
<br /><br />// Show the RPC error message to the user
<br /><br />RootPanel.get().add(new HTML(&amp;quot;RPC call failed. <img class="smiley" src="http://www.pan.net/smilies/sad.gif" alt=":)" />&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />);
<br /><br />}
<br /><br />public void onSuccess(String result) {
<br /><br />RootPanel.get().add(new HTML(&amp;quot;RPC call Success:&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />);
<br /><br />}
<br /><br />});
<br /><br />}
<br /><br />private void deleteToMYSQL() {
<br /><br />String idText = idField.getText();
<br /><br />String nameText = nameField.getText();
<br /><br />String methodname = &amp;quot;Delete&amp;quot;;
<br /><br />greetingService.greetServer(idText,nameText,methodname,
<br /><br />new AsyncCallback() {
<br /><br />public void onFailure(Throwable caught) {
<br /><br />// Show the RPC error message to the user
<br /><br />RootPanel.get().add(new HTML(&amp;quot;RPC call failed. <img class="smiley" src="http://www.pan.net/smilies/sad.gif" alt=":)" />&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />);
<br /><br />}
<br /><br />public void onSuccess(String result) {
<br /><br />RootPanel.get().add(new HTML(&amp;quot;RPC call Success:&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />);
<br /><br />}
<br /><br />});
<br /><br />}
<br /><br />}
<br /><br />// Add a handler to send the name to the server
<br /><br />MyHandler handler = new MyHandler();
<br /><br />insertButton.addClickHandler(handler);
<br /><br />updateButton.addClickHandler(handler);
<br /><br />deleteButton.addClickHandler(handler);
<br /><br />//nameField.addKeyUpHandler(handler);
<br /><br />}
<br /><br />}
<br /><br />Time:
<br /><br />package myGWTPortalSQL.client;
<br />import com.google.gwt.user.client.rpc.IsSerializable;
<br />public class Time implements IsSerializable
<br />{
<br />private String time;
<br />public String getTime() { return time; }
<br />public Time(String message) { this.time = message; }
<br />public Time() { }
<br />}
<br /><br />GreetingServiceImpl:
<br /><br />package myGWTPortalSQL.server;
<br /><br />import java.sql.Connection;
<br /><br />import java.sql.Date;
<br /><br />import java.sql.DriverManager;
<br /><br />import java.sql.Statement;
<br /><br />import java.text.DateFormat;
<br /><br />import myGWTPortalSQL.client.Time;
<br /><br />import myGWTPortalSQL.client.GreetingService;
<br /><br />import com.google.gwt.user.server.rpc.RemoteServiceServlet;
<br /><br />/**
<br /><br />* The server side implementation of the RPC service.
<br /><br />*/
<br /><br />@SuppressWarnings(&amp;quot;serial&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />
<br /><br />public class GreetingServiceImpl extends RemoteServiceServlet implements GreetingService {
<br /><br />String dbUrl = &amp;quot;jdbc:mysql://localhost/siddhutest_db&amp;quot;;
<br /><br />String dbClass = &amp;quot;com.mysql.jdbc.Driver&amp;quot;;
<br /><br />/*
<br /><br />public String greetServer(String input) throws IllegalArgumentException {
<br /><br />// Verify that the input is valid.
<br /><br />if (!FieldVerifier.isValidName(input)) {
<br /><br />// If the input is not valid, throw an IllegalArgumentException back to
<br /><br />// the client.
<br /><br />throw new IllegalArgumentException(
<br /><br />&amp;quot;Name must be at least 4 characters long&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />}
<br /><br />String serverInfo = getServletContext().getServerInfo();
<br /><br />String userAgent = getThreadLocalRequest().getHeader(&amp;quot;User-Agent&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />return &amp;quot;Hello, &amp;quot; + input + &amp;quot;! 
<br /><br />I am running &amp;quot; + serverInfo
<br /><br />+ &amp;quot;. 
<br /><br />It looks like you are using: 
<br />&amp;quot; + userAgent;
<br /><br />}
<br /><br />public Time getTime()
<br /><br />{
<br /><br />String out = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.FULL).format(new Date());
<br /><br />return new Time(out);
<br /><br />}
<br /><br />*/
<br /><br />public String greetServer(String id,String name,String methodName) throws IllegalArgumentException {
<br /><br />if(methodName.equals(&amp;quot;Insert&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />)
<br /><br />{
<br /><br />try {
<br /><br />Class.forName(dbClass).newInstance();
<br /><br />Connection con = DriverManager.getConnection(dbUrl,&amp;quot;root&amp;quot;,&amp;quot;&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />Statement stmt = con.createStatement();
<br /><br />String query = &amp;quot;insert into test_table (id, name) values (&amp;quot;+id+&amp;quot;,'&amp;quot;+name+&amp;quot;')&amp;quot;;
<br /><br />int i = stmt.executeUpdate(query);
<br /><br />con.close();
<br /><br />//return &amp;quot;success&amp;quot;;
<br /><br />} //end try
<br /><br />catch(Exception e) {
<br /><br />e.printStackTrace();
<br /><br />}
<br /><br />}
<br /><br />else if(methodName.equals(&amp;quot;Delete&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />)
<br /><br />{
<br /><br />try {
<br /><br />Class.forName(dbClass).newInstance();
<br /><br />Connection con = DriverManager.getConnection(dbUrl,&amp;quot;root&amp;quot;,&amp;quot;&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />Statement stmt = con.createStatement();
<br /><br />String query = &amp;quot;delete from test_table where id =&amp;quot;+id;
<br /><br />int i = stmt.executeUpdate(query);
<br /><br />con.close();
<br /><br />//return &amp;quot;success&amp;quot;;
<br /><br />} //end try
<br /><br />catch(Exception e) {
<br /><br />e.printStackTrace();
<br /><br />}
<br /><br />}else if (methodName.equals(&amp;quot;Update&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />)
<br /><br />{
<br /><br />try {
<br /><br />Class.forName(dbClass).newInstance();
<br /><br />Connection con = DriverManager.getConnection(dbUrl,&amp;quot;root&amp;quot;,&amp;quot;&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />Statement stmt = con.createStatement();
<br /><br />String query = &amp;quot;update test_table set name = '&amp;quot;+name+&amp;quot;' where id =&amp;quot;+id;
<br /><br />int i = stmt.executeUpdate(query);
<br /><br />con.close();
<br /><br />//return &amp;quot;success&amp;quot;;
<br /><br />} //end try
<br /><br />catch(Exception e) {
<br /><br />e.printStackTrace();
<br /><br />}
<br /><br />}
<br /><br />return &amp;quot;success&amp;quot;;
<br /><br />}
<br /><br />}
<br /><br />default-object.xml:
<br /><br />xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
<br />DOCTYPE deployments PUBLIC
<br />&amp;quot;-//JBoss Portal//DTD Portal Object 2.6//EN&amp;quot;
<br />&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.jboss.org%2Fportal%2Fdtd%2Fportal-object_2_6.dtd%26amp%3Bquot%3B%26amp%3Bgt"target="_blank" rel="nofollow">http://www.jboss.org/portal/dtd/portal-object_2_6.dtd&amp;quot;&amp;gt</a>;
<br />&amp;lt;deployments&amp;gt;
<br />&amp;lt;deployment&amp;gt;
<br />&amp;lt;parent-ref&amp;gt;default.defaultparent-ref&amp;gt;
<br />&amp;lt;if-exists&amp;gt;overwriteif-exists&amp;gt;
<br />&amp;lt;window&amp;gt;
<br />&amp;lt;window-name&amp;gt;
<br />MyGWTPortalSQLWindow
<br />window-name&amp;gt;
<br />&amp;lt;instance-ref&amp;gt;
<br />MyGWTPortalSQLInstance
<br />instance-ref&amp;gt;
<br />&amp;lt;region&amp;gt;centerregion&amp;gt;
<br />&amp;lt;height&amp;gt;1height&amp;gt;
<br />&amp;lt;initial-window-state&amp;gt;maximizedinitial-window-state&amp;gt;
<br />window&amp;gt;
<br />deployment&amp;gt;
<br />deployments&amp;gt;
<br /><br />MyGWTPortalSQL-object.xml:
<br /><br />xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
<br />&amp;lt;deployments&amp;gt;
<br />&amp;lt;deployment&amp;gt;
<br />&amp;lt;if-exists&amp;gt;overwriteif-exists&amp;gt;
<br />&amp;lt;parent-ref&amp;gt;defaultparent-ref&amp;gt;
<br />&amp;lt;page&amp;gt;
<br />&amp;lt;page-name&amp;gt;XLampage-name&amp;gt;
<br />&amp;lt;window&amp;gt;
<br />&amp;lt;window-name&amp;gt;MyGWTPortalSQLWindowwindow-name&amp;gt;
<br />&amp;lt;instance-ref&amp;gt;MyGWTPortalSQLInstanceinstance-ref&amp;gt;
<br />&amp;lt;region&amp;gt;leftregion&amp;gt;
<br />&amp;lt;height&amp;gt;0height&amp;gt;
<br />window&amp;gt;
<br />page&amp;gt;
<br />deployment&amp;gt;
<br />deployments&amp;gt;
<br /><br />portlet.xml:
<br /><br />xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
<br />&amp;lt;portlet-app xmlns=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fportlet%2Fportlet-app_1_0.xsd%26amp%3Bquot"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/portlet/portlet-app_1_0.xsd&amp;quot</a>;
<br />xmlns:xsi=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema-instance%26amp%3Bquot"target="_blank" rel="nofollow">http://www.w3.org/2001/XMLSchema-instance&amp;quot</a>;
<br />xsi:schemaLocation=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fportlet%2Fportlet-app_1_0.xsd"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/portlet/portlet-app_1_0.xsd</a>
<br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fportlet%2Fportlet-app_1_0.xsd%26amp%3Bquot"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/portlet/portlet-app_1_0.xsd&amp;quot</a>;
<br />version=&amp;quot;1.0&amp;quot;&amp;gt;
<br />&amp;lt;portlet&amp;gt;
<br />&amp;lt;portlet-name&amp;gt;MyGWTPortalSQLportlet-name&amp;gt;
<br />&amp;lt;portlet-class&amp;gt;myGWTPortalSQL.MyGWTPortalSQLportlet-class&amp;gt;
<br />&amp;lt;supports&amp;gt;
<br />&amp;lt;mime-type&amp;gt;text/htmlmime-type&amp;gt;
<br />&amp;lt;portlet-mode&amp;gt;VIEWportlet-mode&amp;gt;
<br />&amp;lt;portlet-mode&amp;gt;EDITportlet-mode&amp;gt;
<br />&amp;lt;portlet-mode&amp;gt;HELPportlet-mode&amp;gt;
<br />supports&amp;gt;
<br />&amp;lt;portlet-info&amp;gt;
<br />&amp;lt;title&amp;gt;MyGWTPortalSQL Portaltitle&amp;gt;
<br />portlet-info&amp;gt;
<br />portlet&amp;gt;
<br />portlet-app&amp;gt;
<br /><br />portlet-instances.xml:
<br /><br />xml version=&amp;quot;1.0&amp;quot; standalone=&amp;quot;yes&amp;quot;?&amp;gt;
<br />&amp;lt;deployments&amp;gt;
<br />&amp;lt;deployment&amp;gt;
<br />&amp;lt;instance&amp;gt;
<br />&amp;lt;instance-id&amp;gt;MyGWTPortalSQLInstanceinstance-id&amp;gt;
<br />&amp;lt;portlet-ref&amp;gt;MyGWTPortalSQLportlet-ref&amp;gt;
<br />instance&amp;gt;
<br />deployment&amp;gt;
<br />deployments&amp;gt;
<br /><br />web.xml:
<br /><br />xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
<br />DOCTYPE web-app
<br />PUBLIC &amp;quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&amp;quot;
<br />&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fdtd%2Fweb-app_2_3.dtd%26amp%3Bquot%3B%26amp%3Bgt"target="_blank" rel="nofollow">http://java.sun.com/dtd/web-app_2_3.dtd&amp;quot;&amp;gt</a>;
<br />&amp;lt;web-app&amp;gt;
<br />&amp;lt;servlet&amp;gt;
<br />&amp;lt;servlet-name&amp;gt;MyGWTPortalSQLServiceservlet-name&amp;gt;
<br />&amp;lt;servlet-class&amp;gt;
<br />myGWTPortalSQL.server.GreetingServiceImpl
<br />servlet-class&amp;gt;
<br />servlet&amp;gt;
<br />&amp;lt;servlet-mapping&amp;gt;
<br />&amp;lt;servlet-name&amp;gt;MyGWTPortalSQLServiceservlet-name&amp;gt;
<br />&amp;lt;url-pattern&amp;gt;/MyGWTPortalSQLServiceurl-pattern&amp;gt;
<br />servlet-mapping&amp;gt;
<br />&amp;lt;servlet-mapping&amp;gt;
<br />&amp;lt;servlet-name&amp;gt;MyGWTPortalSQLServiceservlet-name&amp;gt;
<br />&amp;lt;url-pattern&amp;gt;/mygwtportalsql/MyGWTPortalSQLServiceurl-pattern&amp;gt;
<br />servlet-mapping&amp;gt;
<br />web-app&amp;gt;
<br /><br />MyGWTPortalSQL.html:
<br /><br />&amp;lt;html&amp;gt;
<br />&amp;lt;head&amp;gt;
<br />&amp;lt;title&amp;gt;MyGWTPortaltitle&amp;gt;
<br />head&amp;gt;
<br />&amp;lt;body&amp;gt;
<br />&amp;lt;script type=&amp;quot;text/javascript&amp;quot; language=&amp;quot;javascript&amp;quot; src=&amp;quot;mygwtportalsql/mygwtportalsql.nocache.js&amp;quot;&amp;gt;script&amp;gt;
<br />&amp;lt;div id='idLabelContainer'&amp;gt;div&amp;gt;
<br />&amp;lt;div id='idFieldContainer'&amp;gt;div&amp;gt;
<br />&amp;lt;div id='nameLabelContainer'&amp;gt;div&amp;gt;
<br />&amp;lt;div id='nameFieldContainer'&amp;gt;div&amp;gt;
<br />&amp;lt;div id='insertButtonContainer'&amp;gt;div&amp;gt;
<br />&amp;lt;div id='updateButtonContainer'&amp;gt;div&amp;gt;
<br />&amp;lt;div id='deleteButtonContainer'&amp;gt;div&amp;gt;
<br />body&amp;gt;
<br />html&amp;gt;
]]>
		</document>
		<document id="7c7af68b6215836652760b87a75b28d8" url=""><![CDATA[Integration of Portal with GWT.<br/><br/> MyGWTPortal : This example give you the simple way of integrating GWT with Portal Technology.
<br /><br />Refer this site for reference <a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fxantorohara.blogspot.com%2F2007%2F07%2Fportlets-and-gwt.html"target="_blank" rel="nofollow">http://xantorohara.blogspot.com/2007/07/portlets-and-gwt.html</a> for more info.
<br /><br />MyGWTPortal:
<br /><br />package myGWTPortal;
<br /><br />import javax.portlet.GenericPortlet;
<br /><br />import javax.portlet.PortletException;
<br /><br />import javax.portlet.PortletSecurityException;
<br /><br />import javax.portlet.RenderRequest;
<br /><br />import javax.portlet.RenderResponse;
<br /><br />import java.io.IOException;
<br /><br />import java.io.PrintWriter;
<br /><br />/*
<br /><br />*Refer this site for reference <a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fxantorohara.blogspot.com%2F2007%2F07%2Fportlets-and-gwt.html"target="_blank" rel="nofollow">http://xantorohara.blogspot.com/2007/07/portlets-and-gwt.html</a>
<br /><br />*/
<br /><br />public class MyGWTPortal extends GenericPortlet
<br /><br />{
<br /><br />protected void doView(RenderRequest renderRequest, RenderResponse renderResponse) throws PortletException, PortletSecurityException, IOException
<br /><br />{
<br /><br />renderResponse.setContentType(&amp;quot;text/html&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />PrintWriter writer = renderResponse.getWriter();
<br /><br />System.out.println(&amp;quot;value of renderRequest.getContextPath()&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;quot;+renderRequest.getContextPath());
<br /><br />writer.println(&amp;quot;&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />writer.println(&amp;quot;GWT time:&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />writer.println(&amp;quot;
<br /><br />&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br />writer.close();
<br /><br />}
<br /><br />protected void doHelp(RenderRequest renderRequest, RenderResponse renderResponse) throws PortletException, PortletSecurityException, IOException
<br /><br />{
<br /><br />renderResponse.setContentType(&amp;quot;text/html&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />PrintWriter writer = renderResponse.getWriter();
<br /><br />writer.write(&amp;quot;Help&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />writer.close();
<br /><br />}
<br /><br />protected void doEdit(RenderRequest renderRequest, RenderResponse renderResponse) throws PortletException, PortletSecurityException, IOException
<br /><br />{
<br /><br />renderResponse.setContentType(&amp;quot;text/html&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />PrintWriter writer = renderResponse.getWriter();
<br /><br />writer.println(&amp;quot;Edit&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />writer.close();
<br /><br />}
<br /><br />}
<br /><br />MyGWTPortal.gwt.xml:
<br /><br />xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
<br />&amp;lt;module rename-to='mygwtportal'&amp;gt;
<br />&amp;lt;inherits name='com.google.gwt.user.User' /&amp;gt;
<br />&amp;lt;inherits name='com.google.gwt.user.theme.standard.Standard' /&amp;gt;
<br />&amp;lt;entry-point class='myGWTPortal.client.MyGWTPortalClient' /&amp;gt;
<br />&amp;lt;servlet path=&amp;quot;/MyGWTPortalService&amp;quot; class=&amp;quot;myGWTPortal.server.GreetingServiceImpl&amp;quot; /&amp;gt;
<br />&amp;lt;source path='client' /&amp;gt;
<br />&amp;lt;source path='shared' /&amp;gt;
<br />module&amp;gt;
<br /><br />GreetingService:
<br /><br />package myGWTPortal.client;
<br /><br />import com.google.gwt.core.client.GWT;
<br /><br />import com.google.gwt.user.client.rpc.RemoteService;
<br /><br />import com.google.gwt.user.client.rpc.ServiceDefTarget;
<br /><br />import myGWTPortal.client.Time;
<br /><br />/**
<br /><br />* The client side stub for the RPC service.
<br /><br />*/
<br /><br />//@RemoteServiceRelativePath(&amp;quot;MyGWTPortalService&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />
<br /><br />public interface GreetingService extends RemoteService {
<br /><br />//String greetServer(String name) throws IllegalArgumentException;
<br /><br />Time getTime();
<br /><br />public static class App {
<br /><br />private static myGWTPortal.client.GreetingServiceAsync ourInstance = null;
<br /><br />public static synchronized myGWTPortal.client.GreetingServiceAsync getInstance() {
<br /><br />if (ourInstance == null) {
<br /><br />ourInstance = (myGWTPortal.client.GreetingServiceAsync) GWT.create(GreetingService.class);
<br /><br />((ServiceDefTarget) ourInstance).setServiceEntryPoint(GWT.getModuleBaseURL() + &amp;quot;GreetingService&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />}
<br /><br />return ourInstance;
<br /><br />}
<br /><br />}
<br /><br />}
<br /><br />GreetingServiceAsync:
<br /><br />package myGWTPortal.client;
<br />import com.google.gwt.user.client.rpc.AsyncCallback;
<br />/**
<br />* The async counterpart of GreetingService.
<br />*/
<br />public interface GreetingServiceAsync {
<br />//void greetServer(String input, AsyncCallback callback)throws IllegalArgumentException;
<br />void getTime(AsyncCallback callback);
<br />}
<br /><br />MyGWTPortalClient:
<br /><br />package myGWTPortal.client;
<br /><br />import com.google.gwt.core.client.EntryPoint;
<br /><br />import com.google.gwt.user.client.Timer;
<br /><br />import com.google.gwt.user.client.Window;
<br /><br />import com.google.gwt.user.client.rpc.AsyncCallback;
<br /><br />import com.google.gwt.user.client.ui.Label;
<br /><br />import com.google.gwt.user.client.ui.RootPanel;
<br /><br />/**
<br /><br />* Entry point classes define onModuleLoad().
<br /><br />*/
<br /><br />public class MyGWTPortalClient implements EntryPoint {
<br /><br />/*
<br /><br />private static final String SERVER_ERROR = &amp;quot;An error occurred while &amp;quot;
<br /><br />+ &amp;quot;attempting to contact the server. Please check your network &amp;quot;
<br /><br />+ &amp;quot;connection and try again.&amp;quot;;
<br /><br />private final GreetingServiceAsync greetingService = GWT
<br /><br />.create(GreetingService.class);
<br /><br />public void onModuleLoad() {
<br /><br />greetingService.greetServer(&amp;quot;Called&amp;quot;,
<br /><br />new AsyncCallback() {
<br /><br />public void onFailure(Throwable caught) {
<br /><br />// Show the RPC error message to the user
<br /><br />RootPanel.get().add(new HTML(&amp;quot;RPC call failed. <img class="smiley" src="http://www.pan.net/smilies/sad.gif" alt=":)" />&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />);
<br /><br />}
<br /><br />public void onSuccess(String result) {
<br /><br />System.out.println(&amp;quot;Vaule of result is:&amp;quot;+result);
<br /><br />RootPanel.get().add(new HTML(&amp;quot;RPC call Success:&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />);
<br /><br />}
<br /><br />});
<br /><br />}
<br /><br />*/
<br /><br />private Timer timer;
<br /><br />private Label label = new Label(&amp;quot;Wait...&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />private class CallBack implements AsyncCallback
<br /><br />{
<br /><br />public void onFailure(Throwable caught)
<br /><br />{
<br /><br />timer.cancel();
<br /><br />Window.alert(caught.getMessage());
<br /><br />}
<br /><br />public void onSuccess(Object result)
<br /><br />{
<br /><br />label.setText(((Time) result).getTime());
<br /><br />}
<br /><br />}
<br /><br />private CallBack callBack = new CallBack();
<br /><br />public void onModuleLoad()
<br /><br />{
<br /><br />RootPanel.get(&amp;quot;uid&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />.add(label);
<br /><br />timer = new Timer()
<br /><br />{
<br /><br />public void run()
<br /><br />{
<br /><br />GreetingService.App.getInstance().getTime(callBack);
<br /><br />}
<br /><br />};
<br /><br />timer.scheduleRepeating(1000);
<br /><br />}
<br /><br />}
<br /><br />Time:
<br /><br />package myGWTPortal.client;
<br />import com.google.gwt.user.client.rpc.IsSerializable;
<br />public class Time implements IsSerializable
<br />{
<br />private String time;
<br />public String getTime() { return time; }
<br />public Time(String message) { this.time = message; }
<br />public Time() { }
<br />}
<br /><br />GreetingServiceImpl:
<br /><br />package myGWTPortal.server;
<br /><br />import java.text.DateFormat;
<br /><br />import java.util.Date;
<br /><br />import myGWTPortal.client.GreetingService;
<br /><br />import myGWTPortal.client.Time;
<br /><br />import com.google.gwt.user.server.rpc.RemoteServiceServlet;
<br /><br />/**
<br /><br />* The server side implementation of the RPC service.
<br /><br />*/
<br /><br />//@SuppressWarnings(&amp;quot;serial&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />
<br /><br />public class GreetingServiceImpl extends RemoteServiceServlet implements
<br /><br />GreetingService {
<br /><br />/*
<br /><br />public String greetServer(String input) throws IllegalArgumentException {
<br /><br />System.out.println(&amp;quot;Here reached at GreetingServiceImpl:&amp;quot<img class="smiley" src="http://www.pan.net/smilies/wink.gif" alt=":)" />;
<br /><br />return &amp;quot;hi&amp;quot;;
<br /><br />}
<br /><br />*/
<br /><br />public Time getTime()
<br /><br />{
<br /><br />String out = DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.FULL).format(new Date());
<br /><br />return new Time(out);
<br /><br />}
<br /><br />}
<br /><br />default-object.xml:
<br /><br />xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
<br />DOCTYPE deployments PUBLIC
<br />&amp;quot;-//JBoss Portal//DTD Portal Object 2.6//EN&amp;quot;
<br />&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.jboss.org%2Fportal%2Fdtd%2Fportal-object_2_6.dtd%26amp%3Bquot%3B%26amp%3Bgt"target="_blank" rel="nofollow">http://www.jboss.org/portal/dtd/portal-object_2_6.dtd&amp;quot;&amp;gt</a>;
<br />&amp;lt;deployments&amp;gt;
<br />&amp;lt;deployment&amp;gt;
<br />&amp;lt;parent-ref&amp;gt;default.defaultparent-ref&amp;gt;
<br />&amp;lt;if-exists&amp;gt;overwriteif-exists&amp;gt;
<br />&amp;lt;window&amp;gt;
<br />&amp;lt;window-name&amp;gt;
<br />MyGWTPortalWindow
<br />window-name&amp;gt;
<br />&amp;lt;instance-ref&amp;gt;
<br />MyGWTPortalInstance
<br />instance-ref&amp;gt;
<br />&amp;lt;region&amp;gt;centerregion&amp;gt;
<br />&amp;lt;height&amp;gt;1height&amp;gt;
<br />&amp;lt;initial-window-state&amp;gt;maximizedinitial-window-state&amp;gt;
<br />window&amp;gt;
<br />deployment&amp;gt;
<br />deployments&amp;gt;
<br /><br />MyGWTPortal-object.xml:
<br /><br />xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
<br />&amp;lt;deployments&amp;gt;
<br />&amp;lt;deployment&amp;gt;
<br />&amp;lt;if-exists&amp;gt;overwriteif-exists&amp;gt;
<br />&amp;lt;parent-ref&amp;gt;defaultparent-ref&amp;gt;
<br />&amp;lt;page&amp;gt;
<br />&amp;lt;page-name&amp;gt;XLampage-name&amp;gt;
<br />&amp;lt;window&amp;gt;
<br />&amp;lt;window-name&amp;gt;MyGWTPortalWindowwindow-name&amp;gt;
<br />&amp;lt;instance-ref&amp;gt;MyGWTPortalInstanceinstance-ref&amp;gt;
<br />&amp;lt;region&amp;gt;leftregion&amp;gt;
<br />&amp;lt;height&amp;gt;0height&amp;gt;
<br />window&amp;gt;
<br />page&amp;gt;
<br />deployment&amp;gt;
<br />deployments&amp;gt;
<br /><br />portlet.xml:
<br /><br />xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
<br />&amp;lt;portlet-app xmlns=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fportlet%2Fportlet-app_1_0.xsd%26amp%3Bquot"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/portlet/portlet-app_1_0.xsd&amp;quot</a>;
<br />xmlns:xsi=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema-instance%26amp%3Bquot"target="_blank" rel="nofollow">http://www.w3.org/2001/XMLSchema-instance&amp;quot</a>;
<br />xsi:schemaLocation=&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fportlet%2Fportlet-app_1_0.xsd"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/portlet/portlet-app_1_0.xsd</a>
<br /><a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fxml%2Fns%2Fportlet%2Fportlet-app_1_0.xsd%26amp%3Bquot"target="_blank" rel="nofollow">http://java.sun.com/xml/ns/portlet/portlet-app_1_0.xsd&amp;quot</a>;
<br />version=&amp;quot;1.0&amp;quot;&amp;gt;
<br />&amp;lt;portlet&amp;gt;
<br />&amp;lt;portlet-name&amp;gt;MyGWTPortalportlet-name&amp;gt;
<br />&amp;lt;portlet-class&amp;gt;myGWTPortal.MyGWTPortalportlet-class&amp;gt;
<br />&amp;lt;supports&amp;gt;
<br />&amp;lt;mime-type&amp;gt;text/htmlmime-type&amp;gt;
<br />&amp;lt;portlet-mode&amp;gt;VIEWportlet-mode&amp;gt;
<br />&amp;lt;portlet-mode&amp;gt;EDITportlet-mode&amp;gt;
<br />&amp;lt;portlet-mode&amp;gt;HELPportlet-mode&amp;gt;
<br />supports&amp;gt;
<br />&amp;lt;portlet-info&amp;gt;
<br />&amp;lt;title&amp;gt;MyGWTPortal Portaltitle&amp;gt;
<br />portlet-info&amp;gt;
<br />portlet&amp;gt;
<br />portlet-app&amp;gt;
<br /><br />portlet-instances.xml:
<br /><br />xml version=&amp;quot;1.0&amp;quot; standalone=&amp;quot;yes&amp;quot;?&amp;gt;
<br />&amp;lt;deployments&amp;gt;
<br />&amp;lt;deployment&amp;gt;
<br />&amp;lt;instance&amp;gt;
<br />&amp;lt;instance-id&amp;gt;MyGWTPortalInstanceinstance-id&amp;gt;
<br />&amp;lt;portlet-ref&amp;gt;MyGWTPortalportlet-ref&amp;gt;
<br />instance&amp;gt;
<br />deployment&amp;gt;
<br />deployments&amp;gt;
<br /><br />web.xml:
<br /><br />xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
<br />DOCTYPE web-app
<br />PUBLIC &amp;quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&amp;quot;
<br />&amp;quot;<a href="http://en.pan.netcom/go/out/url=http%3A%2F%2Fjava.sun.com%2Fdtd%2Fweb-app_2_3.dtd%26amp%3Bquot%3B%26amp%3Bgt"target="_blank" rel="nofollow">http://java.sun.com/dtd/web-app_2_3.dtd&amp;quot;&amp;gt</a>;
<br />&amp;lt;web-app&amp;gt;
<br />&amp;lt;servlet&amp;gt;
<br />&amp;lt;servlet-name&amp;gt;MyGWTPortalServiceservlet-name&amp;gt;
<br />&amp;lt;servlet-class&amp;gt;
<br />myGWTPortal.server.GreetingServiceImpl
<br />servlet-class&amp;gt;
<br />servlet&amp;gt;
<br />&amp;lt;servlet-mapping&amp;gt;
<br />&amp;lt;servlet-name&amp;gt;MyGWTPortalServiceservlet-name&amp;gt;
<br />&amp;lt;url-pattern&amp;gt;/MyGWTPortalServiceurl-pattern&amp;gt;
<br />servlet-mapping&amp;gt;
<br />&amp;lt;servlet-mapping&amp;gt;
<br />&amp;lt;servlet-name&amp;gt;MyGWTPortalServiceservlet-name&amp;gt;
<br />&amp;lt;url-pattern&amp;gt;/mygwtportal/GreetingServiceurl-pattern&amp;gt;
<br />servlet-mapping&amp;gt;
<br />web-app&amp;gt;
<br /><br />MyGWTPortal.html:
<br /><br />&amp;lt;html&amp;gt;
<br />&amp;lt;head&amp;gt;
<br />&amp;lt;title&amp;gt;MyGWTPortaltitle&amp;gt;
<br />head&amp;gt;
<br />&amp;lt;body&amp;gt;
<br />&amp;lt;script language='javascript' src=&amp;quot;mygwtportal/mygwtportal.nocache.js&amp;quot;&amp;gt;script&amp;gt;
<br />&amp;lt;div id='uid'&amp;gt;div&amp;gt;
<br />body&amp;gt;
<br />html&amp;gt;
]]>
		</document>
	</documents>
</author>